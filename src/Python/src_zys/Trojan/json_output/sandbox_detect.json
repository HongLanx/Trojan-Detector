"Module(body=[ImportFrom(module='ctypes', names=[alias(name='byref'), alias(name='c_uint'), alias(name='c_ulong'), alias(name='sizeof'), alias(name='Structure'), alias(name='windll')], level=0), Import(names=[alias(name='random')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='time')]), Import(names=[alias(name='win32api')]), ClassDef(name='LAST_INPUT_INFO', bases=[Name(id='Structure', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='fields_', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='cbSize'), Name(id='c_unit', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='dwTime'), Name(id='c_ulong', ctx=Load())], ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='get_last_input', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' Determine user inactivity based on machine and user intel.')), Assign(targets=[Name(id='struct_lastinputinfo', ctx=Store())], value=Call(func=Name(id='LAST_INPUT_INFO', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='struct_lastinputinfo', ctx=Load()), attr='cbSize', ctx=Store())], value=Call(func=Name(id='sizeof', ctx=Load()), args=[Name(id='LAST_INPUT_INFO', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='user32', ctx=Load()), attr='GetLastInputInfo', ctx=Load()), args=[Call(func=Name(id='byref', ctx=Load()), args=[Name(id='struct_lastinputinfo', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='run_time', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='GetTickCount', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='elapsed', ctx=Store())], value=BinOp(left=Name(id='run_time', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='struct_lastinputinfo', ctx=Load()), attr='dwTime', ctx=Load()))), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value=\"[*] It's been \"), FormattedValue(value=Name(id='elapsed', ctx=Load()), conversion=-1), Constant(value=' milliseconds since the last event.')])], keywords=[])), Return(value=Name(id='elapsed', ctx=Load()))], decorator_list=[]), ClassDef(name='Detector', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='double_clicks', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keystrokes', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='mouse_clicks', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='get_key_press', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' Checks for keypresses or mouse clicks.')), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Constant(value=255)], keywords=[]), body=[Assign(targets=[Name(id='state', ctx=Store())], value=Call(func=Attribute(value=Name(id='win32api', ctx=Load()), attr='GetAsyncKeyState', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])), If(test=BinOp(left=Name(id='state', ctx=Load()), op=BitAnd(), right=Constant(value=1)), body=[If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='mouse_clicks', ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='i', ctx=Load()), ops=[Gt()], comparators=[Constant(value=32)]), Compare(left=Name(id='i', ctx=Load()), ops=[Lt()], comparators=[Constant(value=127)])]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='keystrokes', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[])])], orelse=[])], orelse=[]), Return(value=Constant(value=None))], decorator_list=[]), FunctionDef(name='detect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='previous_timestamp', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='first_double_click', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='double_click_threshold', ctx=Store())], value=Constant(value=0.35)), Assign(targets=[Name(id='max_double_clicks', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='max_keystrokes', ctx=Store())], value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=10), Constant(value=25)], keywords=[])), Assign(targets=[Name(id='max_mouse_clicks', ctx=Store())], value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=5), Constant(value=25)], keywords=[])), Assign(targets=[Name(id='max_input_threshold', ctx=Store())], value=Constant(value=30000)), Assign(targets=[Name(id='last_input', ctx=Store())], value=Call(func=Name(id='get_last_input', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='last_input', ctx=Load()), ops=[GtE()], comparators=[Name(id='max_input_threshold', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value=0)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='detection_complete', ctx=Store())], value=Constant(value=False)), While(test=UnaryOp(op=Not(), operand=Name(id='detection_complete', ctx=Load())), body=[Assign(targets=[Name(id='keypress_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_key_press', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='keypress_time', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='previous_timestamp', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='elapsed', ctx=Store())], value=BinOp(left=Name(id='keypress_time', ctx=Load()), op=Sub(), right=Name(id='previous_timestamp', ctx=Load()))), If(test=Compare(left=Name(id='elapsed', ctx=Load()), ops=[LtE()], comparators=[Name(id='double_click_threshold', ctx=Load())]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='mouse_clicks', ctx=Store()), op=Sub(), value=Constant(value=2)), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='double_clicks', ctx=Store()), op=Add(), value=Constant(value=1)), If(test=Compare(left=Name(id='first_double_click', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='first_double_click', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='double_clicks', ctx=Load()), ops=[GtE()], comparators=[Name(id='max_double_clicks', ctx=Load())]), body=[If(test=Compare(left=BinOp(left=Name(id='keypress_time', ctx=Load()), op=Sub(), right=Name(id='first_double_click', ctx=Load())), ops=[LtE()], comparators=[BinOp(left=Name(id='max_double_clicks', ctx=Load()), op=Mult(), right=Name(id='double_click_threshold', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value=0)], keywords=[]))], orelse=[])], orelse=[])])], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='keystrokes', ctx=Load()), ops=[GtE()], comparators=[Name(id='max_keystrokes', ctx=Load())]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='double_clicks', ctx=Load()), ops=[GtE()], comparators=[Name(id='max_double_clicks', ctx=Load())]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='mouse_clicks', ctx=Load()), ops=[GtE()], comparators=[Name(id='max_mouse_clicks', ctx=Load())])]), body=[Assign(targets=[Name(id='detection_complete', ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='previous_timestamp', ctx=Store())], value=Name(id='keypress_time', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='keypress_time', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='previous_timestamp', ctx=Store())], value=Name(id='keypress_time', ctx=Load()))], orelse=[])])], orelse=[])], decorator_list=[])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Name(id='Detector', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='detect', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='okay.')], keywords=[]))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='run', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])"