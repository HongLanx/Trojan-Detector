"Module(body=[Expr(value=Constant(value=\"\\nCameron Padua\\nGroup Project\\nfileMaker\\n\\nThis script will create different network shapes files. Currently it supports\\nstar, mesh, fully connected, line, and tree. If you would like to create an \\nindividual file, you call the method responsible for creating it. By default, \\neach method will create a network with 10 nodes that are bidirectional. If you\\npass in an integer value to the method, you can vary the size of the number of\\nnodes. Additionally, you can call the main method to create every type of network\\nfile. By default, they will all have 10 nodes, but if you pass a integer value,\\nyou can vary the size.\\n\\nNote: Code written for Python 3.6\\n\\n\\nNotes to Use:\\n    import fileMaker\\n    call individual methods\\n        Example\\n        fileMaker.star(n)\\n\\n\\n    IGNORE, ONLY USE IF YOU UN-COMMENT EVAL LINE AT THE BOTTOM\\n    if you are in a linux enviroment, make sure to chmod +x the file\\n    run the script by using ./fileMaker 'method()'\\n    for example ./fileMaker 'main(14)' or ./fileMaker 'star(14)'\\n    \\n    if you are using Windows, you will need to do something like (I think)\\n    pyhton fileMaker.py 'method(10)'\\n\")), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='random')]), Import(names=[alias(name='sys')]), FunctionDef(name='line', args=arguments(posonlyargs=[], args=[arg(arg='maxNode')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='maxNode', ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Cannot create shape with 1 node')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='line.txt')), Assign(targets=[Name(id='File', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='fileName', ctx=Load()), Constant(value='w')], keywords=[])), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Name(id='maxNode', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='x', ctx=Load()), BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Line File made. File is named '), Name(id='fileName', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fullConnected', args=arguments(posonlyargs=[], args=[arg(arg='maxNode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[If(test=Compare(left=Name(id='maxNode', ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Cannot create shape with 1 node')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='record', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1)), BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1))], ctx=Load())], keywords=[keyword(arg='dtype', value=Name(id='bool', ctx=Load()))])), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='fullconnect.txt')), Assign(targets=[Name(id='File', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='fileName', ctx=Load()), Constant(value='w')], keywords=[])), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Name(id='maxNode', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='x', ctx=Load()), BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='x', ctx=Load()), BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Constant(value=1))], ctx=Load()), ctx=Store())], value=Constant(value=True)), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Constant(value=1)), Name(id='x', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True)), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='x', ctx=Load()), Name(id='x', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='maxNode', ctx=Load()), Name(id='maxNode', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True)), For(target=Name(id='y', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), body=[For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), body=[If(test=Compare(left=Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='y', ctx=Load()), Name(id='x', ctx=Load())], ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Constant(value=False)]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='x', ctx=Load()), Name(id='y', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='y', ctx=Load()), Name(id='x', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True)), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='x', ctx=Load()), Name(id='y', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True))], orelse=[])], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Fully connected File made. File is named '), Name(id='fileName', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='mesh', args=arguments(posonlyargs=[], args=[arg(arg='maxNode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[If(test=Compare(left=Name(id='maxNode', ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Cannot create shape with 1 node')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='record', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1)), BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1))], ctx=Load())], keywords=[keyword(arg='dtype', value=Name(id='bool', ctx=Load()))])), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='mesh.txt')), Assign(targets=[Name(id='File', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='fileName', ctx=Load()), Constant(value='w')], keywords=[])), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Name(id='maxNode', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='x', ctx=Load()), Name(id='x', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='maxNode', ctx=Load()), Name(id='maxNode', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True)), For(target=Name(id='y', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), body=[For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), BinOp(left=Name(id='maxNode', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='random', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[Constant(value=0.8)]), body=[If(test=Compare(left=Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='y', ctx=Load()), Name(id='x', ctx=Load())], ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Constant(value=False)]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='x', ctx=Load()), Name(id='y', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='y', ctx=Load()), Name(id='x', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True)), Assign(targets=[Subscript(value=Name(id='record', ctx=Load()), slice=Tuple(elts=[Name(id='x', ctx=Load()), Name(id='y', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=True))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='ring', args=arguments(posonlyargs=[], args=[arg(arg='maxNode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[If(test=Compare(left=Name(id='maxNode', ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Cannot create shape with 1 node')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='ring.txt')), Assign(targets=[Name(id='File', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='fileName', ctx=Load()), Constant(value='w')], keywords=[])), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Name(id='maxNode', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='x', ctx=Load()), BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='maxNode', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Ring File made. File is named '), Name(id='fileName', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='star', args=arguments(posonlyargs=[], args=[arg(arg='maxNode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[If(test=Compare(left=Name(id='maxNode', ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Cannot create shape with 1 node')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='star.txt')), Assign(targets=[Name(id='File', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='fileName', ctx=Load()), Constant(value='w')], keywords=[])), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Name(id='maxNode', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Constant(value=1), BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Star File made. File is named '), Name(id='fileName', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='tree', args=arguments(posonlyargs=[], args=[arg(arg='maxNode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[If(test=Compare(left=Name(id='maxNode', ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Cannot create shape with 1 node')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='tree.txt')), Assign(targets=[Name(id='File', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='fileName', ctx=Load()), Constant(value='w')], keywords=[])), Assign(targets=[Name(id='currentNode', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='currentMaxNode', ctx=Store())], value=Constant(value=2)), While(test=Compare(left=Name(id='currentMaxNode', ctx=Load()), ops=[LtE()], comparators=[Name(id='maxNode', ctx=Load())]), body=[If(test=Compare(left=BinOp(left=Name(id='currentNode', ctx=Load()), op=Mult(), right=Constant(value=2)), ops=[LtE()], comparators=[Name(id='maxNode', ctx=Load())]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='currentNode', ctx=Load()), Name(id='currentMaxNode', ctx=Load())], keywords=[])), AugAssign(target=Name(id='currentMaxNode', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), If(test=Compare(left=BinOp(left=BinOp(left=Name(id='currentNode', ctx=Load()), op=Mult(), right=Constant(value=2)), op=Add(), right=Constant(value=1)), ops=[LtE()], comparators=[Name(id='maxNode', ctx=Load())]), body=[Expr(value=Call(func=Name(id='writePairs', ctx=Load()), args=[Name(id='File', ctx=Load()), Name(id='currentNode', ctx=Load()), Name(id='currentMaxNode', ctx=Load())], keywords=[])), AugAssign(target=Name(id='currentMaxNode', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), AugAssign(target=Name(id='currentNode', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Tree File made. File is named '), Name(id='fileName', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='writePairs', args=arguments(posonlyargs=[], args=[arg(arg='File'), arg(arg='val1'), arg(arg='val2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\\n    Writes a pair of integers to a file.\\n    \\n    Input: File: a file object to write to. \\n           val1: an integer to write to the file\\n           va12: an integer to write to the file\\n    Return: Nothing\\n    \\n    ')), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='val1', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\\t')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='val2', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='File', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\\n')], keywords=[]))], decorator_list=[]), FunctionDef(name='main', args=arguments(posonlyargs=[], args=[arg(arg='maxNumber')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[Expr(value=Call(func=Name(id='line', ctx=Load()), args=[Name(id='maxNumber', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='ring', ctx=Load()), args=[Name(id='maxNumber', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='star', ctx=Load()), args=[Name(id='maxNumber', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='tree', ctx=Load()), args=[Name(id='maxNumber', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='fullConnected', ctx=Load()), args=[Name(id='maxNumber', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='mesh', ctx=Load()), args=[Name(id='maxNumber', ctx=Load())], keywords=[]))], decorator_list=[])], type_ignores=[])"