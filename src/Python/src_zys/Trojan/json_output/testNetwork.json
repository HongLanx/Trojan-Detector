"Module(body=[Expr(value=Constant(value='\\ntestNetwork.py\\n\\nDescription: This file is meant to test if the Network class is correctly \\n            creating the networks from the text files. It does this by \\n            creating the files with a certain number of nodes and comparing it \\n            to the number of nodes in the network.\\n\\nNotes: Because a network cannot have less than 2 nodes, each network starts at\\n        2 nodes and increments by 1 until 100.\\n')), Import(names=[alias(name='Network', asname='net')]), ImportFrom(module='time', names=[alias(name='sleep')], level=0), Import(names=[alias(name='fileMaker')]), For(target=Name(id='networkShape', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Constant(value=9)], keywords=[]), body=[Assign(targets=[Name(id='maker', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Attribute(value=Name(id='net', ctx=Load()), attr='Network', ctx=Load()), args=[Name(id='networkShape', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='maker', ctx=Store())], value=Attribute(value=Name(id='fileMaker', ctx=Load()), attr='ring', ctx=Load())), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='ring.txt'))], orelse=[If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), body=[Assign(targets=[Name(id='maker', ctx=Store())], value=Attribute(value=Name(id='fileMaker', ctx=Load()), attr='star', ctx=Load())), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='star.txt'))], orelse=[If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=3)]), body=[Assign(targets=[Name(id='maker', ctx=Store())], value=Attribute(value=Name(id='fileMaker', ctx=Load()), attr='mesh', ctx=Load())), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='mesh.txt'))], orelse=[If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=4)]), body=[Assign(targets=[Name(id='maker', ctx=Store())], value=Attribute(value=Name(id='fileMaker', ctx=Load()), attr='fullConnected', ctx=Load())), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='fullconnect.txt'))], orelse=[If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=5)]), body=[Continue()], orelse=[If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=6)]), body=[Continue()], orelse=[If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=7)]), body=[Assign(targets=[Name(id='maker', ctx=Store())], value=Attribute(value=Name(id='fileMaker', ctx=Load()), attr='line', ctx=Load())), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='line.txt'))], orelse=[If(test=Compare(left=Name(id='networkShape', ctx=Load()), ops=[Eq()], comparators=[Constant(value=8)]), body=[Assign(targets=[Name(id='maker', ctx=Store())], value=Attribute(value=Name(id='fileMaker', ctx=Load()), attr='tree', ctx=Load())), Assign(targets=[Name(id='fileName', ctx=Store())], value=Constant(value='tree.txt'))], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Tests Failed, Invalid shape')], keywords=[])), Break()])])])])])])])]), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2), Constant(value=101), Constant(value=1)], keywords=[]), body=[Expr(value=Call(func=Name(id='maker', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='network', ctx=Load()), attr='createnetwork', ctx=Load()), args=[Name(id='fileName', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='network', ctx=Load()), attr='nodes', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='x', ctx=Load())]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Test'), Call(func=Name(id='str', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), Constant(value='Passed')], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Test'), Call(func=Name(id='str', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), Constant(value='Failed')], keywords=[])), Break()])], orelse=[])], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Network Tests Completed')], keywords=[]))], type_ignores=[])"