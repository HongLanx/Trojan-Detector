# Name: command-line-arguments.init
# Package: command-line-arguments
# Synthetic: package initializer
func init():
0:                                                                entry P:0 S:2
	t0 = *init$guard                                                   bool
	if t0 goto 2 else 1
1:                                                           init.start P:1 S:1
	*init$guard = true:bool
	t1 = os.init()                                                       ()
	jump 2
2:                                                            init.done P:2 S:0
	return

# Name: command-line-arguments.IsFile
# Package: command-line-arguments
# Location: E:\Trojan Detector\Trojan-Detector\src\Golang\test\加密器\AES加密器\fileutils.go:8:6
func IsFile(file string) bool:
0:                                                                entry P:0 S:2
	t0 = os.Stat(file)                                 (os.FileInfo, error)
	t1 = extract t0 #0                                          os.FileInfo
	t2 = extract t0 #1                                                error
	t3 = t2 != nil:error                                               bool
	if t3 goto 1 else 3
1:                                                              if.then P:2 S:0
	return false:bool
2:                                                              if.done P:1 S:0
	return true:bool
3:                                                           cond.false P:1 S:2
	t4 = invoke t1.IsDir()                                             bool
	if t4 goto 1 else 2

# Name: command-line-arguments.FileSize
# Package: command-line-arguments
# Location: E:\Trojan Detector\Trojan-Detector\src\Golang\test\加密器\AES加密器\fileutils.go:18:6
func FileSize(file string) (int64, error):
0:                                                                entry P:0 S:2
	t0 = os.Stat(file)                                 (os.FileInfo, error)
	t1 = extract t0 #0                                          os.FileInfo
	t2 = extract t0 #1                                                error
	t3 = t2 != nil:error                                               bool
	if t3 goto 1 else 2
1:                                                              if.then P:1 S:0
	return -1:int64, t2
2:                                                              if.done P:1 S:0
	t4 = invoke t1.Size()                                             int64
	return t4, nil:error

