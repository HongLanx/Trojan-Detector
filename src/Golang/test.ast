     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: test.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: test.go:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 4) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: test.go:3:1
    12  .  .  .  Tok: import
    13  .  .  .  Lparen: test.go:3:8
    14  .  .  .  Specs: []ast.Spec (len = 9) {
    15  .  .  .  .  0: *ast.ImportSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Name: nil
    18  .  .  .  .  .  Path: *ast.BasicLit {
    19  .  .  .  .  .  .  ValuePos: test.go:4:2
    20  .  .  .  .  .  .  Kind: STRING
    21  .  .  .  .  .  .  Value: "\"net/http\""
    22  .  .  .  .  .  }
    23  .  .  .  .  .  Comment: nil
    24  .  .  .  .  .  EndPos: -
    25  .  .  .  .  }
    26  .  .  .  .  1: *ast.ImportSpec {
    27  .  .  .  .  .  Doc: nil
    28  .  .  .  .  .  Name: nil
    29  .  .  .  .  .  Path: *ast.BasicLit {
    30  .  .  .  .  .  .  ValuePos: test.go:5:2
    31  .  .  .  .  .  .  Kind: STRING
    32  .  .  .  .  .  .  Value: "\"github.com/gobuffalo/packr\""
    33  .  .  .  .  .  }
    34  .  .  .  .  .  Comment: nil
    35  .  .  .  .  .  EndPos: -
    36  .  .  .  .  }
    37  .  .  .  .  2: *ast.ImportSpec {
    38  .  .  .  .  .  Doc: nil
    39  .  .  .  .  .  Name: nil
    40  .  .  .  .  .  Path: *ast.BasicLit {
    41  .  .  .  .  .  .  ValuePos: test.go:6:2
    42  .  .  .  .  .  .  Kind: STRING
    43  .  .  .  .  .  .  Value: "\"io\""
    44  .  .  .  .  .  }
    45  .  .  .  .  .  Comment: nil
    46  .  .  .  .  .  EndPos: -
    47  .  .  .  .  }
    48  .  .  .  .  3: *ast.ImportSpec {
    49  .  .  .  .  .  Doc: nil
    50  .  .  .  .  .  Name: nil
    51  .  .  .  .  .  Path: *ast.BasicLit {
    52  .  .  .  .  .  .  ValuePos: test.go:7:5
    53  .  .  .  .  .  .  Kind: STRING
    54  .  .  .  .  .  .  Value: "\"os/exec\""
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Comment: nil
    57  .  .  .  .  .  EndPos: -
    58  .  .  .  .  }
    59  .  .  .  .  4: *ast.ImportSpec {
    60  .  .  .  .  .  Doc: nil
    61  .  .  .  .  .  Name: nil
    62  .  .  .  .  .  Path: *ast.BasicLit {
    63  .  .  .  .  .  .  ValuePos: test.go:8:5
    64  .  .  .  .  .  .  Kind: STRING
    65  .  .  .  .  .  .  Value: "\"fmt\""
    66  .  .  .  .  .  }
    67  .  .  .  .  .  Comment: nil
    68  .  .  .  .  .  EndPos: -
    69  .  .  .  .  }
    70  .  .  .  .  5: *ast.ImportSpec {
    71  .  .  .  .  .  Doc: nil
    72  .  .  .  .  .  Name: nil
    73  .  .  .  .  .  Path: *ast.BasicLit {
    74  .  .  .  .  .  .  ValuePos: test.go:9:5
    75  .  .  .  .  .  .  Kind: STRING
    76  .  .  .  .  .  .  Value: "\"os\""
    77  .  .  .  .  .  }
    78  .  .  .  .  .  Comment: nil
    79  .  .  .  .  .  EndPos: -
    80  .  .  .  .  }
    81  .  .  .  .  6: *ast.ImportSpec {
    82  .  .  .  .  .  Doc: nil
    83  .  .  .  .  .  Name: nil
    84  .  .  .  .  .  Path: *ast.BasicLit {
    85  .  .  .  .  .  .  ValuePos: test.go:10:5
    86  .  .  .  .  .  .  Kind: STRING
    87  .  .  .  .  .  .  Value: "\"syscall\""
    88  .  .  .  .  .  }
    89  .  .  .  .  .  Comment: nil
    90  .  .  .  .  .  EndPos: -
    91  .  .  .  .  }
    92  .  .  .  .  7: *ast.ImportSpec {
    93  .  .  .  .  .  Doc: nil
    94  .  .  .  .  .  Name: nil
    95  .  .  .  .  .  Path: *ast.BasicLit {
    96  .  .  .  .  .  .  ValuePos: test.go:11:5
    97  .  .  .  .  .  .  Kind: STRING
    98  .  .  .  .  .  .  Value: "\"os/user\""
    99  .  .  .  .  .  }
   100  .  .  .  .  .  Comment: nil
   101  .  .  .  .  .  EndPos: -
   102  .  .  .  .  }
   103  .  .  .  .  8: *ast.ImportSpec {
   104  .  .  .  .  .  Doc: nil
   105  .  .  .  .  .  Name: nil
   106  .  .  .  .  .  Path: *ast.BasicLit {
   107  .  .  .  .  .  .  ValuePos: test.go:12:5
   108  .  .  .  .  .  .  Kind: STRING
   109  .  .  .  .  .  .  Value: "\"log\""
   110  .  .  .  .  .  }
   111  .  .  .  .  .  Comment: nil
   112  .  .  .  .  .  EndPos: -
   113  .  .  .  .  }
   114  .  .  .  }
   115  .  .  .  Rparen: test.go:13:1
   116  .  .  }
   117  .  .  1: *ast.FuncDecl {
   118  .  .  .  Doc: *ast.CommentGroup {
   119  .  .  .  .  List: []*ast.Comment (len = 1) {
   120  .  .  .  .  .  0: *ast.Comment {
   121  .  .  .  .  .  .  Slash: test.go:16:1
   122  .  .  .  .  .  .  Text: "//GOOS=windows GOARCH=amd64 packr build -ldflags \"-H=windowsgui -s -w\""
   123  .  .  .  .  .  }
   124  .  .  .  .  }
   125  .  .  .  }
   126  .  .  .  Recv: nil
   127  .  .  .  Name: *ast.Ident {
   128  .  .  .  .  NamePos: test.go:17:6
   129  .  .  .  .  Name: "main"
   130  .  .  .  .  Obj: *ast.Object {
   131  .  .  .  .  .  Kind: func
   132  .  .  .  .  .  Name: "main"
   133  .  .  .  .  .  Decl: *(obj @ 117)
   134  .  .  .  .  .  Data: nil
   135  .  .  .  .  .  Type: nil
   136  .  .  .  .  }
   137  .  .  .  }
   138  .  .  .  Type: *ast.FuncType {
   139  .  .  .  .  Func: test.go:17:1
   140  .  .  .  .  TypeParams: nil
   141  .  .  .  .  Params: *ast.FieldList {
   142  .  .  .  .  .  Opening: test.go:17:10
   143  .  .  .  .  .  List: nil
   144  .  .  .  .  .  Closing: test.go:17:11
   145  .  .  .  .  }
   146  .  .  .  .  Results: nil
   147  .  .  .  }
   148  .  .  .  Body: *ast.BlockStmt {
   149  .  .  .  .  Lbrace: test.go:17:13
   150  .  .  .  .  List: []ast.Stmt (len = 22) {
   151  .  .  .  .  .  0: *ast.GoStmt {
   152  .  .  .  .  .  .  Go: test.go:18:2
   153  .  .  .  .  .  .  Call: *ast.CallExpr {
   154  .  .  .  .  .  .  .  Fun: *ast.Ident {
   155  .  .  .  .  .  .  .  .  NamePos: test.go:18:5
   156  .  .  .  .  .  .  .  .  Name: "HostFiles"
   157  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   158  .  .  .  .  .  .  .  .  .  Kind: func
   159  .  .  .  .  .  .  .  .  .  Name: "HostFiles"
   160  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
   161  .  .  .  .  .  .  .  .  .  .  Doc: nil
   162  .  .  .  .  .  .  .  .  .  .  Recv: nil
   163  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   164  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:55:6
   165  .  .  .  .  .  .  .  .  .  .  .  Name: "HostFiles"
   166  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 157)
   167  .  .  .  .  .  .  .  .  .  .  }
   168  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   169  .  .  .  .  .  .  .  .  .  .  .  Func: test.go:55:1
   170  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil
   171  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   172  .  .  .  .  .  .  .  .  .  .  .  .  Opening: test.go:55:15
   173  .  .  .  .  .  .  .  .  .  .  .  .  List: nil
   174  .  .  .  .  .  .  .  .  .  .  .  .  Closing: test.go:55:16
   175  .  .  .  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  .  .  .  .  Results: nil
   177  .  .  .  .  .  .  .  .  .  .  }
   178  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   179  .  .  .  .  .  .  .  .  .  .  .  Lbrace: test.go:55:17
   180  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {
   181  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   182  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:56:2
   185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "box"
   186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "box"
   189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 181)
   190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   194  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   195  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: test.go:56:6
   196  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   197  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:56:9
   202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "packr"
   203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:56:15
   207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "NewBox"
   208  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   209  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   210  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:56:21
   212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   213  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   214  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:56:22
   215  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   216  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"./bin\""
   217  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   218  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   219  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   220  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:56:29
   221  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   222  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   223  .  .  .  .  .  .  .  .  .  .  .  .  }
   224  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ExprStmt {
   225  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   226  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   227  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   228  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:57:2
   229  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "http"
   230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   231  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   233  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:57:7
   234  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Handle"
   235  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   236  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   238  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:57:13
   239  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   240  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   241  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:57:14
   242  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   243  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"/\""
   244  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   245  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
   246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:57:19
   249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "http"
   250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:57:24
   254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "FileServer"
   255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:57:34
   259  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   260  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   261  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:57:35
   262  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "box"
   263  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 186)
   264  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   265  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   266  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   267  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:57:38
   268  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   270  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   271  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:57:39
   272  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   273  .  .  .  .  .  .  .  .  .  .  .  .  }
   274  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.ExprStmt {
   275  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   276  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   277  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   278  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:58:2
   279  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "http"
   280  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   281  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   283  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:58:7
   284  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ListenAndServe"
   285  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   286  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   287  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:58:21
   289  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   290  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   291  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:58:22
   292  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   293  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\":3001\""
   294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   296  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:58:31
   297  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   298  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   299  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   301  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   302  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:58:34
   303  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   304  .  .  .  .  .  .  .  .  .  .  .  .  }
   305  .  .  .  .  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  .  .  .  .  Rbrace: test.go:59:1
   307  .  .  .  .  .  .  .  .  .  .  }
   308  .  .  .  .  .  .  .  .  .  }
   309  .  .  .  .  .  .  .  .  .  Data: nil
   310  .  .  .  .  .  .  .  .  .  Type: nil
   311  .  .  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  .  }
   313  .  .  .  .  .  .  .  Lparen: test.go:18:14
   314  .  .  .  .  .  .  .  Args: nil
   315  .  .  .  .  .  .  .  Ellipsis: -
   316  .  .  .  .  .  .  .  Rparen: test.go:18:15
   317  .  .  .  .  .  .  }
   318  .  .  .  .  .  }
   319  .  .  .  .  .  1: *ast.AssignStmt {
   320  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   321  .  .  .  .  .  .  .  0: *ast.Ident {
   322  .  .  .  .  .  .  .  .  NamePos: test.go:19:2
   323  .  .  .  .  .  .  .  .  Name: "exfilurl"
   324  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   325  .  .  .  .  .  .  .  .  .  Kind: var
   326  .  .  .  .  .  .  .  .  .  Name: "exfilurl"
   327  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 319)
   328  .  .  .  .  .  .  .  .  .  Data: nil
   329  .  .  .  .  .  .  .  .  .  Type: nil
   330  .  .  .  .  .  .  .  .  }
   331  .  .  .  .  .  .  .  }
   332  .  .  .  .  .  .  }
   333  .  .  .  .  .  .  TokPos: test.go:19:11
   334  .  .  .  .  .  .  Tok: :=
   335  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   336  .  .  .  .  .  .  .  0: *ast.BasicLit {
   337  .  .  .  .  .  .  .  .  ValuePos: test.go:19:14
   338  .  .  .  .  .  .  .  .  Kind: STRING
   339  .  .  .  .  .  .  .  .  Value: "\"http://127.0.0.1:3001/e.exe\""
   340  .  .  .  .  .  .  .  }
   341  .  .  .  .  .  .  }
   342  .  .  .  .  .  }
   343  .  .  .  .  .  2: *ast.AssignStmt {
   344  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   345  .  .  .  .  .  .  .  0: *ast.Ident {
   346  .  .  .  .  .  .  .  .  NamePos: test.go:20:5
   347  .  .  .  .  .  .  .  .  Name: "outlookurl"
   348  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   349  .  .  .  .  .  .  .  .  .  Kind: var
   350  .  .  .  .  .  .  .  .  .  Name: "outlookurl"
   351  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 343)
   352  .  .  .  .  .  .  .  .  .  Data: nil
   353  .  .  .  .  .  .  .  .  .  Type: nil
   354  .  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  TokPos: test.go:20:16
   358  .  .  .  .  .  .  Tok: :=
   359  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   360  .  .  .  .  .  .  .  0: *ast.BasicLit {
   361  .  .  .  .  .  .  .  .  ValuePos: test.go:20:19
   362  .  .  .  .  .  .  .  .  Kind: STRING
   363  .  .  .  .  .  .  .  .  Value: "\"http://127.0.0.1:3001/o.exe\""
   364  .  .  .  .  .  .  .  }
   365  .  .  .  .  .  .  }
   366  .  .  .  .  .  }
   367  .  .  .  .  .  3: *ast.AssignStmt {
   368  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   369  .  .  .  .  .  .  .  0: *ast.Ident {
   370  .  .  .  .  .  .  .  .  NamePos: test.go:21:5
   371  .  .  .  .  .  .  .  .  Name: "screenurl"
   372  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   373  .  .  .  .  .  .  .  .  .  Kind: var
   374  .  .  .  .  .  .  .  .  .  Name: "screenurl"
   375  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 367)
   376  .  .  .  .  .  .  .  .  .  Data: nil
   377  .  .  .  .  .  .  .  .  .  Type: nil
   378  .  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  .  }
   380  .  .  .  .  .  .  }
   381  .  .  .  .  .  .  TokPos: test.go:21:15
   382  .  .  .  .  .  .  Tok: :=
   383  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   384  .  .  .  .  .  .  .  0: *ast.BasicLit {
   385  .  .  .  .  .  .  .  .  ValuePos: test.go:21:18
   386  .  .  .  .  .  .  .  .  Kind: STRING
   387  .  .  .  .  .  .  .  .  Value: "\"http://127.0.0.1:3001/s.exe\""
   388  .  .  .  .  .  .  .  }
   389  .  .  .  .  .  .  }
   390  .  .  .  .  .  }
   391  .  .  .  .  .  4: *ast.AssignStmt {
   392  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   393  .  .  .  .  .  .  .  0: *ast.Ident {
   394  .  .  .  .  .  .  .  .  NamePos: test.go:22:5
   395  .  .  .  .  .  .  .  .  Name: "usr"
   396  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   397  .  .  .  .  .  .  .  .  .  Kind: var
   398  .  .  .  .  .  .  .  .  .  Name: "usr"
   399  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 391)
   400  .  .  .  .  .  .  .  .  .  Data: nil
   401  .  .  .  .  .  .  .  .  .  Type: nil
   402  .  .  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  .  }
   404  .  .  .  .  .  .  .  1: *ast.Ident {
   405  .  .  .  .  .  .  .  .  NamePos: test.go:22:10
   406  .  .  .  .  .  .  .  .  Name: "err"
   407  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   408  .  .  .  .  .  .  .  .  .  Kind: var
   409  .  .  .  .  .  .  .  .  .  Name: "err"
   410  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 391)
   411  .  .  .  .  .  .  .  .  .  Data: nil
   412  .  .  .  .  .  .  .  .  .  Type: nil
   413  .  .  .  .  .  .  .  .  }
   414  .  .  .  .  .  .  .  }
   415  .  .  .  .  .  .  }
   416  .  .  .  .  .  .  TokPos: test.go:22:14
   417  .  .  .  .  .  .  Tok: :=
   418  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   419  .  .  .  .  .  .  .  0: *ast.CallExpr {
   420  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   421  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   422  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:22:17
   423  .  .  .  .  .  .  .  .  .  .  Name: "user"
   424  .  .  .  .  .  .  .  .  .  .  Obj: nil
   425  .  .  .  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   427  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:22:22
   428  .  .  .  .  .  .  .  .  .  .  Name: "Current"
   429  .  .  .  .  .  .  .  .  .  .  Obj: nil
   430  .  .  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  .  .  Lparen: test.go:22:29
   433  .  .  .  .  .  .  .  .  Args: nil
   434  .  .  .  .  .  .  .  .  Ellipsis: -
   435  .  .  .  .  .  .  .  .  Rparen: test.go:22:30
   436  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  }
   438  .  .  .  .  .  }
   439  .  .  .  .  .  5: *ast.IfStmt {
   440  .  .  .  .  .  .  If: test.go:23:5
   441  .  .  .  .  .  .  Init: nil
   442  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   443  .  .  .  .  .  .  .  X: *ast.Ident {
   444  .  .  .  .  .  .  .  .  NamePos: test.go:23:8
   445  .  .  .  .  .  .  .  .  Name: "err"
   446  .  .  .  .  .  .  .  .  Obj: *(obj @ 407)
   447  .  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  .  OpPos: test.go:23:12
   449  .  .  .  .  .  .  .  Op: !=
   450  .  .  .  .  .  .  .  Y: *ast.Ident {
   451  .  .  .  .  .  .  .  .  NamePos: test.go:23:15
   452  .  .  .  .  .  .  .  .  Name: "nil"
   453  .  .  .  .  .  .  .  .  Obj: nil
   454  .  .  .  .  .  .  .  }
   455  .  .  .  .  .  .  }
   456  .  .  .  .  .  .  Body: *ast.BlockStmt {
   457  .  .  .  .  .  .  .  Lbrace: test.go:23:19
   458  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   459  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   460  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   461  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   462  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   463  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:24:9
   464  .  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
   465  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   466  .  .  .  .  .  .  .  .  .  .  .  }
   467  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   468  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:24:13
   469  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   470  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   471  .  .  .  .  .  .  .  .  .  .  .  }
   472  .  .  .  .  .  .  .  .  .  .  }
   473  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:24:20
   474  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   475  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   476  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:24:22
   477  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   478  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 407)
   479  .  .  .  .  .  .  .  .  .  .  .  }
   480  .  .  .  .  .  .  .  .  .  .  }
   481  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   482  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:24:26
   483  .  .  .  .  .  .  .  .  .  }
   484  .  .  .  .  .  .  .  .  }
   485  .  .  .  .  .  .  .  }
   486  .  .  .  .  .  .  .  Rbrace: test.go:25:5
   487  .  .  .  .  .  .  }
   488  .  .  .  .  .  .  Else: nil
   489  .  .  .  .  .  }
   490  .  .  .  .  .  6: *ast.ExprStmt {
   491  .  .  .  .  .  .  X: *ast.CallExpr {
   492  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   493  .  .  .  .  .  .  .  .  X: *ast.Ident {
   494  .  .  .  .  .  .  .  .  .  NamePos: test.go:26:5
   495  .  .  .  .  .  .  .  .  .  Name: "fmt"
   496  .  .  .  .  .  .  .  .  .  Obj: nil
   497  .  .  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   499  .  .  .  .  .  .  .  .  .  NamePos: test.go:26:9
   500  .  .  .  .  .  .  .  .  .  Name: "Println"
   501  .  .  .  .  .  .  .  .  .  Obj: nil
   502  .  .  .  .  .  .  .  .  }
   503  .  .  .  .  .  .  .  }
   504  .  .  .  .  .  .  .  Lparen: test.go:26:16
   505  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   506  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   507  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   508  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:26:18
   509  .  .  .  .  .  .  .  .  .  .  Name: "usr"
   510  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   511  .  .  .  .  .  .  .  .  .  }
   512  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   513  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:26:22
   514  .  .  .  .  .  .  .  .  .  .  Name: "HomeDir"
   515  .  .  .  .  .  .  .  .  .  .  Obj: nil
   516  .  .  .  .  .  .  .  .  .  }
   517  .  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  .  Ellipsis: -
   520  .  .  .  .  .  .  .  Rparen: test.go:26:30
   521  .  .  .  .  .  .  }
   522  .  .  .  .  .  }
   523  .  .  .  .  .  7: *ast.AssignStmt {
   524  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   525  .  .  .  .  .  .  .  0: *ast.Ident {
   526  .  .  .  .  .  .  .  .  NamePos: test.go:27:5
   527  .  .  .  .  .  .  .  .  Name: "exfloc"
   528  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   529  .  .  .  .  .  .  .  .  .  Kind: var
   530  .  .  .  .  .  .  .  .  .  Name: "exfloc"
   531  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 523)
   532  .  .  .  .  .  .  .  .  .  Data: nil
   533  .  .  .  .  .  .  .  .  .  Type: nil
   534  .  .  .  .  .  .  .  .  }
   535  .  .  .  .  .  .  .  }
   536  .  .  .  .  .  .  }
   537  .  .  .  .  .  .  TokPos: test.go:27:12
   538  .  .  .  .  .  .  Tok: :=
   539  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   540  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   541  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   542  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   543  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:27:15
   544  .  .  .  .  .  .  .  .  .  .  Name: "usr"
   545  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   546  .  .  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   548  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:27:19
   549  .  .  .  .  .  .  .  .  .  .  Name: "HomeDir"
   550  .  .  .  .  .  .  .  .  .  .  Obj: nil
   551  .  .  .  .  .  .  .  .  .  }
   552  .  .  .  .  .  .  .  .  }
   553  .  .  .  .  .  .  .  .  OpPos: test.go:27:27
   554  .  .  .  .  .  .  .  .  Op: +
   555  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   556  .  .  .  .  .  .  .  .  .  ValuePos: test.go:27:29
   557  .  .  .  .  .  .  .  .  .  Kind: STRING
   558  .  .  .  .  .  .  .  .  .  Value: "\"\\\\Desktop\\\\e.exe\""
   559  .  .  .  .  .  .  .  .  }
   560  .  .  .  .  .  .  .  }
   561  .  .  .  .  .  .  }
   562  .  .  .  .  .  }
   563  .  .  .  .  .  8: *ast.AssignStmt {
   564  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   565  .  .  .  .  .  .  .  0: *ast.Ident {
   566  .  .  .  .  .  .  .  .  NamePos: test.go:28:5
   567  .  .  .  .  .  .  .  .  Name: "outloc"
   568  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   569  .  .  .  .  .  .  .  .  .  Kind: var
   570  .  .  .  .  .  .  .  .  .  Name: "outloc"
   571  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 563)
   572  .  .  .  .  .  .  .  .  .  Data: nil
   573  .  .  .  .  .  .  .  .  .  Type: nil
   574  .  .  .  .  .  .  .  .  }
   575  .  .  .  .  .  .  .  }
   576  .  .  .  .  .  .  }
   577  .  .  .  .  .  .  TokPos: test.go:28:12
   578  .  .  .  .  .  .  Tok: :=
   579  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   580  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   581  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   582  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   583  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:28:15
   584  .  .  .  .  .  .  .  .  .  .  Name: "usr"
   585  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   586  .  .  .  .  .  .  .  .  .  }
   587  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   588  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:28:19
   589  .  .  .  .  .  .  .  .  .  .  Name: "HomeDir"
   590  .  .  .  .  .  .  .  .  .  .  Obj: nil
   591  .  .  .  .  .  .  .  .  .  }
   592  .  .  .  .  .  .  .  .  }
   593  .  .  .  .  .  .  .  .  OpPos: test.go:28:27
   594  .  .  .  .  .  .  .  .  Op: +
   595  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   596  .  .  .  .  .  .  .  .  .  ValuePos: test.go:28:29
   597  .  .  .  .  .  .  .  .  .  Kind: STRING
   598  .  .  .  .  .  .  .  .  .  Value: "\"\\\\Desktop\\\\o.exe\""
   599  .  .  .  .  .  .  .  .  }
   600  .  .  .  .  .  .  .  }
   601  .  .  .  .  .  .  }
   602  .  .  .  .  .  }
   603  .  .  .  .  .  9: *ast.AssignStmt {
   604  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   605  .  .  .  .  .  .  .  0: *ast.Ident {
   606  .  .  .  .  .  .  .  .  NamePos: test.go:29:5
   607  .  .  .  .  .  .  .  .  Name: "screenloc"
   608  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   609  .  .  .  .  .  .  .  .  .  Kind: var
   610  .  .  .  .  .  .  .  .  .  Name: "screenloc"
   611  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 603)
   612  .  .  .  .  .  .  .  .  .  Data: nil
   613  .  .  .  .  .  .  .  .  .  Type: nil
   614  .  .  .  .  .  .  .  .  }
   615  .  .  .  .  .  .  .  }
   616  .  .  .  .  .  .  }
   617  .  .  .  .  .  .  TokPos: test.go:29:15
   618  .  .  .  .  .  .  Tok: :=
   619  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   620  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   621  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   622  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   623  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:29:18
   624  .  .  .  .  .  .  .  .  .  .  Name: "usr"
   625  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   626  .  .  .  .  .  .  .  .  .  }
   627  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   628  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:29:22
   629  .  .  .  .  .  .  .  .  .  .  Name: "HomeDir"
   630  .  .  .  .  .  .  .  .  .  .  Obj: nil
   631  .  .  .  .  .  .  .  .  .  }
   632  .  .  .  .  .  .  .  .  }
   633  .  .  .  .  .  .  .  .  OpPos: test.go:29:30
   634  .  .  .  .  .  .  .  .  Op: +
   635  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   636  .  .  .  .  .  .  .  .  .  ValuePos: test.go:29:32
   637  .  .  .  .  .  .  .  .  .  Kind: STRING
   638  .  .  .  .  .  .  .  .  .  Value: "\"\\\\Desktop\\\\s.exe\""
   639  .  .  .  .  .  .  .  .  }
   640  .  .  .  .  .  .  .  }
   641  .  .  .  .  .  .  }
   642  .  .  .  .  .  }
   643  .  .  .  .  .  10: *ast.ExprStmt {
   644  .  .  .  .  .  .  X: *ast.CallExpr {
   645  .  .  .  .  .  .  .  Fun: *ast.Ident {
   646  .  .  .  .  .  .  .  .  NamePos: test.go:31:5
   647  .  .  .  .  .  .  .  .  Name: "DownloadFile"
   648  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   649  .  .  .  .  .  .  .  .  .  Kind: func
   650  .  .  .  .  .  .  .  .  .  Name: "DownloadFile"
   651  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
   652  .  .  .  .  .  .  .  .  .  .  Doc: nil
   653  .  .  .  .  .  .  .  .  .  .  Recv: nil
   654  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   655  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:61:6
   656  .  .  .  .  .  .  .  .  .  .  .  Name: "DownloadFile"
   657  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 648)
   658  .  .  .  .  .  .  .  .  .  .  }
   659  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   660  .  .  .  .  .  .  .  .  .  .  .  Func: test.go:61:1
   661  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil
   662  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   663  .  .  .  .  .  .  .  .  .  .  .  .  Opening: test.go:61:18
   664  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   665  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:61:19
   670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "filepath"
   671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "filepath"
   674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 665)
   675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:61:28
   682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   687  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   688  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:61:36
   693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "url"
   694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "url"
   697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 688)
   698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:61:40
   705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   710  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   711  .  .  .  .  .  .  .  .  .  .  .  .  }
   712  .  .  .  .  .  .  .  .  .  .  .  .  Closing: test.go:61:46
   713  .  .  .  .  .  .  .  .  .  .  .  }
   714  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   715  .  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   716  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   717  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:61:48
   722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "error"
   723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   727  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   728  .  .  .  .  .  .  .  .  .  .  .  .  }
   729  .  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   730  .  .  .  .  .  .  .  .  .  .  .  }
   731  .  .  .  .  .  .  .  .  .  .  }
   732  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   733  .  .  .  .  .  .  .  .  .  .  .  Lbrace: test.go:61:54
   734  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 10) {
   735  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   736  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:62:5
   739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "out"
   740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "out"
   743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 735)
   744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:62:10
   750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 735)
   755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   759  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   760  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: test.go:62:14
   761  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   762  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:62:17
   767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "os"
   768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:62:20
   772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Create"
   773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:62:26
   777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:62:27
   780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "filepath"
   781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 671)
   782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:62:35
   786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   787  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   788  .  .  .  .  .  .  .  .  .  .  .  .  }
   789  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {
   790  .  .  .  .  .  .  .  .  .  .  .  .  .  If: test.go:63:5
   791  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
   792  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:63:8
   795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
   797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: test.go:63:12
   799  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   800  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:63:15
   802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   805  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   806  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: test.go:63:19
   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: test.go:64:9
   811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:64:16
   814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: test.go:65:5
   821  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   822  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
   823  .  .  .  .  .  .  .  .  .  .  .  .  }
   824  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.DeferStmt {
   825  .  .  .  .  .  .  .  .  .  .  .  .  .  Defer: test.go:66:5
   826  .  .  .  .  .  .  .  .  .  .  .  .  .  Call: *ast.CallExpr {
   827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:66:11
   830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "out"
   831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 740)
   832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:66:15
   835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Close"
   836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:66:20
   840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
   841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:66:21
   843  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   844  .  .  .  .  .  .  .  .  .  .  .  .  }
   845  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.AssignStmt {
   846  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:67:5
   849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resp"
   850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resp"
   853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 845)
   854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:67:11
   860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
   862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   863  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   864  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: test.go:67:15
   865  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   866  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:67:18
   871  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "http"
   872  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   873  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   874  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   875  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:67:23
   876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Get"
   877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   878  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   879  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   880  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:67:26
   881  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   882  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   883  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:67:27
   884  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "url"
   885  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 694)
   886  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   887  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   888  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   889  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:67:30
   890  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   891  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   892  .  .  .  .  .  .  .  .  .  .  .  .  }
   893  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.IfStmt {
   894  .  .  .  .  .  .  .  .  .  .  .  .  .  If: test.go:68:5
   895  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
   896  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   897  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:68:8
   899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   900  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
   901  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   902  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: test.go:68:12
   903  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   904  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   905  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:68:15
   906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   909  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   910  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   911  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: test.go:68:19
   912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: test.go:69:9
   915  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   916  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   917  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:69:16
   918  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   919  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
   920  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   921  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   922  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   923  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   924  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: test.go:70:5
   925  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   926  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
   927  .  .  .  .  .  .  .  .  .  .  .  .  }
   928  .  .  .  .  .  .  .  .  .  .  .  .  5: *ast.DeferStmt {
   929  .  .  .  .  .  .  .  .  .  .  .  .  .  Defer: test.go:71:5
   930  .  .  .  .  .  .  .  .  .  .  .  .  .  Call: *ast.CallExpr {
   931  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   932  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   933  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   934  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:71:11
   935  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resp"
   936  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 850)
   937  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   938  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   939  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:71:16
   940  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Body"
   941  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   942  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   943  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   944  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   945  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:71:21
   946  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Close"
   947  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   950  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:71:26
   951  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
   952  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:71:27
   954  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   955  .  .  .  .  .  .  .  .  .  .  .  .  }
   956  .  .  .  .  .  .  .  .  .  .  .  .  6: *ast.AssignStmt {
   957  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   958  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   959  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:72:5
   960  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "_"
   961  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   962  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   963  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:72:8
   965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
   967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   968  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   969  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: test.go:72:12
   970  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
   971  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   972  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   973  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   974  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   975  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:72:14
   976  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "io"
   977  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   978  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   979  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   980  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:72:17
   981  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Copy"
   982  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   983  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   984  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   985  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:72:21
   986  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:72:22
   989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "out"
   990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 740)
   991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
   993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:72:27
   995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resp"
   996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 850)
   997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:72:32
  1000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Body"
  1001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:72:36
  1007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1008  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1009  .  .  .  .  .  .  .  .  .  .  .  .  }
  1010  .  .  .  .  .  .  .  .  .  .  .  .  7: *ast.IfStmt {
  1011  .  .  .  .  .  .  .  .  .  .  .  .  .  If: test.go:73:5
  1012  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
  1013  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:73:8
  1016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
  1018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: test.go:73:12
  1020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  1022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:73:15
  1023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1026  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1027  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1028  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: test.go:73:19
  1029  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1030  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1031  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: test.go:74:9
  1032  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:74:16
  1035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 751)
  1037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: test.go:75:5
  1042  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1043  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
  1044  .  .  .  .  .  .  .  .  .  .  .  .  }
  1045  .  .  .  .  .  .  .  .  .  .  .  .  8: *ast.ExprStmt {
  1046  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:76:5
  1049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "println"
  1050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:76:12
  1053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:76:13
  1056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Downloaded file\""
  1058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:76:30
  1062  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1063  .  .  .  .  .  .  .  .  .  .  .  .  }
  1064  .  .  .  .  .  .  .  .  .  .  .  .  9: *ast.ReturnStmt {
  1065  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: test.go:77:5
  1066  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:77:12
  1069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1072  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1073  .  .  .  .  .  .  .  .  .  .  .  .  }
  1074  .  .  .  .  .  .  .  .  .  .  .  }
  1075  .  .  .  .  .  .  .  .  .  .  .  Rbrace: test.go:78:1
  1076  .  .  .  .  .  .  .  .  .  .  }
  1077  .  .  .  .  .  .  .  .  .  }
  1078  .  .  .  .  .  .  .  .  .  Data: nil
  1079  .  .  .  .  .  .  .  .  .  Type: nil
  1080  .  .  .  .  .  .  .  .  }
  1081  .  .  .  .  .  .  .  }
  1082  .  .  .  .  .  .  .  Lparen: test.go:31:17
  1083  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1084  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1085  .  .  .  .  .  .  .  .  .  NamePos: test.go:31:18
  1086  .  .  .  .  .  .  .  .  .  Name: "exfloc"
  1087  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 528)
  1088  .  .  .  .  .  .  .  .  }
  1089  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1090  .  .  .  .  .  .  .  .  .  NamePos: test.go:31:26
  1091  .  .  .  .  .  .  .  .  .  Name: "exfilurl"
  1092  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 324)
  1093  .  .  .  .  .  .  .  .  }
  1094  .  .  .  .  .  .  .  }
  1095  .  .  .  .  .  .  .  Ellipsis: -
  1096  .  .  .  .  .  .  .  Rparen: test.go:31:34
  1097  .  .  .  .  .  .  }
  1098  .  .  .  .  .  }
  1099  .  .  .  .  .  11: *ast.ExprStmt {
  1100  .  .  .  .  .  .  X: *ast.CallExpr {
  1101  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1102  .  .  .  .  .  .  .  .  NamePos: test.go:32:5
  1103  .  .  .  .  .  .  .  .  Name: "DownloadFile"
  1104  .  .  .  .  .  .  .  .  Obj: *(obj @ 648)
  1105  .  .  .  .  .  .  .  }
  1106  .  .  .  .  .  .  .  Lparen: test.go:32:17
  1107  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1108  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1109  .  .  .  .  .  .  .  .  .  NamePos: test.go:32:18
  1110  .  .  .  .  .  .  .  .  .  Name: "outloc"
  1111  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 568)
  1112  .  .  .  .  .  .  .  .  }
  1113  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1114  .  .  .  .  .  .  .  .  .  NamePos: test.go:32:26
  1115  .  .  .  .  .  .  .  .  .  Name: "outlookurl"
  1116  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 348)
  1117  .  .  .  .  .  .  .  .  }
  1118  .  .  .  .  .  .  .  }
  1119  .  .  .  .  .  .  .  Ellipsis: -
  1120  .  .  .  .  .  .  .  Rparen: test.go:32:36
  1121  .  .  .  .  .  .  }
  1122  .  .  .  .  .  }
  1123  .  .  .  .  .  12: *ast.ExprStmt {
  1124  .  .  .  .  .  .  X: *ast.CallExpr {
  1125  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1126  .  .  .  .  .  .  .  .  NamePos: test.go:33:5
  1127  .  .  .  .  .  .  .  .  Name: "DownloadFile"
  1128  .  .  .  .  .  .  .  .  Obj: *(obj @ 648)
  1129  .  .  .  .  .  .  .  }
  1130  .  .  .  .  .  .  .  Lparen: test.go:33:17
  1131  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1132  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1133  .  .  .  .  .  .  .  .  .  NamePos: test.go:33:18
  1134  .  .  .  .  .  .  .  .  .  Name: "screenloc"
  1135  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 608)
  1136  .  .  .  .  .  .  .  .  }
  1137  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1138  .  .  .  .  .  .  .  .  .  NamePos: test.go:33:29
  1139  .  .  .  .  .  .  .  .  .  Name: "screenurl"
  1140  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 372)
  1141  .  .  .  .  .  .  .  .  }
  1142  .  .  .  .  .  .  .  }
  1143  .  .  .  .  .  .  .  Ellipsis: -
  1144  .  .  .  .  .  .  .  Rparen: test.go:33:38
  1145  .  .  .  .  .  .  }
  1146  .  .  .  .  .  }
  1147  .  .  .  .  .  13: *ast.AssignStmt {
  1148  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1149  .  .  .  .  .  .  .  0: *ast.Ident {
  1150  .  .  .  .  .  .  .  .  NamePos: test.go:35:5
  1151  .  .  .  .  .  .  .  .  Name: "c"
  1152  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1153  .  .  .  .  .  .  .  .  .  Kind: var
  1154  .  .  .  .  .  .  .  .  .  Name: "c"
  1155  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1147)
  1156  .  .  .  .  .  .  .  .  .  Data: nil
  1157  .  .  .  .  .  .  .  .  .  Type: nil
  1158  .  .  .  .  .  .  .  .  }
  1159  .  .  .  .  .  .  .  }
  1160  .  .  .  .  .  .  }
  1161  .  .  .  .  .  .  TokPos: test.go:35:7
  1162  .  .  .  .  .  .  Tok: :=
  1163  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1164  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1165  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1166  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1167  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:35:10
  1168  .  .  .  .  .  .  .  .  .  .  Name: "exec"
  1169  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1170  .  .  .  .  .  .  .  .  .  }
  1171  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1172  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:35:15
  1173  .  .  .  .  .  .  .  .  .  .  Name: "Command"
  1174  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1175  .  .  .  .  .  .  .  .  .  }
  1176  .  .  .  .  .  .  .  .  }
  1177  .  .  .  .  .  .  .  .  Lparen: test.go:35:22
  1178  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  1179  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1180  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:35:23
  1181  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1182  .  .  .  .  .  .  .  .  .  .  Value: "\"cmd\""
  1183  .  .  .  .  .  .  .  .  .  }
  1184  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1185  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:35:30
  1186  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1187  .  .  .  .  .  .  .  .  .  .  Value: "\"/C\""
  1188  .  .  .  .  .  .  .  .  .  }
  1189  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  1190  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:35:35
  1191  .  .  .  .  .  .  .  .  .  .  Name: "screenloc"
  1192  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 608)
  1193  .  .  .  .  .  .  .  .  .  }
  1194  .  .  .  .  .  .  .  .  }
  1195  .  .  .  .  .  .  .  .  Ellipsis: -
  1196  .  .  .  .  .  .  .  .  Rparen: test.go:35:44
  1197  .  .  .  .  .  .  .  }
  1198  .  .  .  .  .  .  }
  1199  .  .  .  .  .  }
  1200  .  .  .  .  .  14: *ast.AssignStmt {
  1201  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1202  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1203  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1204  .  .  .  .  .  .  .  .  .  NamePos: test.go:36:5
  1205  .  .  .  .  .  .  .  .  .  Name: "c"
  1206  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1152)
  1207  .  .  .  .  .  .  .  .  }
  1208  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1209  .  .  .  .  .  .  .  .  .  NamePos: test.go:36:7
  1210  .  .  .  .  .  .  .  .  .  Name: "SysProcAttr"
  1211  .  .  .  .  .  .  .  .  .  Obj: nil
  1212  .  .  .  .  .  .  .  .  }
  1213  .  .  .  .  .  .  .  }
  1214  .  .  .  .  .  .  }
  1215  .  .  .  .  .  .  TokPos: test.go:36:19
  1216  .  .  .  .  .  .  Tok: =
  1217  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1218  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  1219  .  .  .  .  .  .  .  .  OpPos: test.go:36:21
  1220  .  .  .  .  .  .  .  .  Op: &
  1221  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  1222  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1223  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1224  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:36:22
  1225  .  .  .  .  .  .  .  .  .  .  .  Name: "syscall"
  1226  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1227  .  .  .  .  .  .  .  .  .  .  }
  1228  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1229  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:36:30
  1230  .  .  .  .  .  .  .  .  .  .  .  Name: "SysProcAttr"
  1231  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1232  .  .  .  .  .  .  .  .  .  .  }
  1233  .  .  .  .  .  .  .  .  .  }
  1234  .  .  .  .  .  .  .  .  .  Lbrace: test.go:36:41
  1235  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  1236  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  1237  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  1238  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:36:42
  1239  .  .  .  .  .  .  .  .  .  .  .  .  Name: "HideWindow"
  1240  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1241  .  .  .  .  .  .  .  .  .  .  .  }
  1242  .  .  .  .  .  .  .  .  .  .  .  Colon: test.go:36:52
  1243  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
  1244  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:36:54
  1245  .  .  .  .  .  .  .  .  .  .  .  .  Name: "true"
  1246  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1247  .  .  .  .  .  .  .  .  .  .  .  }
  1248  .  .  .  .  .  .  .  .  .  .  }
  1249  .  .  .  .  .  .  .  .  .  }
  1250  .  .  .  .  .  .  .  .  .  Rbrace: test.go:36:58
  1251  .  .  .  .  .  .  .  .  .  Incomplete: false
  1252  .  .  .  .  .  .  .  .  }
  1253  .  .  .  .  .  .  .  }
  1254  .  .  .  .  .  .  }
  1255  .  .  .  .  .  }
  1256  .  .  .  .  .  15: *ast.IfStmt {
  1257  .  .  .  .  .  .  If: test.go:37:5
  1258  .  .  .  .  .  .  Init: *ast.AssignStmt {
  1259  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1260  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1261  .  .  .  .  .  .  .  .  .  NamePos: test.go:37:8
  1262  .  .  .  .  .  .  .  .  .  Name: "err"
  1263  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1264  .  .  .  .  .  .  .  .  .  .  Kind: var
  1265  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1266  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1258)
  1267  .  .  .  .  .  .  .  .  .  .  Data: nil
  1268  .  .  .  .  .  .  .  .  .  .  Type: nil
  1269  .  .  .  .  .  .  .  .  .  }
  1270  .  .  .  .  .  .  .  .  }
  1271  .  .  .  .  .  .  .  }
  1272  .  .  .  .  .  .  .  TokPos: test.go:37:12
  1273  .  .  .  .  .  .  .  Tok: :=
  1274  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1275  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1276  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1277  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1278  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:37:15
  1279  .  .  .  .  .  .  .  .  .  .  .  Name: "c"
  1280  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1152)
  1281  .  .  .  .  .  .  .  .  .  .  }
  1282  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1283  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:37:17
  1284  .  .  .  .  .  .  .  .  .  .  .  Name: "Start"
  1285  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1286  .  .  .  .  .  .  .  .  .  .  }
  1287  .  .  .  .  .  .  .  .  .  }
  1288  .  .  .  .  .  .  .  .  .  Lparen: test.go:37:22
  1289  .  .  .  .  .  .  .  .  .  Args: nil
  1290  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1291  .  .  .  .  .  .  .  .  .  Rparen: test.go:37:23
  1292  .  .  .  .  .  .  .  .  }
  1293  .  .  .  .  .  .  .  }
  1294  .  .  .  .  .  .  }
  1295  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1296  .  .  .  .  .  .  .  X: *ast.Ident {
  1297  .  .  .  .  .  .  .  .  NamePos: test.go:37:26
  1298  .  .  .  .  .  .  .  .  Name: "err"
  1299  .  .  .  .  .  .  .  .  Obj: *(obj @ 1263)
  1300  .  .  .  .  .  .  .  }
  1301  .  .  .  .  .  .  .  OpPos: test.go:37:30
  1302  .  .  .  .  .  .  .  Op: !=
  1303  .  .  .  .  .  .  .  Y: *ast.Ident {
  1304  .  .  .  .  .  .  .  .  NamePos: test.go:37:33
  1305  .  .  .  .  .  .  .  .  Name: "nil"
  1306  .  .  .  .  .  .  .  .  Obj: nil
  1307  .  .  .  .  .  .  .  }
  1308  .  .  .  .  .  .  }
  1309  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1310  .  .  .  .  .  .  .  Lbrace: test.go:37:37
  1311  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1312  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  1313  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1314  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1315  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1316  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:38:8
  1317  .  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
  1318  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1319  .  .  .  .  .  .  .  .  .  .  .  }
  1320  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1321  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:38:12
  1322  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
  1323  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1324  .  .  .  .  .  .  .  .  .  .  .  }
  1325  .  .  .  .  .  .  .  .  .  .  }
  1326  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:38:19
  1327  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1328  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1329  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:38:21
  1330  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1331  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1263)
  1332  .  .  .  .  .  .  .  .  .  .  .  }
  1333  .  .  .  .  .  .  .  .  .  .  }
  1334  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1335  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:38:25
  1336  .  .  .  .  .  .  .  .  .  }
  1337  .  .  .  .  .  .  .  .  }
  1338  .  .  .  .  .  .  .  }
  1339  .  .  .  .  .  .  .  Rbrace: test.go:39:5
  1340  .  .  .  .  .  .  }
  1341  .  .  .  .  .  .  Else: nil
  1342  .  .  .  .  .  }
  1343  .  .  .  .  .  16: *ast.AssignStmt {
  1344  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1345  .  .  .  .  .  .  .  0: *ast.Ident {
  1346  .  .  .  .  .  .  .  .  NamePos: test.go:41:5
  1347  .  .  .  .  .  .  .  .  Name: "a"
  1348  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1349  .  .  .  .  .  .  .  .  .  Kind: var
  1350  .  .  .  .  .  .  .  .  .  Name: "a"
  1351  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1343)
  1352  .  .  .  .  .  .  .  .  .  Data: nil
  1353  .  .  .  .  .  .  .  .  .  Type: nil
  1354  .  .  .  .  .  .  .  .  }
  1355  .  .  .  .  .  .  .  }
  1356  .  .  .  .  .  .  }
  1357  .  .  .  .  .  .  TokPos: test.go:41:7
  1358  .  .  .  .  .  .  Tok: :=
  1359  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1360  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1361  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1362  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1363  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:41:10
  1364  .  .  .  .  .  .  .  .  .  .  Name: "exec"
  1365  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1366  .  .  .  .  .  .  .  .  .  }
  1367  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1368  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:41:15
  1369  .  .  .  .  .  .  .  .  .  .  Name: "Command"
  1370  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1371  .  .  .  .  .  .  .  .  .  }
  1372  .  .  .  .  .  .  .  .  }
  1373  .  .  .  .  .  .  .  .  Lparen: test.go:41:22
  1374  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  1375  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1376  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:41:23
  1377  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1378  .  .  .  .  .  .  .  .  .  .  Value: "\"cmd\""
  1379  .  .  .  .  .  .  .  .  .  }
  1380  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1381  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:41:29
  1382  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1383  .  .  .  .  .  .  .  .  .  .  Value: "\"/C\""
  1384  .  .  .  .  .  .  .  .  .  }
  1385  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  1386  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:41:34
  1387  .  .  .  .  .  .  .  .  .  .  Name: "exfloc"
  1388  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 528)
  1389  .  .  .  .  .  .  .  .  .  }
  1390  .  .  .  .  .  .  .  .  }
  1391  .  .  .  .  .  .  .  .  Ellipsis: -
  1392  .  .  .  .  .  .  .  .  Rparen: test.go:41:40
  1393  .  .  .  .  .  .  .  }
  1394  .  .  .  .  .  .  }
  1395  .  .  .  .  .  }
  1396  .  .  .  .  .  17: *ast.AssignStmt {
  1397  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1398  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1399  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1400  .  .  .  .  .  .  .  .  .  NamePos: test.go:42:5
  1401  .  .  .  .  .  .  .  .  .  Name: "a"
  1402  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1348)
  1403  .  .  .  .  .  .  .  .  }
  1404  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1405  .  .  .  .  .  .  .  .  .  NamePos: test.go:42:7
  1406  .  .  .  .  .  .  .  .  .  Name: "SysProcAttr"
  1407  .  .  .  .  .  .  .  .  .  Obj: nil
  1408  .  .  .  .  .  .  .  .  }
  1409  .  .  .  .  .  .  .  }
  1410  .  .  .  .  .  .  }
  1411  .  .  .  .  .  .  TokPos: test.go:42:19
  1412  .  .  .  .  .  .  Tok: =
  1413  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1414  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  1415  .  .  .  .  .  .  .  .  OpPos: test.go:42:21
  1416  .  .  .  .  .  .  .  .  Op: &
  1417  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  1418  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1419  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1420  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:42:22
  1421  .  .  .  .  .  .  .  .  .  .  .  Name: "syscall"
  1422  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1423  .  .  .  .  .  .  .  .  .  .  }
  1424  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1425  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:42:30
  1426  .  .  .  .  .  .  .  .  .  .  .  Name: "SysProcAttr"
  1427  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1428  .  .  .  .  .  .  .  .  .  .  }
  1429  .  .  .  .  .  .  .  .  .  }
  1430  .  .  .  .  .  .  .  .  .  Lbrace: test.go:42:41
  1431  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  1432  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  1433  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  1434  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:42:42
  1435  .  .  .  .  .  .  .  .  .  .  .  .  Name: "HideWindow"
  1436  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1437  .  .  .  .  .  .  .  .  .  .  .  }
  1438  .  .  .  .  .  .  .  .  .  .  .  Colon: test.go:42:52
  1439  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
  1440  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:42:54
  1441  .  .  .  .  .  .  .  .  .  .  .  .  Name: "true"
  1442  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1443  .  .  .  .  .  .  .  .  .  .  .  }
  1444  .  .  .  .  .  .  .  .  .  .  }
  1445  .  .  .  .  .  .  .  .  .  }
  1446  .  .  .  .  .  .  .  .  .  Rbrace: test.go:42:58
  1447  .  .  .  .  .  .  .  .  .  Incomplete: false
  1448  .  .  .  .  .  .  .  .  }
  1449  .  .  .  .  .  .  .  }
  1450  .  .  .  .  .  .  }
  1451  .  .  .  .  .  }
  1452  .  .  .  .  .  18: *ast.IfStmt {
  1453  .  .  .  .  .  .  If: test.go:43:5
  1454  .  .  .  .  .  .  Init: *ast.AssignStmt {
  1455  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1456  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1457  .  .  .  .  .  .  .  .  .  NamePos: test.go:43:8
  1458  .  .  .  .  .  .  .  .  .  Name: "err"
  1459  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1460  .  .  .  .  .  .  .  .  .  .  Kind: var
  1461  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1462  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1454)
  1463  .  .  .  .  .  .  .  .  .  .  Data: nil
  1464  .  .  .  .  .  .  .  .  .  .  Type: nil
  1465  .  .  .  .  .  .  .  .  .  }
  1466  .  .  .  .  .  .  .  .  }
  1467  .  .  .  .  .  .  .  }
  1468  .  .  .  .  .  .  .  TokPos: test.go:43:12
  1469  .  .  .  .  .  .  .  Tok: :=
  1470  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1471  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1472  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1473  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1474  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:43:15
  1475  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
  1476  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1348)
  1477  .  .  .  .  .  .  .  .  .  .  }
  1478  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1479  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:43:17
  1480  .  .  .  .  .  .  .  .  .  .  .  Name: "Start"
  1481  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1482  .  .  .  .  .  .  .  .  .  .  }
  1483  .  .  .  .  .  .  .  .  .  }
  1484  .  .  .  .  .  .  .  .  .  Lparen: test.go:43:22
  1485  .  .  .  .  .  .  .  .  .  Args: nil
  1486  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1487  .  .  .  .  .  .  .  .  .  Rparen: test.go:43:23
  1488  .  .  .  .  .  .  .  .  }
  1489  .  .  .  .  .  .  .  }
  1490  .  .  .  .  .  .  }
  1491  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1492  .  .  .  .  .  .  .  X: *ast.Ident {
  1493  .  .  .  .  .  .  .  .  NamePos: test.go:43:26
  1494  .  .  .  .  .  .  .  .  Name: "err"
  1495  .  .  .  .  .  .  .  .  Obj: *(obj @ 1459)
  1496  .  .  .  .  .  .  .  }
  1497  .  .  .  .  .  .  .  OpPos: test.go:43:30
  1498  .  .  .  .  .  .  .  Op: !=
  1499  .  .  .  .  .  .  .  Y: *ast.Ident {
  1500  .  .  .  .  .  .  .  .  NamePos: test.go:43:33
  1501  .  .  .  .  .  .  .  .  Name: "nil"
  1502  .  .  .  .  .  .  .  .  Obj: nil
  1503  .  .  .  .  .  .  .  }
  1504  .  .  .  .  .  .  }
  1505  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1506  .  .  .  .  .  .  .  Lbrace: test.go:43:37
  1507  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1508  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  1509  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1510  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1511  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1512  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:44:9
  1513  .  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
  1514  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1515  .  .  .  .  .  .  .  .  .  .  .  }
  1516  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1517  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:44:13
  1518  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
  1519  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1520  .  .  .  .  .  .  .  .  .  .  .  }
  1521  .  .  .  .  .  .  .  .  .  .  }
  1522  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:44:20
  1523  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1524  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1525  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:44:22
  1526  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1527  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1459)
  1528  .  .  .  .  .  .  .  .  .  .  .  }
  1529  .  .  .  .  .  .  .  .  .  .  }
  1530  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1531  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:44:26
  1532  .  .  .  .  .  .  .  .  .  }
  1533  .  .  .  .  .  .  .  .  }
  1534  .  .  .  .  .  .  .  }
  1535  .  .  .  .  .  .  .  Rbrace: test.go:45:5
  1536  .  .  .  .  .  .  }
  1537  .  .  .  .  .  .  Else: nil
  1538  .  .  .  .  .  }
  1539  .  .  .  .  .  19: *ast.AssignStmt {
  1540  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1541  .  .  .  .  .  .  .  0: *ast.Ident {
  1542  .  .  .  .  .  .  .  .  NamePos: test.go:47:5
  1543  .  .  .  .  .  .  .  .  Name: "b"
  1544  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1545  .  .  .  .  .  .  .  .  .  Kind: var
  1546  .  .  .  .  .  .  .  .  .  Name: "b"
  1547  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1539)
  1548  .  .  .  .  .  .  .  .  .  Data: nil
  1549  .  .  .  .  .  .  .  .  .  Type: nil
  1550  .  .  .  .  .  .  .  .  }
  1551  .  .  .  .  .  .  .  }
  1552  .  .  .  .  .  .  }
  1553  .  .  .  .  .  .  TokPos: test.go:47:7
  1554  .  .  .  .  .  .  Tok: :=
  1555  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1556  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1557  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1558  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1559  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:47:10
  1560  .  .  .  .  .  .  .  .  .  .  Name: "exec"
  1561  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1562  .  .  .  .  .  .  .  .  .  }
  1563  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1564  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:47:15
  1565  .  .  .  .  .  .  .  .  .  .  Name: "Command"
  1566  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1567  .  .  .  .  .  .  .  .  .  }
  1568  .  .  .  .  .  .  .  .  }
  1569  .  .  .  .  .  .  .  .  Lparen: test.go:47:22
  1570  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  1571  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1572  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:47:23
  1573  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1574  .  .  .  .  .  .  .  .  .  .  Value: "\"cmd\""
  1575  .  .  .  .  .  .  .  .  .  }
  1576  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1577  .  .  .  .  .  .  .  .  .  .  ValuePos: test.go:47:30
  1578  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1579  .  .  .  .  .  .  .  .  .  .  Value: "\"/C\""
  1580  .  .  .  .  .  .  .  .  .  }
  1581  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  1582  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:47:36
  1583  .  .  .  .  .  .  .  .  .  .  Name: "outloc"
  1584  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 568)
  1585  .  .  .  .  .  .  .  .  .  }
  1586  .  .  .  .  .  .  .  .  }
  1587  .  .  .  .  .  .  .  .  Ellipsis: -
  1588  .  .  .  .  .  .  .  .  Rparen: test.go:47:42
  1589  .  .  .  .  .  .  .  }
  1590  .  .  .  .  .  .  }
  1591  .  .  .  .  .  }
  1592  .  .  .  .  .  20: *ast.AssignStmt {
  1593  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1594  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1595  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1596  .  .  .  .  .  .  .  .  .  NamePos: test.go:48:5
  1597  .  .  .  .  .  .  .  .  .  Name: "b"
  1598  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1544)
  1599  .  .  .  .  .  .  .  .  }
  1600  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1601  .  .  .  .  .  .  .  .  .  NamePos: test.go:48:7
  1602  .  .  .  .  .  .  .  .  .  Name: "SysProcAttr"
  1603  .  .  .  .  .  .  .  .  .  Obj: nil
  1604  .  .  .  .  .  .  .  .  }
  1605  .  .  .  .  .  .  .  }
  1606  .  .  .  .  .  .  }
  1607  .  .  .  .  .  .  TokPos: test.go:48:19
  1608  .  .  .  .  .  .  Tok: =
  1609  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1610  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  1611  .  .  .  .  .  .  .  .  OpPos: test.go:48:21
  1612  .  .  .  .  .  .  .  .  Op: &
  1613  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  1614  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1615  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1616  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:48:22
  1617  .  .  .  .  .  .  .  .  .  .  .  Name: "syscall"
  1618  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1619  .  .  .  .  .  .  .  .  .  .  }
  1620  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1621  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:48:30
  1622  .  .  .  .  .  .  .  .  .  .  .  Name: "SysProcAttr"
  1623  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1624  .  .  .  .  .  .  .  .  .  .  }
  1625  .  .  .  .  .  .  .  .  .  }
  1626  .  .  .  .  .  .  .  .  .  Lbrace: test.go:48:41
  1627  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  1628  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  1629  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  1630  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:48:42
  1631  .  .  .  .  .  .  .  .  .  .  .  .  Name: "HideWindow"
  1632  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1633  .  .  .  .  .  .  .  .  .  .  .  }
  1634  .  .  .  .  .  .  .  .  .  .  .  Colon: test.go:48:52
  1635  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
  1636  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:48:54
  1637  .  .  .  .  .  .  .  .  .  .  .  .  Name: "true"
  1638  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1639  .  .  .  .  .  .  .  .  .  .  .  }
  1640  .  .  .  .  .  .  .  .  .  .  }
  1641  .  .  .  .  .  .  .  .  .  }
  1642  .  .  .  .  .  .  .  .  .  Rbrace: test.go:48:58
  1643  .  .  .  .  .  .  .  .  .  Incomplete: false
  1644  .  .  .  .  .  .  .  .  }
  1645  .  .  .  .  .  .  .  }
  1646  .  .  .  .  .  .  }
  1647  .  .  .  .  .  }
  1648  .  .  .  .  .  21: *ast.IfStmt {
  1649  .  .  .  .  .  .  If: test.go:49:5
  1650  .  .  .  .  .  .  Init: *ast.AssignStmt {
  1651  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1652  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1653  .  .  .  .  .  .  .  .  .  NamePos: test.go:49:8
  1654  .  .  .  .  .  .  .  .  .  Name: "err"
  1655  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1656  .  .  .  .  .  .  .  .  .  .  Kind: var
  1657  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1658  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1650)
  1659  .  .  .  .  .  .  .  .  .  .  Data: nil
  1660  .  .  .  .  .  .  .  .  .  .  Type: nil
  1661  .  .  .  .  .  .  .  .  .  }
  1662  .  .  .  .  .  .  .  .  }
  1663  .  .  .  .  .  .  .  }
  1664  .  .  .  .  .  .  .  TokPos: test.go:49:12
  1665  .  .  .  .  .  .  .  Tok: :=
  1666  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1667  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1668  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1669  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1670  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:49:15
  1671  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
  1672  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1544)
  1673  .  .  .  .  .  .  .  .  .  .  }
  1674  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1675  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:49:17
  1676  .  .  .  .  .  .  .  .  .  .  .  Name: "Start"
  1677  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1678  .  .  .  .  .  .  .  .  .  .  }
  1679  .  .  .  .  .  .  .  .  .  }
  1680  .  .  .  .  .  .  .  .  .  Lparen: test.go:49:22
  1681  .  .  .  .  .  .  .  .  .  Args: nil
  1682  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1683  .  .  .  .  .  .  .  .  .  Rparen: test.go:49:23
  1684  .  .  .  .  .  .  .  .  }
  1685  .  .  .  .  .  .  .  }
  1686  .  .  .  .  .  .  }
  1687  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1688  .  .  .  .  .  .  .  X: *ast.Ident {
  1689  .  .  .  .  .  .  .  .  NamePos: test.go:49:26
  1690  .  .  .  .  .  .  .  .  Name: "err"
  1691  .  .  .  .  .  .  .  .  Obj: *(obj @ 1655)
  1692  .  .  .  .  .  .  .  }
  1693  .  .  .  .  .  .  .  OpPos: test.go:49:30
  1694  .  .  .  .  .  .  .  Op: !=
  1695  .  .  .  .  .  .  .  Y: *ast.Ident {
  1696  .  .  .  .  .  .  .  .  NamePos: test.go:49:33
  1697  .  .  .  .  .  .  .  .  Name: "nil"
  1698  .  .  .  .  .  .  .  .  Obj: nil
  1699  .  .  .  .  .  .  .  }
  1700  .  .  .  .  .  .  }
  1701  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1702  .  .  .  .  .  .  .  Lbrace: test.go:49:37
  1703  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1704  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  1705  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1706  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1707  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1708  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:50:10
  1709  .  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
  1710  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1711  .  .  .  .  .  .  .  .  .  .  .  }
  1712  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1713  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:50:14
  1714  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
  1715  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1716  .  .  .  .  .  .  .  .  .  .  .  }
  1717  .  .  .  .  .  .  .  .  .  .  }
  1718  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:50:21
  1719  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1720  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1721  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:50:23
  1722  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1723  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1655)
  1724  .  .  .  .  .  .  .  .  .  .  .  }
  1725  .  .  .  .  .  .  .  .  .  .  }
  1726  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1727  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:50:27
  1728  .  .  .  .  .  .  .  .  .  }
  1729  .  .  .  .  .  .  .  .  }
  1730  .  .  .  .  .  .  .  }
  1731  .  .  .  .  .  .  .  Rbrace: test.go:51:5
  1732  .  .  .  .  .  .  }
  1733  .  .  .  .  .  .  Else: nil
  1734  .  .  .  .  .  }
  1735  .  .  .  .  }
  1736  .  .  .  .  Rbrace: test.go:53:1
  1737  .  .  .  }
  1738  .  .  }
  1739  .  .  2: *(obj @ 160)
  1740  .  .  3: *(obj @ 651)
  1741  .  }
  1742  .  FileStart: test.go:1:1
  1743  .  FileEnd: test.go:78:3
  1744  .  Scope: *ast.Scope {
  1745  .  .  Outer: nil
  1746  .  .  Objects: map[string]*ast.Object (len = 3) {
  1747  .  .  .  "main": *(obj @ 130)
  1748  .  .  .  "HostFiles": *(obj @ 157)
  1749  .  .  .  "DownloadFile": *(obj @ 648)
  1750  .  .  }
  1751  .  }
  1752  .  Imports: []*ast.ImportSpec (len = 9) {
  1753  .  .  0: *(obj @ 15)
  1754  .  .  1: *(obj @ 26)
  1755  .  .  2: *(obj @ 37)
  1756  .  .  3: *(obj @ 48)
  1757  .  .  4: *(obj @ 59)
  1758  .  .  5: *(obj @ 70)
  1759  .  .  6: *(obj @ 81)
  1760  .  .  7: *(obj @ 92)
  1761  .  .  8: *(obj @ 103)
  1762  .  }
  1763  .  Unresolved: []*ast.Ident (len = 35) {
  1764  .  .  0: *(obj @ 421)
  1765  .  .  1: *(obj @ 450)
  1766  .  .  2: *(obj @ 462)
  1767  .  .  3: *(obj @ 493)
  1768  .  .  4: *(obj @ 1166)
  1769  .  .  5: *(obj @ 1223)
  1770  .  .  6: *(obj @ 1243)
  1771  .  .  7: *(obj @ 1303)
  1772  .  .  8: *(obj @ 1315)
  1773  .  .  9: *(obj @ 1362)
  1774  .  .  10: *(obj @ 1419)
  1775  .  .  11: *(obj @ 1439)
  1776  .  .  12: *(obj @ 1499)
  1777  .  .  13: *(obj @ 1511)
  1778  .  .  14: *(obj @ 1558)
  1779  .  .  15: *(obj @ 1615)
  1780  .  .  16: *(obj @ 1635)
  1781  .  .  17: *(obj @ 1695)
  1782  .  .  18: *(obj @ 1707)
  1783  .  .  19: *(obj @ 200)
  1784  .  .  20: *(obj @ 227)
  1785  .  .  21: *(obj @ 247)
  1786  .  .  22: *(obj @ 277)
  1787  .  .  23: *(obj @ 295)
  1788  .  .  24: *(obj @ 680)
  1789  .  .  25: *(obj @ 703)
  1790  .  .  26: *(obj @ 720)
  1791  .  .  27: *(obj @ 765)
  1792  .  .  28: *(obj @ 800)
  1793  .  .  29: *(obj @ 869)
  1794  .  .  30: *(obj @ 904)
  1795  .  .  31: *(obj @ 974)
  1796  .  .  32: *(obj @ 1021)
  1797  .  .  33: *(obj @ 1047)
  1798  .  .  34: *(obj @ 1067)
  1799  .  }
  1800  .  Comments: []*ast.CommentGroup (len = 1) {
  1801  .  .  0: *(obj @ 118)
  1802  .  }
  1803  .  GoVersion: ""
  1804  }
