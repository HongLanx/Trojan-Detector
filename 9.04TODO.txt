一、进度总结：

1.Go组：
①完成了AST树模式匹配的检测报告
②建立了SSA模式库
③SSA代码向量化尝试一：将SSA中的代码块进行向量化，只能实现文件与文件之间的相似度对比，且效果不佳，弃了
④SSA代码向量化尝试二：将病毒样本的SSA提取出来的特征库进行向量化，用机器学习去学习这些向量化的特征（目前暂定用随机森林方法）
训练一个模型，然后提取待检测样本的特征（调用和字符串），用训练好的模型去判断/预测这些特征是否与所学习的病毒特征匹配
然后给出结果（yes/no）

2.Python组：

3.Java组：

二、待办：

1.Go组:
①写一点报告，主要是关于我们组用了什么技术，大概是如何实现的
目前预计可以实现3种检测方法，包括放弃的1种，总共4种：
（1）基于AST/JSON的，AI+人工构建木马特征库，评判特征危险度的模式匹配检测方法（进度100%）
（2）基于SSA（中间代码）的，基于数学统计方法构建木马特征库，评判特征危险度的模式匹配检测方法（进度80%，今天能实现）
（3）基于SSA的，基于机器学习方法，利用已有的SSA木马特征库，对特征进行向量化，用向量训练随机森林模型，评估待检样本是否跟病毒特征库匹配的
基于代码向量化的机器学习检测方法（进度40%，今天能做多少做多少）
（4）已经放弃：基于SSA的代码块结构特点，对SSA进行代码块级别的拆分，向量化，再对不同的向量进行余弦相似度评估，得到不同代码的相似度，但是难以对整个项目进行评估，
也不好利用已有的病毒样本，遂放弃，但保留源码(ssa_cosin)
②做一点前后端联系的尝试（用flask库）
③如①所述，推进方法（2）和方法（3）

2.Python组：

3.Java组：