{
    "node_type": "CompilationUnit",
    "package": {
        "node_type": "PackageDeclaration",
        "modifiers": null,
        "annotations": null,
        "documentation": "/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */",
        "name": "org.apache.hadoop.tools.dynamometer"
    },
    "imports": [
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.thirdparty.com.google.common.base.Joiner",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.io.File",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.io.FileNotFoundException",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.io.IOException",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.io.InputStream",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.net.HttpURLConnection",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.net.InetSocketAddress",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.net.MalformedURLException",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.net.URI",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.net.URL",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.nio.charset.StandardCharsets",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.HashSet",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.Optional",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.Properties",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.Set",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.concurrent.TimeUnit",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.concurrent.atomic.AtomicBoolean",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.function.Supplier",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.commons.io.FileUtils",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.commons.io.IOUtils",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.classification.InterfaceAudience",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.classification.InterfaceStability",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.conf.Configuration",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.fs.CommonConfigurationKeysPublic",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.fs.FSDataInputStream",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.fs.FileSystem",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.fs.Path",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.hdfs.DFSUtilClient",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.hdfs.DistributedFileSystem",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.hdfs.client.BlockReportOptions",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.hdfs.protocol.ClientDatanodeProtocol",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.hdfs.protocol.DatanodeInfo",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.net.NetUtils",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.security.UserGroupInformation",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.util.Time",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.yarn.YarnUncaughtExceptionHandler",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.yarn.api.ApplicationConstants.Environment",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "com.fasterxml.jackson.core.JsonFactory",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "com.fasterxml.jackson.core.JsonParser",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "com.fasterxml.jackson.core.JsonToken",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.slf4j.Logger",
            "static": false,
            "wildcard": false
        }
    ],
    "types": [
        {
            "node_type": "ClassDeclaration",
            "modifiers": [
                "public",
                "final"
            ],
            "annotations": [
                {
                    "node_type": "Annotation",
                    "name": "InterfaceAudience.Private",
                    "element": null
                },
                {
                    "node_type": "Annotation",
                    "name": "InterfaceStability.Unstable",
                    "element": null
                }
            ],
            "documentation": "/**\n * A collection of utilities used by the Dynamometer infrastructure application.\n */",
            "name": "DynoInfraUtils",
            "body": [
                {
                    "node_type": "ConstructorDeclaration",
                    "modifiers": [
                        "private"
                    ],
                    "annotations": [],
                    "documentation": null,
                    "type_parameters": null,
                    "name": "DynoInfraUtils",
                    "parameters": [],
                    "throws": null,
                    "body": []
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "DYNO_CONF_PREFIX",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"dyno.\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "DYNO_INFRA_PREFIX",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "BinaryOperation",
                                "operator": "+",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "DYNO_CONF_PREFIX"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "\"infra.\""
                                }
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "APACHE_DOWNLOAD_MIRROR_KEY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "BinaryOperation",
                                "operator": "+",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "DYNO_CONF_PREFIX"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "\"apache-mirror\""
                                }
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "APACHE_DOWNLOAD_MIRROR_DEFAULT",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"http://mirrors.ocf.berkeley.edu/apache/\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "private",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "APACHE_DOWNLOAD_MIRROR_SUFFIX_FORMAT",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"hadoop/common/hadoop-%s/hadoop-%s.tar.gz\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "HADOOP_TAR_FILENAME_FORMAT",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"hadoop-%s.tar.gz\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "DATANODE_LIVE_MIN_FRACTION_KEY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "BinaryOperation",
                                "operator": "+",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "DYNO_INFRA_PREFIX"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "\"ready.datanode-min-fraction\""
                                }
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "BasicType",
                        "name": "float",
                        "dimensions": []
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "DATANODE_LIVE_MIN_FRACTION_DEFAULT",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "0.99f"
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "MISSING_BLOCKS_MAX_FRACTION_KEY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "BinaryOperation",
                                "operator": "+",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "DYNO_INFRA_PREFIX"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "\"ready.missing-blocks-max-fraction\""
                                }
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "BasicType",
                        "name": "float",
                        "dimensions": []
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "MISSING_BLOCKS_MAX_FRACTION_DEFAULT",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "0.0001f"
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "UNDERREPLICATED_BLOCKS_MAX_FRACTION_KEY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "BinaryOperation",
                                "operator": "+",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "DYNO_INFRA_PREFIX"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "\"ready.underreplicated-blocks-max-fraction\""
                                }
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "BasicType",
                        "name": "float",
                        "dimensions": []
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "UNDERREPLICATED_BLOCKS_MAX_FRACTION_DEFAULT",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "0.01f"
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "NAMENODE_STARTUP_PROGRESS_JMX_QUERY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"Hadoop:service=NameNode,name=StartupProgress\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "FSNAMESYSTEM_JMX_QUERY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"Hadoop:service=NameNode,name=FSNamesystem\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "FSNAMESYSTEM_STATE_JMX_QUERY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"Hadoop:service=NameNode,name=FSNamesystemState\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "NAMENODE_INFO_JMX_QUERY",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"Hadoop:service=NameNode,name=NameNodeInfo\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "JMX_MISSING_BLOCKS",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"MissingBlocks\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "JMX_UNDER_REPLICATED_BLOCKS",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"UnderReplicatedBlocks\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "JMX_BLOCKS_TOTAL",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"BlocksTotal\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "JMX_LIVE_NODE_COUNT",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"NumLiveDataNodes\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "public",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "JMX_LIVE_NODES_LIST",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"LiveNodes\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * If a file matching {@value HADOOP_TAR_FILENAME_FORMAT} and {@code version}\n   * is found in {@code destinationDir}, return its path. Otherwise, first\n   * download the tarball from an Apache mirror. If the\n   * {@value APACHE_DOWNLOAD_MIRROR_KEY} configuration or system property\n   * (checked in that order) is set, use that as the mirror; else use\n   * {@value APACHE_DOWNLOAD_MIRROR_DEFAULT}.\n   *\n   * @param destinationDir destination directory to save a tarball\n   * @param version The version of Hadoop to download, like \"2.7.4\"\n   *                or \"3.0.0-beta1\"\n   * @param conf configuration\n   * @param log logger instance\n   * @return The path to the tarball.\n   * @throws IOException on failure\n   */",
                    "modifiers": [
                        "static",
                        "public"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "File",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "name": "fetchHadoopTarball",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "File",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "destinationDir",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "version",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Configuration",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "conf",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Logger",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "log",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException"
                    ],
                    "body": [
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "BinaryOperation",
                                        "operator": "+",
                                        "operandl": {
                                            "node_type": "Literal",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "value": "\"Looking for Hadoop tarball for version: \""
                                        },
                                        "operandr": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "version"
                                        }
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "File",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "destinationFile",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "ClassCreator",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "File",
                                            "dimensions": null,
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "constructor_type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "destinationDir"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "String",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "HADOOP_TAR_FILENAME_FORMAT"
                                                    },
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "version"
                                                    }
                                                ],
                                                "member": "format"
                                            }
                                        ],
                                        "body": null
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "destinationFile",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "exists"
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "log",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "+",
                                                    "operandl": {
                                                        "node_type": "Literal",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": null,
                                                        "selectors": [],
                                                        "value": "\"Found tarball at: \""
                                                    },
                                                    "operandr": {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "destinationFile",
                                                        "selectors": [],
                                                        "type_arguments": null,
                                                        "arguments": [],
                                                        "member": "getAbsolutePath"
                                                    }
                                                }
                                            ],
                                            "member": "info"
                                        }
                                    },
                                    {
                                        "node_type": "ReturnStatement",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "destinationFile"
                                        }
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "apacheMirror",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "conf",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "APACHE_DOWNLOAD_MIRROR_KEY"
                                            }
                                        ],
                                        "member": "get"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "BinaryOperation",
                                "operator": "==",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "apacheMirror"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "null"
                                }
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "Assignment",
                                            "expressionl": {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "apacheMirror"
                                            },
                                            "value": {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "System",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "APACHE_DOWNLOAD_MIRROR_KEY"
                                                    },
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "APACHE_DOWNLOAD_MIRROR_DEFAULT"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            },
                                            "type": "="
                                        }
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [
                                    "!"
                                ],
                                "postfix_operators": [],
                                "qualifier": "destinationDir",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "exists"
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "IfStatement",
                                        "label": null,
                                        "condition": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [
                                                "!"
                                            ],
                                            "postfix_operators": [],
                                            "qualifier": "destinationDir",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [],
                                            "member": "mkdirs"
                                        },
                                        "then_statement": {
                                            "node_type": "BlockStatement",
                                            "label": null,
                                            "statements": [
                                                {
                                                    "node_type": "ThrowStatement",
                                                    "label": null,
                                                    "expression": {
                                                        "node_type": "ClassCreator",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": null,
                                                        "selectors": [],
                                                        "type": {
                                                            "node_type": "ReferenceType",
                                                            "name": "IOException",
                                                            "dimensions": null,
                                                            "arguments": null,
                                                            "sub_type": null
                                                        },
                                                        "constructor_type_arguments": null,
                                                        "arguments": [
                                                            {
                                                                "node_type": "BinaryOperation",
                                                                "operator": "+",
                                                                "operandl": {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "\"Unable to create local dir: \""
                                                                },
                                                                "operandr": {
                                                                    "node_type": "MemberReference",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": "",
                                                                    "selectors": [],
                                                                    "member": "destinationDir"
                                                                }
                                                            }
                                                        ],
                                                        "body": null
                                                    }
                                                }
                                            ]
                                        },
                                        "else_statement": null
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "URL",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "downloadURL",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "ClassCreator",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "URL",
                                            "dimensions": null,
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "constructor_type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "BinaryOperation",
                                                "operator": "+",
                                                "operandl": {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "",
                                                    "selectors": [],
                                                    "member": "apacheMirror"
                                                },
                                                "operandr": {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "String",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [
                                                        {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "APACHE_DOWNLOAD_MIRROR_SUFFIX_FORMAT"
                                                        },
                                                        {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "version"
                                                        },
                                                        {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "version"
                                                        }
                                                    ],
                                                    "member": "format"
                                                }
                                            }
                                        ],
                                        "body": null
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Downloading tarball from: <{}> to <{}>\""
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "downloadURL"
                                    },
                                    {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "destinationFile",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [],
                                        "member": "getAbsolutePath"
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "FileUtils",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "downloadURL"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "destinationFile"
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "10000"
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "60000"
                                    }
                                ],
                                "member": "copyURLToFile"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Completed downloading of Hadoop tarball\""
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "MemberReference",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "",
                                "selectors": [],
                                "member": "destinationFile"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Get the URI that can be used to access the launched NameNode for HDFS RPCs.\n   *\n   * @param nameNodeProperties The set of properties representing the\n   *                           information about the launched NameNode.\n   * @return The HDFS URI.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "URI",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "name": "getNameNodeHdfsUri",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        }
                    ],
                    "throws": null,
                    "body": [
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "URI",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "String",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "Literal",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": null,
                                                "selectors": [],
                                                "value": "\"hdfs://%s:%s/\""
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "DynoConstants",
                                                        "selectors": [],
                                                        "member": "NN_HOSTNAME"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "DynoConstants",
                                                        "selectors": [],
                                                        "member": "NN_RPC_PORT"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            }
                                        ],
                                        "member": "format"
                                    }
                                ],
                                "member": "create"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Get the URI that can be used to access the launched NameNode for HDFS\n   * Service RPCs (i.e. from DataNodes).\n   *\n   * @param nameNodeProperties The set of properties representing the\n   *                           information about the launched NameNode.\n   * @return The service RPC URI.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "URI",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "name": "getNameNodeServiceRpcAddr",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        }
                    ],
                    "throws": null,
                    "body": [
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "URI",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "String",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "Literal",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": null,
                                                "selectors": [],
                                                "value": "\"hdfs://%s:%s/\""
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "DynoConstants",
                                                        "selectors": [],
                                                        "member": "NN_HOSTNAME"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "DynoConstants",
                                                        "selectors": [],
                                                        "member": "NN_SERVICERPC_PORT"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            }
                                        ],
                                        "member": "format"
                                    }
                                ],
                                "member": "create"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Get the URI that can be used to access the launched NameNode's web UI, e.g.\n   * for JMX calls.\n   *\n   * @param nameNodeProperties The set of properties representing the\n   *                           information about the launched NameNode.\n   * @return The URI to the web UI.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "URI",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "name": "getNameNodeWebUri",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        }
                    ],
                    "throws": null,
                    "body": [
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "URI",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "String",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "Literal",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": null,
                                                "selectors": [],
                                                "value": "\"http://%s:%s/\""
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "DynoConstants",
                                                        "selectors": [],
                                                        "member": "NN_HOSTNAME"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "DynoConstants",
                                                        "selectors": [],
                                                        "member": "NN_HTTP_PORT"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            }
                                        ],
                                        "member": "format"
                                    }
                                ],
                                "member": "create"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Get the URI that can be used to access the tracking interface for the\n   * NameNode, i.e. the web UI of the NodeManager hosting the NameNode\n   * container.\n   *\n   * @param nameNodeProperties The set of properties representing the\n   *                           information about the launched NameNode.\n   * @return The tracking URI.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "URI",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "name": "getNameNodeTrackingUri",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException"
                    ],
                    "body": [
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "URI",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "String",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "Literal",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": null,
                                                "selectors": [],
                                                "value": "\"http://%s:%s/node/containerlogs/%s/%s/\""
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "DynoConstants",
                                                        "selectors": [],
                                                        "member": "NN_HOSTNAME"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "Environment.NM_HTTP_PORT",
                                                        "selectors": [],
                                                        "type_arguments": null,
                                                        "arguments": [],
                                                        "member": "name"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "nameNodeProperties",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "Environment.CONTAINER_ID",
                                                        "selectors": [],
                                                        "type_arguments": null,
                                                        "arguments": [],
                                                        "member": "name"
                                                    }
                                                ],
                                                "member": "getProperty"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "UserGroupInformation",
                                                "selectors": [
                                                    {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": null,
                                                        "postfix_operators": null,
                                                        "qualifier": null,
                                                        "selectors": null,
                                                        "type_arguments": null,
                                                        "arguments": [],
                                                        "member": "getShortUserName"
                                                    }
                                                ],
                                                "type_arguments": null,
                                                "arguments": [],
                                                "member": "getCurrentUser"
                                            }
                                        ],
                                        "member": "format"
                                    }
                                ],
                                "member": "create"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Get the set of properties representing information about the launched\n   * NameNode. This method will wait for the information to be available until\n   * it is interrupted, or {@code shouldExit} returns true. It polls for a file\n   * present at {@code nameNodeInfoPath} once a second and uses that file to\n   * load the NameNode information.\n   *\n   * @param shouldExit Should return true iff this should stop waiting.\n   * @param conf The configuration.\n   * @param nameNodeInfoPath The path at which to expect the NameNode\n   *                         information file to be present.\n   * @param log Where to log information.\n   * @return Absent if this exited prematurely (i.e. due to {@code shouldExit}),\n   *         else returns a set of properties representing information about the\n   *         launched NameNode.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "Optional",
                        "dimensions": [],
                        "arguments": [
                            {
                                "node_type": "TypeArgument",
                                "type": {
                                    "node_type": "ReferenceType",
                                    "name": "Properties",
                                    "dimensions": [],
                                    "arguments": null,
                                    "sub_type": null
                                },
                                "pattern_type": null
                            }
                        ],
                        "sub_type": null
                    },
                    "name": "waitForAndGetNameNodeProperties",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Supplier",
                                "dimensions": [],
                                "arguments": [
                                    {
                                        "node_type": "TypeArgument",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "Boolean",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "pattern_type": null
                                    }
                                ],
                                "sub_type": null
                            },
                            "name": "shouldExit",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Configuration",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "conf",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Path",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeInfoPath",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Logger",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "log",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException",
                        "InterruptedException"
                    ],
                    "body": [
                        {
                            "node_type": "WhileStatement",
                            "label": null,
                            "condition": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [
                                    "!"
                                ],
                                "postfix_operators": [],
                                "qualifier": "shouldExit",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "get"
                            },
                            "body": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "TryStatement",
                                        "label": null,
                                        "resources": [
                                            {
                                                "node_type": "TryResource",
                                                "modifiers": [],
                                                "annotations": [],
                                                "type": {
                                                    "node_type": "ReferenceType",
                                                    "name": "FSDataInputStream",
                                                    "dimensions": [],
                                                    "arguments": null,
                                                    "sub_type": null
                                                },
                                                "name": "nnInfoInputStream",
                                                "value": {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "nameNodeInfoPath",
                                                    "selectors": [
                                                        {
                                                            "node_type": "MethodInvocation",
                                                            "prefix_operators": null,
                                                            "postfix_operators": null,
                                                            "qualifier": null,
                                                            "selectors": null,
                                                            "type_arguments": null,
                                                            "arguments": [
                                                                {
                                                                    "node_type": "MemberReference",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": "",
                                                                    "selectors": [],
                                                                    "member": "nameNodeInfoPath"
                                                                }
                                                            ],
                                                            "member": "open"
                                                        }
                                                    ],
                                                    "type_arguments": null,
                                                    "arguments": [
                                                        {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "conf"
                                                        }
                                                    ],
                                                    "member": "getFileSystem"
                                                }
                                            }
                                        ],
                                        "block": [
                                            {
                                                "node_type": "LocalVariableDeclaration",
                                                "modifiers": [],
                                                "annotations": [],
                                                "type": {
                                                    "node_type": "ReferenceType",
                                                    "name": "Properties",
                                                    "dimensions": [],
                                                    "arguments": null,
                                                    "sub_type": null
                                                },
                                                "declarators": [
                                                    {
                                                        "node_type": "VariableDeclarator",
                                                        "name": "nameNodeProperties",
                                                        "dimensions": [],
                                                        "initializer": {
                                                            "node_type": "ClassCreator",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": null,
                                                            "selectors": [],
                                                            "type": {
                                                                "node_type": "ReferenceType",
                                                                "name": "Properties",
                                                                "dimensions": null,
                                                                "arguments": null,
                                                                "sub_type": null
                                                            },
                                                            "constructor_type_arguments": null,
                                                            "arguments": [],
                                                            "body": null
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "node_type": "StatementExpression",
                                                "label": null,
                                                "expression": {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "nameNodeProperties",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [
                                                        {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "nnInfoInputStream"
                                                        }
                                                    ],
                                                    "member": "load"
                                                }
                                            },
                                            {
                                                "node_type": "ReturnStatement",
                                                "label": null,
                                                "expression": {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "Optional",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [
                                                        {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "nameNodeProperties"
                                                        }
                                                    ],
                                                    "member": "of"
                                                }
                                            }
                                        ],
                                        "catches": [
                                            {
                                                "node_type": "CatchClause",
                                                "label": null,
                                                "parameter": {
                                                    "node_type": "CatchClauseParameter",
                                                    "modifiers": null,
                                                    "annotations": null,
                                                    "types": [
                                                        "FileNotFoundException"
                                                    ],
                                                    "name": "fnfe"
                                                },
                                                "block": [
                                                    {
                                                        "node_type": "StatementExpression",
                                                        "label": null,
                                                        "expression": {
                                                            "node_type": "MethodInvocation",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "log",
                                                            "selectors": [],
                                                            "type_arguments": null,
                                                            "arguments": [
                                                                {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "\"NameNode host information not yet available\""
                                                                }
                                                            ],
                                                            "member": "debug"
                                                        }
                                                    },
                                                    {
                                                        "node_type": "StatementExpression",
                                                        "label": null,
                                                        "expression": {
                                                            "node_type": "MethodInvocation",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "Thread",
                                                            "selectors": [],
                                                            "type_arguments": null,
                                                            "arguments": [
                                                                {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "1000"
                                                                }
                                                            ],
                                                            "member": "sleep"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "node_type": "CatchClause",
                                                "label": null,
                                                "parameter": {
                                                    "node_type": "CatchClauseParameter",
                                                    "modifiers": null,
                                                    "annotations": null,
                                                    "types": [
                                                        "IOException"
                                                    ],
                                                    "name": "ioe"
                                                },
                                                "block": [
                                                    {
                                                        "node_type": "StatementExpression",
                                                        "label": null,
                                                        "expression": {
                                                            "node_type": "MethodInvocation",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "log",
                                                            "selectors": [],
                                                            "type_arguments": null,
                                                            "arguments": [
                                                                {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "\"Unable to fetch NameNode host information; retrying\""
                                                                },
                                                                {
                                                                    "node_type": "MemberReference",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": "",
                                                                    "selectors": [],
                                                                    "member": "ioe"
                                                                }
                                                            ],
                                                            "member": "warn"
                                                        }
                                                    },
                                                    {
                                                        "node_type": "StatementExpression",
                                                        "label": null,
                                                        "expression": {
                                                            "node_type": "MethodInvocation",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "Thread",
                                                            "selectors": [],
                                                            "type_arguments": null,
                                                            "arguments": [
                                                                {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "1000"
                                                                }
                                                            ],
                                                            "member": "sleep"
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "finally_block": null
                                    }
                                ]
                            }
                        },
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "Optional",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "empty"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Wait for the launched NameNode to finish starting up. Continues until\n   * {@code shouldExit} returns true.\n   *\n   * @param nameNodeProperties The set of properties containing information\n   *                           about the NameNode.\n   * @param shouldExit Should return true iff this should stop waiting.\n   * @param log Where to log information.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": null,
                    "name": "waitForNameNodeStartup",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Supplier",
                                "dimensions": [],
                                "arguments": [
                                    {
                                        "node_type": "TypeArgument",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "Boolean",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "pattern_type": null
                                    }
                                ],
                                "sub_type": null
                            },
                            "name": "shouldExit",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Logger",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "log",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException",
                        "InterruptedException"
                    ],
                    "body": [
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "shouldExit",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "get"
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "ReturnStatement",
                                        "label": null,
                                        "expression": null
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Waiting for NameNode to finish starting up...\""
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Startup progress\""
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "NAMENODE_STARTUP_PROGRESS_JMX_QUERY"
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"PercentComplete\""
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "1.0"
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "0.01"
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "false"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "nameNodeProperties"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "shouldExit"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "log"
                                    }
                                ],
                                "member": "waitForNameNodeJMXValue"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"NameNode has started!\""
                                    }
                                ],
                                "member": "info"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Wait for the launched NameNode to be ready, i.e. to have at least 99% of\n   * its DataNodes register, have fewer than 0.01% of its blocks missing, and\n   * less than 1% of its blocks under replicated. Continues until the criteria\n   * have been met or {@code shouldExit} returns true.\n   *\n   * @param nameNodeProperties The set of properties containing information\n   *                           about the NameNode.\n   * @param numTotalDataNodes Total expected number of DataNodes to register.\n   * @param shouldExit Should return true iff this should stop waiting.\n   * @param log Where to log information.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": null,
                    "name": "waitForNameNodeReadiness",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "int",
                                "dimensions": []
                            },
                            "name": "numTotalDataNodes",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "boolean",
                                "dimensions": []
                            },
                            "name": "triggerBlockReports",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Supplier",
                                "dimensions": [],
                                "arguments": [
                                    {
                                        "node_type": "TypeArgument",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "Boolean",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "pattern_type": null
                                    }
                                ],
                                "sub_type": null
                            },
                            "name": "shouldExit",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Configuration",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "conf",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Logger",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "log",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException",
                        "InterruptedException"
                    ],
                    "body": [
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "shouldExit",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "get"
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "ReturnStatement",
                                        "label": null,
                                        "expression": null
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "int",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "minDataNodes",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "Cast",
                                        "type": {
                                            "node_type": "BasicType",
                                            "name": "int",
                                            "dimensions": []
                                        },
                                        "expression": {
                                            "node_type": "BinaryOperation",
                                            "operator": "*",
                                            "operandl": {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "conf",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "DATANODE_LIVE_MIN_FRACTION_KEY"
                                                    },
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "DATANODE_LIVE_MIN_FRACTION_DEFAULT"
                                                    }
                                                ],
                                                "member": "getFloat"
                                            },
                                            "operandr": {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "numTotalDataNodes"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "String",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "Literal",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": null,
                                                "selectors": [],
                                                "value": "\"Waiting for %d DataNodes to register with the NameNode...\""
                                            },
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "minDataNodes"
                                            }
                                        ],
                                        "member": "format"
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Number of live DataNodes\""
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "FSNAMESYSTEM_STATE_JMX_QUERY"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "JMX_LIVE_NODE_COUNT"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "minDataNodes"
                                    },
                                    {
                                        "node_type": "BinaryOperation",
                                        "operator": "*",
                                        "operandl": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "numTotalDataNodes"
                                        },
                                        "operandr": {
                                            "node_type": "Literal",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "value": "0.001"
                                        }
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "false"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "nameNodeProperties"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "shouldExit"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "log"
                                    }
                                ],
                                "member": "waitForNameNodeJMXValue"
                            }
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "int",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "totalBlocks",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "Integer",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "nameNodeProperties"
                                                    },
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "FSNAMESYSTEM_STATE_JMX_QUERY"
                                                    },
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "JMX_BLOCKS_TOTAL"
                                                    }
                                                ],
                                                "member": "fetchNameNodeJMXValue"
                                            }
                                        ],
                                        "member": "parseInt"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "AtomicBoolean",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "doneWaiting",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "ClassCreator",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "AtomicBoolean",
                                            "dimensions": null,
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "constructor_type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "Literal",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": null,
                                                "selectors": [],
                                                "value": "false"
                                            }
                                        ],
                                        "body": null
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "MemberReference",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "",
                                "selectors": [],
                                "member": "triggerBlockReports"
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "LocalVariableDeclaration",
                                        "modifiers": [
                                            "final"
                                        ],
                                        "annotations": [],
                                        "type": {
                                            "node_type": "BasicType",
                                            "name": "int",
                                            "dimensions": []
                                        },
                                        "declarators": [
                                            {
                                                "node_type": "VariableDeclarator",
                                                "name": "blockThreshold",
                                                "dimensions": [],
                                                "initializer": {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "*",
                                                    "operandl": {
                                                        "node_type": "BinaryOperation",
                                                        "operator": "/",
                                                        "operandl": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "totalBlocks"
                                                        },
                                                        "operandr": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "numTotalDataNodes"
                                                        }
                                                    },
                                                    "operandr": {
                                                        "node_type": "Literal",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": null,
                                                        "selectors": [],
                                                        "value": "2"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "conf",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "CommonConfigurationKeysPublic",
                                                    "selectors": [],
                                                    "member": "HADOOP_SECURITY_AUTHENTICATION"
                                                },
                                                {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "\"simple\""
                                                }
                                            ],
                                            "member": "set"
                                        }
                                    },
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "conf",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "CommonConfigurationKeysPublic",
                                                    "selectors": [],
                                                    "member": "HADOOP_SECURITY_AUTHORIZATION"
                                                },
                                                {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "\"false\""
                                                }
                                            ],
                                            "member": "set"
                                        }
                                    },
                                    {
                                        "node_type": "LocalVariableDeclaration",
                                        "modifiers": [
                                            "final"
                                        ],
                                        "annotations": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "DistributedFileSystem",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "declarators": [
                                            {
                                                "node_type": "VariableDeclarator",
                                                "name": "dfs",
                                                "dimensions": [],
                                                "initializer": {
                                                    "node_type": "Cast",
                                                    "type": {
                                                        "node_type": "ReferenceType",
                                                        "name": "DistributedFileSystem",
                                                        "dimensions": [],
                                                        "arguments": null,
                                                        "sub_type": null
                                                    },
                                                    "expression": {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "FileSystem",
                                                        "selectors": [],
                                                        "type_arguments": null,
                                                        "arguments": [
                                                            {
                                                                "node_type": "MethodInvocation",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "type_arguments": null,
                                                                "arguments": [
                                                                    {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "nameNodeProperties"
                                                                    }
                                                                ],
                                                                "member": "getNameNodeHdfsUri"
                                                            },
                                                            {
                                                                "node_type": "MemberReference",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "member": "conf"
                                                            }
                                                        ],
                                                        "member": "get"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "log",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "+",
                                                    "operandl": {
                                                        "node_type": "BinaryOperation",
                                                        "operator": "+",
                                                        "operandl": {
                                                            "node_type": "Literal",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": null,
                                                            "selectors": [],
                                                            "value": "\"Launching thread to trigger block reports for Datanodes with <\""
                                                        },
                                                        "operandr": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "blockThreshold"
                                                        }
                                                    },
                                                    "operandr": {
                                                        "node_type": "Literal",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": null,
                                                        "selectors": [],
                                                        "value": "\" blocks reported\""
                                                    }
                                                }
                                            ],
                                            "member": "info"
                                        }
                                    },
                                    {
                                        "node_type": "LocalVariableDeclaration",
                                        "modifiers": [],
                                        "annotations": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "Thread",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "declarators": [
                                            {
                                                "node_type": "VariableDeclarator",
                                                "name": "blockReportThread",
                                                "dimensions": [],
                                                "initializer": {
                                                    "node_type": "ClassCreator",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "type": {
                                                        "node_type": "ReferenceType",
                                                        "name": "Thread",
                                                        "dimensions": null,
                                                        "arguments": null,
                                                        "sub_type": null
                                                    },
                                                    "constructor_type_arguments": null,
                                                    "arguments": [
                                                        {
                                                            "node_type": "LambdaExpression",
                                                            "parameters": [],
                                                            "body": [
                                                                {
                                                                    "node_type": "LocalVariableDeclaration",
                                                                    "modifiers": [],
                                                                    "annotations": [],
                                                                    "type": {
                                                                        "node_type": "BasicType",
                                                                        "name": "long",
                                                                        "dimensions": []
                                                                    },
                                                                    "declarators": [
                                                                        {
                                                                            "node_type": "VariableDeclarator",
                                                                            "name": "lastUnderRepBlocks",
                                                                            "dimensions": [],
                                                                            "initializer": {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "Long",
                                                                                "selectors": [],
                                                                                "member": "MAX_VALUE"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node_type": "TryStatement",
                                                                    "label": null,
                                                                    "resources": null,
                                                                    "block": [
                                                                        {
                                                                            "node_type": "WhileStatement",
                                                                            "label": null,
                                                                            "condition": {
                                                                                "node_type": "Literal",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": null,
                                                                                "selectors": [],
                                                                                "value": "true"
                                                                            },
                                                                            "body": {
                                                                                "node_type": "BlockStatement",
                                                                                "label": null,
                                                                                "statements": [
                                                                                    {
                                                                                        "node_type": "TryStatement",
                                                                                        "label": null,
                                                                                        "resources": null,
                                                                                        "block": [
                                                                                            {
                                                                                                "node_type": "StatementExpression",
                                                                                                "label": null,
                                                                                                "expression": {
                                                                                                    "node_type": "MethodInvocation",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": "Thread",
                                                                                                    "selectors": [],
                                                                                                    "type_arguments": null,
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "node_type": "MethodInvocation",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "TimeUnit.MINUTES",
                                                                                                            "selectors": [],
                                                                                                            "type_arguments": null,
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "node_type": "Literal",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": null,
                                                                                                                    "selectors": [],
                                                                                                                    "value": "1"
                                                                                                                }
                                                                                                            ],
                                                                                                            "member": "toMillis"
                                                                                                        }
                                                                                                    ],
                                                                                                    "member": "sleep"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "node_type": "LocalVariableDeclaration",
                                                                                                "modifiers": [],
                                                                                                "annotations": [],
                                                                                                "type": {
                                                                                                    "node_type": "BasicType",
                                                                                                    "name": "long",
                                                                                                    "dimensions": []
                                                                                                },
                                                                                                "declarators": [
                                                                                                    {
                                                                                                        "node_type": "VariableDeclarator",
                                                                                                        "name": "underRepBlocks",
                                                                                                        "dimensions": [],
                                                                                                        "initializer": {
                                                                                                            "node_type": "BinaryOperation",
                                                                                                            "operator": "+",
                                                                                                            "operandl": {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "Long",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "MethodInvocation",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "type_arguments": null,
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "node_type": "MemberReference",
                                                                                                                                "prefix_operators": [],
                                                                                                                                "postfix_operators": [],
                                                                                                                                "qualifier": "",
                                                                                                                                "selectors": [],
                                                                                                                                "member": "nameNodeProperties"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "node_type": "MemberReference",
                                                                                                                                "prefix_operators": [],
                                                                                                                                "postfix_operators": [],
                                                                                                                                "qualifier": "",
                                                                                                                                "selectors": [],
                                                                                                                                "member": "FSNAMESYSTEM_JMX_QUERY"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "node_type": "MemberReference",
                                                                                                                                "prefix_operators": [],
                                                                                                                                "postfix_operators": [],
                                                                                                                                "qualifier": "",
                                                                                                                                "selectors": [],
                                                                                                                                "member": "JMX_MISSING_BLOCKS"
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "member": "fetchNameNodeJMXValue"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "parseLong"
                                                                                                            },
                                                                                                            "operandr": {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "Long",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "MethodInvocation",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "type_arguments": null,
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "node_type": "MemberReference",
                                                                                                                                "prefix_operators": [],
                                                                                                                                "postfix_operators": [],
                                                                                                                                "qualifier": "",
                                                                                                                                "selectors": [],
                                                                                                                                "member": "nameNodeProperties"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "node_type": "MemberReference",
                                                                                                                                "prefix_operators": [],
                                                                                                                                "postfix_operators": [],
                                                                                                                                "qualifier": "",
                                                                                                                                "selectors": [],
                                                                                                                                "member": "FSNAMESYSTEM_STATE_JMX_QUERY"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "node_type": "MemberReference",
                                                                                                                                "prefix_operators": [],
                                                                                                                                "postfix_operators": [],
                                                                                                                                "qualifier": "",
                                                                                                                                "selectors": [],
                                                                                                                                "member": "JMX_UNDER_REPLICATED_BLOCKS"
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "member": "fetchNameNodeJMXValue"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "parseLong"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "node_type": "LocalVariableDeclaration",
                                                                                                "modifiers": [],
                                                                                                "annotations": [],
                                                                                                "type": {
                                                                                                    "node_type": "BasicType",
                                                                                                    "name": "long",
                                                                                                    "dimensions": []
                                                                                                },
                                                                                                "declarators": [
                                                                                                    {
                                                                                                        "node_type": "VariableDeclarator",
                                                                                                        "name": "blockDecrease",
                                                                                                        "dimensions": [],
                                                                                                        "initializer": {
                                                                                                            "node_type": "BinaryOperation",
                                                                                                            "operator": "-",
                                                                                                            "operandl": {
                                                                                                                "node_type": "MemberReference",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "",
                                                                                                                "selectors": [],
                                                                                                                "member": "lastUnderRepBlocks"
                                                                                                            },
                                                                                                            "operandr": {
                                                                                                                "node_type": "MemberReference",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "",
                                                                                                                "selectors": [],
                                                                                                                "member": "underRepBlocks"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "node_type": "StatementExpression",
                                                                                                "label": null,
                                                                                                "expression": {
                                                                                                    "node_type": "Assignment",
                                                                                                    "expressionl": {
                                                                                                        "node_type": "MemberReference",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "",
                                                                                                        "selectors": [],
                                                                                                        "member": "lastUnderRepBlocks"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "node_type": "MemberReference",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "",
                                                                                                        "selectors": [],
                                                                                                        "member": "underRepBlocks"
                                                                                                    },
                                                                                                    "type": "="
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "node_type": "IfStatement",
                                                                                                "label": null,
                                                                                                "condition": {
                                                                                                    "node_type": "BinaryOperation",
                                                                                                    "operator": "||",
                                                                                                    "operandl": {
                                                                                                        "node_type": "BinaryOperation",
                                                                                                        "operator": "<",
                                                                                                        "operandl": {
                                                                                                            "node_type": "MemberReference",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "",
                                                                                                            "selectors": [],
                                                                                                            "member": "blockDecrease"
                                                                                                        },
                                                                                                        "operandr": {
                                                                                                            "node_type": "Literal",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": null,
                                                                                                            "selectors": [],
                                                                                                            "value": "0"
                                                                                                        }
                                                                                                    },
                                                                                                    "operandr": {
                                                                                                        "node_type": "BinaryOperation",
                                                                                                        "operator": ">",
                                                                                                        "operandl": {
                                                                                                            "node_type": "MemberReference",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "",
                                                                                                            "selectors": [],
                                                                                                            "member": "blockDecrease"
                                                                                                        },
                                                                                                        "operandr": {
                                                                                                            "node_type": "BinaryOperation",
                                                                                                            "operator": "*",
                                                                                                            "operandl": {
                                                                                                                "node_type": "MemberReference",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "",
                                                                                                                "selectors": [],
                                                                                                                "member": "totalBlocks"
                                                                                                            },
                                                                                                            "operandr": {
                                                                                                                "node_type": "Literal",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": null,
                                                                                                                "selectors": [],
                                                                                                                "value": "0.001"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then_statement": {
                                                                                                    "node_type": "BlockStatement",
                                                                                                    "label": null,
                                                                                                    "statements": [
                                                                                                        {
                                                                                                            "node_type": "ContinueStatement",
                                                                                                            "label": null,
                                                                                                            "goto": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "else_statement": null
                                                                                            },
                                                                                            {
                                                                                                "node_type": "LocalVariableDeclaration",
                                                                                                "modifiers": [],
                                                                                                "annotations": [],
                                                                                                "type": {
                                                                                                    "node_type": "ReferenceType",
                                                                                                    "name": "String",
                                                                                                    "dimensions": [],
                                                                                                    "arguments": null,
                                                                                                    "sub_type": null
                                                                                                },
                                                                                                "declarators": [
                                                                                                    {
                                                                                                        "node_type": "VariableDeclarator",
                                                                                                        "name": "liveNodeListString",
                                                                                                        "dimensions": [],
                                                                                                        "initializer": {
                                                                                                            "node_type": "MethodInvocation",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "",
                                                                                                            "selectors": [],
                                                                                                            "type_arguments": null,
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "node_type": "MemberReference",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": "",
                                                                                                                    "selectors": [],
                                                                                                                    "member": "nameNodeProperties"
                                                                                                                },
                                                                                                                {
                                                                                                                    "node_type": "MemberReference",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": "",
                                                                                                                    "selectors": [],
                                                                                                                    "member": "NAMENODE_INFO_JMX_QUERY"
                                                                                                                },
                                                                                                                {
                                                                                                                    "node_type": "MemberReference",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": "",
                                                                                                                    "selectors": [],
                                                                                                                    "member": "JMX_LIVE_NODES_LIST"
                                                                                                                }
                                                                                                            ],
                                                                                                            "member": "fetchNameNodeJMXValue"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "node_type": "LocalVariableDeclaration",
                                                                                                "modifiers": [],
                                                                                                "annotations": [],
                                                                                                "type": {
                                                                                                    "node_type": "ReferenceType",
                                                                                                    "name": "Set",
                                                                                                    "dimensions": [],
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "node_type": "TypeArgument",
                                                                                                            "type": {
                                                                                                                "node_type": "ReferenceType",
                                                                                                                "name": "String",
                                                                                                                "dimensions": [],
                                                                                                                "arguments": null,
                                                                                                                "sub_type": null
                                                                                                            },
                                                                                                            "pattern_type": null
                                                                                                        }
                                                                                                    ],
                                                                                                    "sub_type": null
                                                                                                },
                                                                                                "declarators": [
                                                                                                    {
                                                                                                        "node_type": "VariableDeclarator",
                                                                                                        "name": "datanodesToReport",
                                                                                                        "dimensions": [],
                                                                                                        "initializer": {
                                                                                                            "node_type": "MethodInvocation",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "",
                                                                                                            "selectors": [],
                                                                                                            "type_arguments": null,
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "node_type": "MemberReference",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": "",
                                                                                                                    "selectors": [],
                                                                                                                    "member": "liveNodeListString"
                                                                                                                },
                                                                                                                {
                                                                                                                    "node_type": "MemberReference",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": "",
                                                                                                                    "selectors": [],
                                                                                                                    "member": "blockThreshold"
                                                                                                                },
                                                                                                                {
                                                                                                                    "node_type": "MemberReference",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": "",
                                                                                                                    "selectors": [],
                                                                                                                    "member": "log"
                                                                                                                }
                                                                                                            ],
                                                                                                            "member": "parseStaleDataNodeList"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "node_type": "IfStatement",
                                                                                                "label": null,
                                                                                                "condition": {
                                                                                                    "node_type": "BinaryOperation",
                                                                                                    "operator": "&&",
                                                                                                    "operandl": {
                                                                                                        "node_type": "MethodInvocation",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "datanodesToReport",
                                                                                                        "selectors": [],
                                                                                                        "type_arguments": null,
                                                                                                        "arguments": [],
                                                                                                        "member": "isEmpty"
                                                                                                    },
                                                                                                    "operandr": {
                                                                                                        "node_type": "MethodInvocation",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "doneWaiting",
                                                                                                        "selectors": [],
                                                                                                        "type_arguments": null,
                                                                                                        "arguments": [],
                                                                                                        "member": "get"
                                                                                                    }
                                                                                                },
                                                                                                "then_statement": {
                                                                                                    "node_type": "BlockStatement",
                                                                                                    "label": null,
                                                                                                    "statements": [
                                                                                                        {
                                                                                                            "node_type": "StatementExpression",
                                                                                                            "label": null,
                                                                                                            "expression": {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "log",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "BinaryOperation",
                                                                                                                        "operator": "+",
                                                                                                                        "operandl": {
                                                                                                                            "node_type": "Literal",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": null,
                                                                                                                            "selectors": [],
                                                                                                                            "value": "\"BlockReportThread exiting; all DataNodes have \""
                                                                                                                        },
                                                                                                                        "operandr": {
                                                                                                                            "node_type": "Literal",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": null,
                                                                                                                            "selectors": [],
                                                                                                                            "value": "\"reported blocks\""
                                                                                                                        }
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "info"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "node_type": "BreakStatement",
                                                                                                            "label": null,
                                                                                                            "goto": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "else_statement": null
                                                                                            },
                                                                                            {
                                                                                                "node_type": "StatementExpression",
                                                                                                "label": null,
                                                                                                "expression": {
                                                                                                    "node_type": "MethodInvocation",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": "log",
                                                                                                    "selectors": [],
                                                                                                    "type_arguments": null,
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "node_type": "Literal",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": null,
                                                                                                            "selectors": [],
                                                                                                            "value": "\"Queueing {} Datanodes for block report: {}\""
                                                                                                        },
                                                                                                        {
                                                                                                            "node_type": "MethodInvocation",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "datanodesToReport",
                                                                                                            "selectors": [],
                                                                                                            "type_arguments": null,
                                                                                                            "arguments": [],
                                                                                                            "member": "size"
                                                                                                        },
                                                                                                        {
                                                                                                            "node_type": "MethodInvocation",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "Joiner",
                                                                                                            "selectors": [
                                                                                                                {
                                                                                                                    "node_type": "MethodInvocation",
                                                                                                                    "prefix_operators": null,
                                                                                                                    "postfix_operators": null,
                                                                                                                    "qualifier": null,
                                                                                                                    "selectors": null,
                                                                                                                    "type_arguments": null,
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "node_type": "MemberReference",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": "",
                                                                                                                            "selectors": [],
                                                                                                                            "member": "datanodesToReport"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "member": "join"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type_arguments": null,
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "node_type": "Literal",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": null,
                                                                                                                    "selectors": [],
                                                                                                                    "value": "\",\""
                                                                                                                }
                                                                                                            ],
                                                                                                            "member": "on"
                                                                                                        }
                                                                                                    ],
                                                                                                    "member": "info"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "node_type": "LocalVariableDeclaration",
                                                                                                "modifiers": [],
                                                                                                "annotations": [],
                                                                                                "type": {
                                                                                                    "node_type": "ReferenceType",
                                                                                                    "name": "DatanodeInfo",
                                                                                                    "dimensions": [
                                                                                                        null
                                                                                                    ],
                                                                                                    "arguments": null,
                                                                                                    "sub_type": null
                                                                                                },
                                                                                                "declarators": [
                                                                                                    {
                                                                                                        "node_type": "VariableDeclarator",
                                                                                                        "name": "datanodes",
                                                                                                        "dimensions": [],
                                                                                                        "initializer": {
                                                                                                            "node_type": "MethodInvocation",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "dfs",
                                                                                                            "selectors": [],
                                                                                                            "type_arguments": null,
                                                                                                            "arguments": [],
                                                                                                            "member": "getDataNodeStats"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "node_type": "LocalVariableDeclaration",
                                                                                                "modifiers": [],
                                                                                                "annotations": [],
                                                                                                "type": {
                                                                                                    "node_type": "BasicType",
                                                                                                    "name": "int",
                                                                                                    "dimensions": []
                                                                                                },
                                                                                                "declarators": [
                                                                                                    {
                                                                                                        "node_type": "VariableDeclarator",
                                                                                                        "name": "cnt",
                                                                                                        "dimensions": [],
                                                                                                        "initializer": {
                                                                                                            "node_type": "Literal",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": null,
                                                                                                            "selectors": [],
                                                                                                            "value": "0"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "node_type": "ForStatement",
                                                                                                "label": null,
                                                                                                "control": {
                                                                                                    "node_type": "EnhancedForControl",
                                                                                                    "var": {
                                                                                                        "node_type": "VariableDeclaration",
                                                                                                        "modifiers": [],
                                                                                                        "annotations": [],
                                                                                                        "type": {
                                                                                                            "node_type": "ReferenceType",
                                                                                                            "name": "DatanodeInfo",
                                                                                                            "dimensions": [],
                                                                                                            "arguments": null,
                                                                                                            "sub_type": null
                                                                                                        },
                                                                                                        "declarators": [
                                                                                                            {
                                                                                                                "node_type": "VariableDeclarator",
                                                                                                                "name": "datanode",
                                                                                                                "dimensions": null,
                                                                                                                "initializer": null
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "iterable": {
                                                                                                        "node_type": "MemberReference",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "",
                                                                                                        "selectors": [],
                                                                                                        "member": "datanodes"
                                                                                                    }
                                                                                                },
                                                                                                "body": {
                                                                                                    "node_type": "BlockStatement",
                                                                                                    "label": null,
                                                                                                    "statements": [
                                                                                                        {
                                                                                                            "node_type": "IfStatement",
                                                                                                            "label": null,
                                                                                                            "condition": {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "datanodesToReport",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "MethodInvocation",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "datanode",
                                                                                                                        "selectors": [],
                                                                                                                        "type_arguments": null,
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "node_type": "Literal",
                                                                                                                                "prefix_operators": [],
                                                                                                                                "postfix_operators": [],
                                                                                                                                "qualifier": null,
                                                                                                                                "selectors": [],
                                                                                                                                "value": "true"
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "member": "getXferAddr"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "contains"
                                                                                                            },
                                                                                                            "then_statement": {
                                                                                                                "node_type": "BlockStatement",
                                                                                                                "label": null,
                                                                                                                "statements": [
                                                                                                                    {
                                                                                                                        "node_type": "StatementExpression",
                                                                                                                        "label": null,
                                                                                                                        "expression": {
                                                                                                                            "node_type": "MethodInvocation",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": "Thread",
                                                                                                                            "selectors": [],
                                                                                                                            "type_arguments": null,
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "node_type": "Literal",
                                                                                                                                    "prefix_operators": [],
                                                                                                                                    "postfix_operators": [],
                                                                                                                                    "qualifier": null,
                                                                                                                                    "selectors": [],
                                                                                                                                    "value": "1"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "member": "sleep"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "StatementExpression",
                                                                                                                        "label": null,
                                                                                                                        "expression": {
                                                                                                                            "node_type": "MethodInvocation",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": "",
                                                                                                                            "selectors": [],
                                                                                                                            "type_arguments": null,
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "node_type": "MemberReference",
                                                                                                                                    "prefix_operators": [],
                                                                                                                                    "postfix_operators": [],
                                                                                                                                    "qualifier": "",
                                                                                                                                    "selectors": [],
                                                                                                                                    "member": "conf"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "node_type": "MethodInvocation",
                                                                                                                                    "prefix_operators": [],
                                                                                                                                    "postfix_operators": [],
                                                                                                                                    "qualifier": "datanode",
                                                                                                                                    "selectors": [],
                                                                                                                                    "type_arguments": null,
                                                                                                                                    "arguments": [
                                                                                                                                        {
                                                                                                                                            "node_type": "Literal",
                                                                                                                                            "prefix_operators": [],
                                                                                                                                            "postfix_operators": [],
                                                                                                                                            "qualifier": null,
                                                                                                                                            "selectors": [],
                                                                                                                                            "value": "true"
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "member": "getIpcAddr"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "member": "triggerDataNodeBlockReport"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "StatementExpression",
                                                                                                                        "label": null,
                                                                                                                        "expression": {
                                                                                                                            "node_type": "MemberReference",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [
                                                                                                                                "++"
                                                                                                                            ],
                                                                                                                            "qualifier": "",
                                                                                                                            "selectors": [],
                                                                                                                            "member": "cnt"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "StatementExpression",
                                                                                                                        "label": null,
                                                                                                                        "expression": {
                                                                                                                            "node_type": "MethodInvocation",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": "Thread",
                                                                                                                            "selectors": [],
                                                                                                                            "type_arguments": null,
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "node_type": "Literal",
                                                                                                                                    "prefix_operators": [],
                                                                                                                                    "postfix_operators": [],
                                                                                                                                    "qualifier": null,
                                                                                                                                    "selectors": [],
                                                                                                                                    "value": "1000"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "member": "sleep"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "else_statement": null
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "node_type": "IfStatement",
                                                                                                "label": null,
                                                                                                "condition": {
                                                                                                    "node_type": "BinaryOperation",
                                                                                                    "operator": "!=",
                                                                                                    "operandl": {
                                                                                                        "node_type": "MemberReference",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "",
                                                                                                        "selectors": [],
                                                                                                        "member": "cnt"
                                                                                                    },
                                                                                                    "operandr": {
                                                                                                        "node_type": "MethodInvocation",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "datanodesToReport",
                                                                                                        "selectors": [],
                                                                                                        "type_arguments": null,
                                                                                                        "arguments": [],
                                                                                                        "member": "size"
                                                                                                    }
                                                                                                },
                                                                                                "then_statement": {
                                                                                                    "node_type": "BlockStatement",
                                                                                                    "label": null,
                                                                                                    "statements": [
                                                                                                        {
                                                                                                            "node_type": "StatementExpression",
                                                                                                            "label": null,
                                                                                                            "expression": {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "log",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "BinaryOperation",
                                                                                                                        "operator": "+",
                                                                                                                        "operandl": {
                                                                                                                            "node_type": "Literal",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": null,
                                                                                                                            "selectors": [],
                                                                                                                            "value": "\"Found {} Datanodes to queue block reports for but \""
                                                                                                                        },
                                                                                                                        "operandr": {
                                                                                                                            "node_type": "Literal",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": null,
                                                                                                                            "selectors": [],
                                                                                                                            "value": "\"was only able to trigger {}\""
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MethodInvocation",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "datanodesToReport",
                                                                                                                        "selectors": [],
                                                                                                                        "type_arguments": null,
                                                                                                                        "arguments": [],
                                                                                                                        "member": "size"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "cnt"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "warn"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "else_statement": null
                                                                                            }
                                                                                        ],
                                                                                        "catches": [
                                                                                            {
                                                                                                "node_type": "CatchClause",
                                                                                                "label": null,
                                                                                                "parameter": {
                                                                                                    "node_type": "CatchClauseParameter",
                                                                                                    "modifiers": null,
                                                                                                    "annotations": null,
                                                                                                    "types": [
                                                                                                        "IOException"
                                                                                                    ],
                                                                                                    "name": "ioe"
                                                                                                },
                                                                                                "block": [
                                                                                                    {
                                                                                                        "node_type": "StatementExpression",
                                                                                                        "label": null,
                                                                                                        "expression": {
                                                                                                            "node_type": "MethodInvocation",
                                                                                                            "prefix_operators": [],
                                                                                                            "postfix_operators": [],
                                                                                                            "qualifier": "log",
                                                                                                            "selectors": [],
                                                                                                            "type_arguments": null,
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "node_type": "Literal",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": null,
                                                                                                                    "selectors": [],
                                                                                                                    "value": "\"Exception encountered in block report thread\""
                                                                                                                },
                                                                                                                {
                                                                                                                    "node_type": "MemberReference",
                                                                                                                    "prefix_operators": [],
                                                                                                                    "postfix_operators": [],
                                                                                                                    "qualifier": "",
                                                                                                                    "selectors": [],
                                                                                                                    "member": "ioe"
                                                                                                                }
                                                                                                            ],
                                                                                                            "member": "warn"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "finally_block": null
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "catches": [
                                                                        {
                                                                            "node_type": "CatchClause",
                                                                            "label": null,
                                                                            "parameter": {
                                                                                "node_type": "CatchClauseParameter",
                                                                                "modifiers": null,
                                                                                "annotations": null,
                                                                                "types": [
                                                                                    "InterruptedException"
                                                                                ],
                                                                                "name": "ie"
                                                                            },
                                                                            "block": []
                                                                        }
                                                                    ],
                                                                    "finally_block": null
                                                                },
                                                                {
                                                                    "node_type": "StatementExpression",
                                                                    "label": null,
                                                                    "expression": {
                                                                        "node_type": "MethodInvocation",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "log",
                                                                        "selectors": [],
                                                                        "type_arguments": null,
                                                                        "arguments": [
                                                                            {
                                                                                "node_type": "Literal",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": null,
                                                                                "selectors": [],
                                                                                "value": "\"Block reporting thread exiting\""
                                                                            }
                                                                        ],
                                                                        "member": "info"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "body": null
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "blockReportThread",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "true"
                                                }
                                            ],
                                            "member": "setDaemon"
                                        }
                                    },
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "blockReportThread",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "ClassCreator",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "type": {
                                                        "node_type": "ReferenceType",
                                                        "name": "YarnUncaughtExceptionHandler",
                                                        "dimensions": null,
                                                        "arguments": null,
                                                        "sub_type": null
                                                    },
                                                    "constructor_type_arguments": null,
                                                    "arguments": [],
                                                    "body": null
                                                }
                                            ],
                                            "member": "setUncaughtExceptionHandler"
                                        }
                                    },
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "blockReportThread",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [],
                                            "member": "start"
                                        }
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "float",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "maxMissingBlocks",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "BinaryOperation",
                                        "operator": "*",
                                        "operandl": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "totalBlocks"
                                        },
                                        "operandr": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "conf",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "",
                                                    "selectors": [],
                                                    "member": "MISSING_BLOCKS_MAX_FRACTION_KEY"
                                                },
                                                {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "",
                                                    "selectors": [],
                                                    "member": "MISSING_BLOCKS_MAX_FRACTION_DEFAULT"
                                                }
                                            ],
                                            "member": "getFloat"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Waiting for MissingBlocks to fall below {}...\""
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "maxMissingBlocks"
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Number of missing blocks\""
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "FSNAMESYSTEM_JMX_QUERY"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "JMX_MISSING_BLOCKS"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "maxMissingBlocks"
                                    },
                                    {
                                        "node_type": "BinaryOperation",
                                        "operator": "*",
                                        "operandl": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "totalBlocks"
                                        },
                                        "operandr": {
                                            "node_type": "Literal",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "value": "0.0001"
                                        }
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "true"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "nameNodeProperties"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "shouldExit"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "log"
                                    }
                                ],
                                "member": "waitForNameNodeJMXValue"
                            }
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "float",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "maxUnderreplicatedBlocks",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "BinaryOperation",
                                        "operator": "*",
                                        "operandl": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "totalBlocks"
                                        },
                                        "operandr": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "conf",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "",
                                                    "selectors": [],
                                                    "member": "UNDERREPLICATED_BLOCKS_MAX_FRACTION_KEY"
                                                },
                                                {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "",
                                                    "selectors": [],
                                                    "member": "UNDERREPLICATED_BLOCKS_MAX_FRACTION_DEFAULT"
                                                }
                                            ],
                                            "member": "getFloat"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Waiting for UnderReplicatedBlocks to fall below {}...\""
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "maxUnderreplicatedBlocks"
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"Number of under replicated blocks\""
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "FSNAMESYSTEM_STATE_JMX_QUERY"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "JMX_UNDER_REPLICATED_BLOCKS"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "maxUnderreplicatedBlocks"
                                    },
                                    {
                                        "node_type": "BinaryOperation",
                                        "operator": "*",
                                        "operandl": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "totalBlocks"
                                        },
                                        "operandr": {
                                            "node_type": "Literal",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "value": "0.001"
                                        }
                                    },
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "true"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "nameNodeProperties"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "shouldExit"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "log"
                                    }
                                ],
                                "member": "waitForNameNodeJMXValue"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "log",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "\"NameNode is ready for use!\""
                                    }
                                ],
                                "member": "info"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "doneWaiting",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "true"
                                    }
                                ],
                                "member": "set"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Trigger a block report on a given DataNode.\n   *\n   * @param conf Configuration\n   * @param dataNodeTarget The target; should be like {@code <host>:<port>}\n   */",
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": null,
                    "name": "triggerDataNodeBlockReport",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Configuration",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "conf",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "dataNodeTarget",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException"
                    ],
                    "body": [
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "InetSocketAddress",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "datanodeAddr",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "NetUtils",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "dataNodeTarget"
                                            }
                                        ],
                                        "member": "createSocketAddr"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "ClientDatanodeProtocol",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "dnProtocol",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "DFSUtilClient",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "datanodeAddr"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "UserGroupInformation",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [],
                                                "member": "getCurrentUser"
                                            },
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "conf"
                                            },
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "NetUtils",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "conf"
                                                    },
                                                    {
                                                        "node_type": "ClassReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "type": {
                                                            "node_type": "ReferenceType",
                                                            "name": "ClientDatanodeProtocol",
                                                            "dimensions": null,
                                                            "arguments": null,
                                                            "sub_type": null
                                                        }
                                                    }
                                                ],
                                                "member": "getSocketFactory"
                                            }
                                        ],
                                        "member": "createClientDatanodeProtocolProxy"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "dnProtocol",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "ClassCreator",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": null,
                                                "postfix_operators": null,
                                                "qualifier": null,
                                                "selectors": null,
                                                "type_arguments": null,
                                                "arguments": [],
                                                "member": "build"
                                            }
                                        ],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "BlockReportOptions",
                                            "dimensions": null,
                                            "arguments": null,
                                            "sub_type": {
                                                "node_type": "ReferenceType",
                                                "name": "Factory",
                                                "dimensions": null,
                                                "arguments": null,
                                                "sub_type": null
                                            }
                                        },
                                        "constructor_type_arguments": null,
                                        "arguments": [],
                                        "body": null
                                    }
                                ],
                                "member": "triggerBlockReport"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Poll the launched NameNode's JMX for a specific value, waiting for it to\n   * cross some threshold. Continues until the threshold has been crossed or\n   * {@code shouldExit} returns true. Periodically logs the current value.\n   *\n   * @param valueName The human-readable name of the value which is being\n   *                  polled (for printing purposes only).\n   * @param jmxBeanQuery The JMX bean query to execute; should return a JMX\n   *                     property matching {@code jmxProperty}.\n   * @param jmxProperty The name of the JMX property whose value should be\n   *                    polled.\n   * @param threshold The threshold value to wait for the JMX property to be\n   *                  above/below.\n   * @param printThreshold The threshold between each log statement; controls\n   *                       how frequently the value is printed. For example,\n   *                       if this was 10, a statement would be logged every\n   *                       time the value has changed by more than 10.\n   * @param decreasing True iff the property's value is decreasing and this\n   *                   should wait until it is lower than threshold; else the\n   *                   value is treated as increasing and will wait until it\n   *                   is higher than threshold.\n   * @param nameNodeProperties The set of properties containing information\n   *                           about the NameNode.\n   * @param shouldExit Should return true iff this should stop waiting.\n   * @param log Where to log information.\n   */",
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "annotations": [
                        {
                            "node_type": "Annotation",
                            "name": "SuppressWarnings",
                            "element": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"checkstyle:parameternumber\""
                            }
                        }
                    ],
                    "type_parameters": null,
                    "return_type": null,
                    "name": "waitForNameNodeJMXValue",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "valueName",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "jmxBeanQuery",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "jmxProperty",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "double",
                                "dimensions": []
                            },
                            "name": "threshold",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "double",
                                "dimensions": []
                            },
                            "name": "printThreshold",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "boolean",
                                "dimensions": []
                            },
                            "name": "decreasing",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Supplier",
                                "dimensions": [],
                                "arguments": [
                                    {
                                        "node_type": "TypeArgument",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "Boolean",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "pattern_type": null
                                    }
                                ],
                                "sub_type": null
                            },
                            "name": "shouldExit",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Logger",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "log",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "InterruptedException"
                    ],
                    "body": [
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "double",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "lastPrintedValue",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "TernaryExpression",
                                        "condition": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "decreasing"
                                        },
                                        "if_true": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "Double",
                                            "selectors": [],
                                            "member": "MAX_VALUE"
                                        },
                                        "if_false": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "Double",
                                            "selectors": [],
                                            "member": "MIN_VALUE"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "double",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "value",
                                    "dimensions": [],
                                    "initializer": null
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "int",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "retryCount",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "0"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "long",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "startTime",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "Time",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [],
                                        "member": "monotonicNow"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "WhileStatement",
                            "label": null,
                            "condition": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [
                                    "!"
                                ],
                                "postfix_operators": [],
                                "qualifier": "shouldExit",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "get"
                            },
                            "body": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "TryStatement",
                                        "label": null,
                                        "resources": null,
                                        "block": [
                                            {
                                                "node_type": "StatementExpression",
                                                "label": null,
                                                "expression": {
                                                    "node_type": "Assignment",
                                                    "expressionl": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "value"
                                                    },
                                                    "value": {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "Double",
                                                        "selectors": [],
                                                        "type_arguments": null,
                                                        "arguments": [
                                                            {
                                                                "node_type": "MethodInvocation",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "type_arguments": null,
                                                                "arguments": [
                                                                    {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "nameNodeProperties"
                                                                    },
                                                                    {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "jmxBeanQuery"
                                                                    },
                                                                    {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "jmxProperty"
                                                                    }
                                                                ],
                                                                "member": "fetchNameNodeJMXValue"
                                                            }
                                                        ],
                                                        "member": "parseDouble"
                                                    },
                                                    "type": "="
                                                }
                                            },
                                            {
                                                "node_type": "IfStatement",
                                                "label": null,
                                                "condition": {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "||",
                                                    "operandl": {
                                                        "node_type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "operandl": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "decreasing"
                                                        },
                                                        "operandr": {
                                                            "node_type": "BinaryOperation",
                                                            "operator": "<=",
                                                            "operandl": {
                                                                "node_type": "MemberReference",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "member": "value"
                                                            },
                                                            "operandr": {
                                                                "node_type": "MemberReference",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "member": "threshold"
                                                            }
                                                        }
                                                    },
                                                    "operandr": {
                                                        "node_type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "operandl": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [
                                                                "!"
                                                            ],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "decreasing"
                                                        },
                                                        "operandr": {
                                                            "node_type": "BinaryOperation",
                                                            "operator": ">=",
                                                            "operandl": {
                                                                "node_type": "MemberReference",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "member": "value"
                                                            },
                                                            "operandr": {
                                                                "node_type": "MemberReference",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "member": "threshold"
                                                            }
                                                        }
                                                    }
                                                },
                                                "then_statement": {
                                                    "node_type": "BlockStatement",
                                                    "label": null,
                                                    "statements": [
                                                        {
                                                            "node_type": "StatementExpression",
                                                            "label": null,
                                                            "expression": {
                                                                "node_type": "MethodInvocation",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "log",
                                                                "selectors": [],
                                                                "type_arguments": null,
                                                                "arguments": [
                                                                    {
                                                                        "node_type": "MethodInvocation",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "String",
                                                                        "selectors": [],
                                                                        "type_arguments": null,
                                                                        "arguments": [
                                                                            {
                                                                                "node_type": "Literal",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": null,
                                                                                "selectors": [],
                                                                                "value": "\"%s = %.2f; %s threshold of %.2f; done waiting after %d ms.\""
                                                                            },
                                                                            {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "valueName"
                                                                            },
                                                                            {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "value"
                                                                            },
                                                                            {
                                                                                "node_type": "TernaryExpression",
                                                                                "condition": {
                                                                                    "node_type": "MemberReference",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": "",
                                                                                    "selectors": [],
                                                                                    "member": "decreasing"
                                                                                },
                                                                                "if_true": {
                                                                                    "node_type": "Literal",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": null,
                                                                                    "selectors": [],
                                                                                    "value": "\"below\""
                                                                                },
                                                                                "if_false": {
                                                                                    "node_type": "Literal",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": null,
                                                                                    "selectors": [],
                                                                                    "value": "\"above\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "threshold"
                                                                            },
                                                                            {
                                                                                "node_type": "BinaryOperation",
                                                                                "operator": "-",
                                                                                "operandl": {
                                                                                    "node_type": "MethodInvocation",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": "Time",
                                                                                    "selectors": [],
                                                                                    "type_arguments": null,
                                                                                    "arguments": [],
                                                                                    "member": "monotonicNow"
                                                                                },
                                                                                "operandr": {
                                                                                    "node_type": "MemberReference",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": "",
                                                                                    "selectors": [],
                                                                                    "member": "startTime"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "member": "format"
                                                                    }
                                                                ],
                                                                "member": "info"
                                                            }
                                                        },
                                                        {
                                                            "node_type": "BreakStatement",
                                                            "label": null,
                                                            "goto": null
                                                        }
                                                    ]
                                                },
                                                "else_statement": {
                                                    "node_type": "IfStatement",
                                                    "label": null,
                                                    "condition": {
                                                        "node_type": "BinaryOperation",
                                                        "operator": ">=",
                                                        "operandl": {
                                                            "node_type": "MethodInvocation",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "Math",
                                                            "selectors": [],
                                                            "type_arguments": null,
                                                            "arguments": [
                                                                {
                                                                    "node_type": "BinaryOperation",
                                                                    "operator": "-",
                                                                    "operandl": {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "value"
                                                                    },
                                                                    "operandr": {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "lastPrintedValue"
                                                                    }
                                                                }
                                                            ],
                                                            "member": "abs"
                                                        },
                                                        "operandr": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "printThreshold"
                                                        }
                                                    },
                                                    "then_statement": {
                                                        "node_type": "BlockStatement",
                                                        "label": null,
                                                        "statements": [
                                                            {
                                                                "node_type": "StatementExpression",
                                                                "label": null,
                                                                "expression": {
                                                                    "node_type": "MethodInvocation",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": "log",
                                                                    "selectors": [],
                                                                    "type_arguments": null,
                                                                    "arguments": [
                                                                        {
                                                                            "node_type": "MethodInvocation",
                                                                            "prefix_operators": [],
                                                                            "postfix_operators": [],
                                                                            "qualifier": "String",
                                                                            "selectors": [],
                                                                            "type_arguments": null,
                                                                            "arguments": [
                                                                                {
                                                                                    "node_type": "Literal",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": null,
                                                                                    "selectors": [],
                                                                                    "value": "\"%s: %.2f\""
                                                                                },
                                                                                {
                                                                                    "node_type": "MemberReference",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": "",
                                                                                    "selectors": [],
                                                                                    "member": "valueName"
                                                                                },
                                                                                {
                                                                                    "node_type": "MemberReference",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": "",
                                                                                    "selectors": [],
                                                                                    "member": "value"
                                                                                }
                                                                            ],
                                                                            "member": "format"
                                                                        }
                                                                    ],
                                                                    "member": "info"
                                                                }
                                                            },
                                                            {
                                                                "node_type": "StatementExpression",
                                                                "label": null,
                                                                "expression": {
                                                                    "node_type": "Assignment",
                                                                    "expressionl": {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "lastPrintedValue"
                                                                    },
                                                                    "value": {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "value"
                                                                    },
                                                                    "type": "="
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "else_statement": null
                                                }
                                            }
                                        ],
                                        "catches": [
                                            {
                                                "node_type": "CatchClause",
                                                "label": null,
                                                "parameter": {
                                                    "node_type": "CatchClauseParameter",
                                                    "modifiers": null,
                                                    "annotations": null,
                                                    "types": [
                                                        "IOException"
                                                    ],
                                                    "name": "ioe"
                                                },
                                                "block": [
                                                    {
                                                        "node_type": "IfStatement",
                                                        "label": null,
                                                        "condition": {
                                                            "node_type": "BinaryOperation",
                                                            "operator": "==",
                                                            "operandl": {
                                                                "node_type": "BinaryOperation",
                                                                "operator": "%",
                                                                "operandl": {
                                                                    "node_type": "MemberReference",
                                                                    "prefix_operators": [
                                                                        "++"
                                                                    ],
                                                                    "postfix_operators": [],
                                                                    "qualifier": "",
                                                                    "selectors": [],
                                                                    "member": "retryCount"
                                                                },
                                                                "operandr": {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "20"
                                                                }
                                                            },
                                                            "operandr": {
                                                                "node_type": "Literal",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": null,
                                                                "selectors": [],
                                                                "value": "0"
                                                            }
                                                        },
                                                        "then_statement": {
                                                            "node_type": "BlockStatement",
                                                            "label": null,
                                                            "statements": [
                                                                {
                                                                    "node_type": "StatementExpression",
                                                                    "label": null,
                                                                    "expression": {
                                                                        "node_type": "MethodInvocation",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "log",
                                                                        "selectors": [],
                                                                        "type_arguments": null,
                                                                        "arguments": [
                                                                            {
                                                                                "node_type": "Literal",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": null,
                                                                                "selectors": [],
                                                                                "value": "\"Unable to fetch {}; retried {} times / waited {} ms\""
                                                                            },
                                                                            {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "valueName"
                                                                            },
                                                                            {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "retryCount"
                                                                            },
                                                                            {
                                                                                "node_type": "BinaryOperation",
                                                                                "operator": "-",
                                                                                "operandl": {
                                                                                    "node_type": "MethodInvocation",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": "Time",
                                                                                    "selectors": [],
                                                                                    "type_arguments": null,
                                                                                    "arguments": [],
                                                                                    "member": "monotonicNow"
                                                                                },
                                                                                "operandr": {
                                                                                    "node_type": "MemberReference",
                                                                                    "prefix_operators": [],
                                                                                    "postfix_operators": [],
                                                                                    "qualifier": "",
                                                                                    "selectors": [],
                                                                                    "member": "startTime"
                                                                                }
                                                                            },
                                                                            {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "ioe"
                                                                            }
                                                                        ],
                                                                        "member": "warn"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "else_statement": null
                                                    }
                                                ]
                                            }
                                        ],
                                        "finally_block": null
                                    },
                                    {
                                        "node_type": "StatementExpression",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "Thread",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "3000"
                                                }
                                            ],
                                            "member": "sleep"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "Set",
                        "dimensions": [],
                        "arguments": [
                            {
                                "node_type": "TypeArgument",
                                "type": {
                                    "node_type": "ReferenceType",
                                    "name": "String",
                                    "dimensions": [],
                                    "arguments": null,
                                    "sub_type": null
                                },
                                "pattern_type": null
                            }
                        ],
                        "sub_type": null
                    },
                    "name": "parseStaleDataNodeList",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "liveNodeJsonString",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "int",
                                "dimensions": []
                            },
                            "name": "blockThreshold",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Logger",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "log",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException"
                    ],
                    "body": [
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [
                                "final"
                            ],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Set",
                                "dimensions": [],
                                "arguments": [
                                    {
                                        "node_type": "TypeArgument",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "String",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "pattern_type": null
                                    }
                                ],
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "dataNodesToReport",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "ClassCreator",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "HashSet",
                                            "dimensions": null,
                                            "arguments": [],
                                            "sub_type": null
                                        },
                                        "constructor_type_arguments": null,
                                        "arguments": [],
                                        "body": null
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "JsonFactory",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "fac",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "ClassCreator",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "JsonFactory",
                                            "dimensions": null,
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "constructor_type_arguments": null,
                                        "arguments": [],
                                        "body": null
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "JsonParser",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "parser",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "fac",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "IOUtils",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "liveNodeJsonString"
                                                    },
                                                    {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "StandardCharsets.UTF_8",
                                                        "selectors": [],
                                                        "type_arguments": null,
                                                        "arguments": [],
                                                        "member": "name"
                                                    }
                                                ],
                                                "member": "toInputStream"
                                            }
                                        ],
                                        "member": "createParser"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "int",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "objectDepth",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "0"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "currentNodeAddr",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "null"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "ForStatement",
                            "label": null,
                            "control": {
                                "node_type": "ForControl",
                                "init": {
                                    "node_type": "VariableDeclaration",
                                    "modifiers": [],
                                    "annotations": [],
                                    "type": {
                                        "node_type": "ReferenceType",
                                        "name": "JsonToken",
                                        "dimensions": [],
                                        "arguments": null,
                                        "sub_type": null
                                    },
                                    "declarators": [
                                        {
                                            "node_type": "VariableDeclarator",
                                            "name": "tok",
                                            "dimensions": null,
                                            "initializer": {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "parser",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [],
                                                "member": "nextToken"
                                            }
                                        }
                                    ]
                                },
                                "condition": {
                                    "node_type": "BinaryOperation",
                                    "operator": "!=",
                                    "operandl": {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "tok"
                                    },
                                    "operandr": {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "null"
                                    }
                                },
                                "update": [
                                    {
                                        "node_type": "Assignment",
                                        "expressionl": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "tok"
                                        },
                                        "value": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "parser",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [],
                                            "member": "nextToken"
                                        },
                                        "type": "="
                                    }
                                ]
                            },
                            "body": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "IfStatement",
                                        "label": null,
                                        "condition": {
                                            "node_type": "BinaryOperation",
                                            "operator": "==",
                                            "operandl": {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "tok"
                                            },
                                            "operandr": {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "JsonToken",
                                                "selectors": [],
                                                "member": "START_OBJECT"
                                            }
                                        },
                                        "then_statement": {
                                            "node_type": "BlockStatement",
                                            "label": null,
                                            "statements": [
                                                {
                                                    "node_type": "StatementExpression",
                                                    "label": null,
                                                    "expression": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [
                                                            "++"
                                                        ],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "objectDepth"
                                                    }
                                                }
                                            ]
                                        },
                                        "else_statement": {
                                            "node_type": "IfStatement",
                                            "label": null,
                                            "condition": {
                                                "node_type": "BinaryOperation",
                                                "operator": "==",
                                                "operandl": {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "",
                                                    "selectors": [],
                                                    "member": "tok"
                                                },
                                                "operandr": {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "JsonToken",
                                                    "selectors": [],
                                                    "member": "END_OBJECT"
                                                }
                                            },
                                            "then_statement": {
                                                "node_type": "BlockStatement",
                                                "label": null,
                                                "statements": [
                                                    {
                                                        "node_type": "StatementExpression",
                                                        "label": null,
                                                        "expression": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [
                                                                "--"
                                                            ],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "objectDepth"
                                                        }
                                                    }
                                                ]
                                            },
                                            "else_statement": {
                                                "node_type": "IfStatement",
                                                "label": null,
                                                "condition": {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "==",
                                                    "operandl": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "tok"
                                                    },
                                                    "operandr": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "JsonToken",
                                                        "selectors": [],
                                                        "member": "FIELD_NAME"
                                                    }
                                                },
                                                "then_statement": {
                                                    "node_type": "BlockStatement",
                                                    "label": null,
                                                    "statements": [
                                                        {
                                                            "node_type": "IfStatement",
                                                            "label": null,
                                                            "condition": {
                                                                "node_type": "BinaryOperation",
                                                                "operator": "==",
                                                                "operandl": {
                                                                    "node_type": "MemberReference",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": "",
                                                                    "selectors": [],
                                                                    "member": "objectDepth"
                                                                },
                                                                "operandr": {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "1"
                                                                }
                                                            },
                                                            "then_statement": {
                                                                "node_type": "BlockStatement",
                                                                "label": null,
                                                                "statements": [
                                                                    {
                                                                        "node_type": "StatementExpression",
                                                                        "label": null,
                                                                        "expression": {
                                                                            "node_type": "Assignment",
                                                                            "expressionl": {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "currentNodeAddr"
                                                                            },
                                                                            "value": {
                                                                                "node_type": "MethodInvocation",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "parser",
                                                                                "selectors": [],
                                                                                "type_arguments": null,
                                                                                "arguments": [],
                                                                                "member": "getCurrentName"
                                                                            },
                                                                            "type": "="
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "else_statement": {
                                                                "node_type": "IfStatement",
                                                                "label": null,
                                                                "condition": {
                                                                    "node_type": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "operandl": {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "objectDepth"
                                                                    },
                                                                    "operandr": {
                                                                        "node_type": "Literal",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": null,
                                                                        "selectors": [],
                                                                        "value": "2"
                                                                    }
                                                                },
                                                                "then_statement": {
                                                                    "node_type": "BlockStatement",
                                                                    "label": null,
                                                                    "statements": [
                                                                        {
                                                                            "node_type": "IfStatement",
                                                                            "label": null,
                                                                            "condition": {
                                                                                "node_type": "MethodInvocation",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "parser",
                                                                                "selectors": [
                                                                                    {
                                                                                        "node_type": "MethodInvocation",
                                                                                        "prefix_operators": null,
                                                                                        "postfix_operators": null,
                                                                                        "qualifier": null,
                                                                                        "selectors": null,
                                                                                        "type_arguments": null,
                                                                                        "arguments": [
                                                                                            {
                                                                                                "node_type": "Literal",
                                                                                                "prefix_operators": [],
                                                                                                "postfix_operators": [],
                                                                                                "qualifier": null,
                                                                                                "selectors": [],
                                                                                                "value": "\"numBlocks\""
                                                                                            }
                                                                                        ],
                                                                                        "member": "equals"
                                                                                    }
                                                                                ],
                                                                                "type_arguments": null,
                                                                                "arguments": [],
                                                                                "member": "getCurrentName"
                                                                            },
                                                                            "then_statement": {
                                                                                "node_type": "BlockStatement",
                                                                                "label": null,
                                                                                "statements": [
                                                                                    {
                                                                                        "node_type": "LocalVariableDeclaration",
                                                                                        "modifiers": [],
                                                                                        "annotations": [],
                                                                                        "type": {
                                                                                            "node_type": "ReferenceType",
                                                                                            "name": "JsonToken",
                                                                                            "dimensions": [],
                                                                                            "arguments": null,
                                                                                            "sub_type": null
                                                                                        },
                                                                                        "declarators": [
                                                                                            {
                                                                                                "node_type": "VariableDeclarator",
                                                                                                "name": "valueToken",
                                                                                                "dimensions": [],
                                                                                                "initializer": {
                                                                                                    "node_type": "MethodInvocation",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": "parser",
                                                                                                    "selectors": [],
                                                                                                    "type_arguments": null,
                                                                                                    "arguments": [],
                                                                                                    "member": "nextToken"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "node_type": "IfStatement",
                                                                                        "label": null,
                                                                                        "condition": {
                                                                                            "node_type": "BinaryOperation",
                                                                                            "operator": "||",
                                                                                            "operandl": {
                                                                                                "node_type": "BinaryOperation",
                                                                                                "operator": "!=",
                                                                                                "operandl": {
                                                                                                    "node_type": "MemberReference",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": "",
                                                                                                    "selectors": [],
                                                                                                    "member": "valueToken"
                                                                                                },
                                                                                                "operandr": {
                                                                                                    "node_type": "MemberReference",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": "JsonToken",
                                                                                                    "selectors": [],
                                                                                                    "member": "VALUE_NUMBER_INT"
                                                                                                }
                                                                                            },
                                                                                            "operandr": {
                                                                                                "node_type": "BinaryOperation",
                                                                                                "operator": "==",
                                                                                                "operandl": {
                                                                                                    "node_type": "MemberReference",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": "",
                                                                                                    "selectors": [],
                                                                                                    "member": "currentNodeAddr"
                                                                                                },
                                                                                                "operandr": {
                                                                                                    "node_type": "Literal",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": null,
                                                                                                    "selectors": [],
                                                                                                    "value": "null"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "then_statement": {
                                                                                            "node_type": "BlockStatement",
                                                                                            "label": null,
                                                                                            "statements": [
                                                                                                {
                                                                                                    "node_type": "ThrowStatement",
                                                                                                    "label": null,
                                                                                                    "expression": {
                                                                                                        "node_type": "ClassCreator",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": null,
                                                                                                        "selectors": [],
                                                                                                        "type": {
                                                                                                            "node_type": "ReferenceType",
                                                                                                            "name": "IOException",
                                                                                                            "dimensions": null,
                                                                                                            "arguments": null,
                                                                                                            "sub_type": null
                                                                                                        },
                                                                                                        "constructor_type_arguments": null,
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "String",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "BinaryOperation",
                                                                                                                        "operator": "+",
                                                                                                                        "operandl": {
                                                                                                                            "node_type": "Literal",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": null,
                                                                                                                            "selectors": [],
                                                                                                                            "value": "\"Malformed LiveNodes JSON; \""
                                                                                                                        },
                                                                                                                        "operandr": {
                                                                                                                            "node_type": "Literal",
                                                                                                                            "prefix_operators": [],
                                                                                                                            "postfix_operators": [],
                                                                                                                            "qualifier": null,
                                                                                                                            "selectors": [],
                                                                                                                            "value": "\"got token = %s; currentNodeAddr = %s: %s\""
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "valueToken"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "currentNodeAddr"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "liveNodeJsonString"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "format"
                                                                                                            }
                                                                                                        ],
                                                                                                        "body": null
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "else_statement": null
                                                                                    },
                                                                                    {
                                                                                        "node_type": "LocalVariableDeclaration",
                                                                                        "modifiers": [],
                                                                                        "annotations": [],
                                                                                        "type": {
                                                                                            "node_type": "BasicType",
                                                                                            "name": "int",
                                                                                            "dimensions": []
                                                                                        },
                                                                                        "declarators": [
                                                                                            {
                                                                                                "node_type": "VariableDeclarator",
                                                                                                "name": "numBlocks",
                                                                                                "dimensions": [],
                                                                                                "initializer": {
                                                                                                    "node_type": "MethodInvocation",
                                                                                                    "prefix_operators": [],
                                                                                                    "postfix_operators": [],
                                                                                                    "qualifier": "parser",
                                                                                                    "selectors": [],
                                                                                                    "type_arguments": null,
                                                                                                    "arguments": [],
                                                                                                    "member": "getIntValue"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "node_type": "IfStatement",
                                                                                        "label": null,
                                                                                        "condition": {
                                                                                            "node_type": "BinaryOperation",
                                                                                            "operator": "<",
                                                                                            "operandl": {
                                                                                                "node_type": "MemberReference",
                                                                                                "prefix_operators": [],
                                                                                                "postfix_operators": [],
                                                                                                "qualifier": "",
                                                                                                "selectors": [],
                                                                                                "member": "numBlocks"
                                                                                            },
                                                                                            "operandr": {
                                                                                                "node_type": "MemberReference",
                                                                                                "prefix_operators": [],
                                                                                                "postfix_operators": [],
                                                                                                "qualifier": "",
                                                                                                "selectors": [],
                                                                                                "member": "blockThreshold"
                                                                                            }
                                                                                        },
                                                                                        "then_statement": {
                                                                                            "node_type": "BlockStatement",
                                                                                            "label": null,
                                                                                            "statements": [
                                                                                                {
                                                                                                    "node_type": "StatementExpression",
                                                                                                    "label": null,
                                                                                                    "expression": {
                                                                                                        "node_type": "MethodInvocation",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "log",
                                                                                                        "selectors": [],
                                                                                                        "type_arguments": null,
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "String",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "Literal",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": null,
                                                                                                                        "selectors": [],
                                                                                                                        "value": "\"Queueing Datanode <%s> for block report; numBlocks = %d\""
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "currentNodeAddr"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "numBlocks"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "format"
                                                                                                            }
                                                                                                        ],
                                                                                                        "member": "debug"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "node_type": "StatementExpression",
                                                                                                    "label": null,
                                                                                                    "expression": {
                                                                                                        "node_type": "MethodInvocation",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "dataNodesToReport",
                                                                                                        "selectors": [],
                                                                                                        "type_arguments": null,
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "node_type": "MemberReference",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "",
                                                                                                                "selectors": [],
                                                                                                                "member": "currentNodeAddr"
                                                                                                            }
                                                                                                        ],
                                                                                                        "member": "add"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "else_statement": {
                                                                                            "node_type": "BlockStatement",
                                                                                            "label": null,
                                                                                            "statements": [
                                                                                                {
                                                                                                    "node_type": "StatementExpression",
                                                                                                    "label": null,
                                                                                                    "expression": {
                                                                                                        "node_type": "MethodInvocation",
                                                                                                        "prefix_operators": [],
                                                                                                        "postfix_operators": [],
                                                                                                        "qualifier": "log",
                                                                                                        "selectors": [],
                                                                                                        "type_arguments": null,
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "node_type": "MethodInvocation",
                                                                                                                "prefix_operators": [],
                                                                                                                "postfix_operators": [],
                                                                                                                "qualifier": "String",
                                                                                                                "selectors": [],
                                                                                                                "type_arguments": null,
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "node_type": "Literal",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": null,
                                                                                                                        "selectors": [],
                                                                                                                        "value": "\"Not queueing Datanode <%s> for block report; numBlocks = %d\""
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "currentNodeAddr"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "node_type": "MemberReference",
                                                                                                                        "prefix_operators": [],
                                                                                                                        "postfix_operators": [],
                                                                                                                        "qualifier": "",
                                                                                                                        "selectors": [],
                                                                                                                        "member": "numBlocks"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "member": "format"
                                                                                                            }
                                                                                                        ],
                                                                                                        "member": "debug"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "else_statement": null
                                                                        }
                                                                    ]
                                                                },
                                                                "else_statement": null
                                                            }
                                                        }
                                                    ]
                                                },
                                                "else_statement": null
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "MemberReference",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "",
                                "selectors": [],
                                "member": "dataNodesToReport"
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": "/**\n   * Fetch a value from the launched NameNode's JMX.\n   *\n   * @param nameNodeProperties The set of properties containing information\n   *                           about the NameNode.\n   * @param jmxBeanQuery The JMX bean query to execute; should return a\n   *                     JMX property matching {@code jmxProperty}.\n   * @param property The name of the JMX property whose value should be polled.\n   * @return The value associated with the property.\n   */",
                    "modifiers": [
                        "static"
                    ],
                    "annotations": [],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "name": "fetchNameNodeJMXValue",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Properties",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "nameNodeProperties",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "jmxBeanQuery",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "property",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException"
                    ],
                    "body": [
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "URI",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "nnWebUri",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "nameNodeProperties"
                                            }
                                        ],
                                        "member": "getNameNodeWebUri"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "URL",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "queryURL",
                                    "dimensions": [],
                                    "initializer": null
                                }
                            ]
                        },
                        {
                            "node_type": "TryStatement",
                            "label": null,
                            "resources": null,
                            "block": [
                                {
                                    "node_type": "StatementExpression",
                                    "label": null,
                                    "expression": {
                                        "node_type": "Assignment",
                                        "expressionl": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "queryURL"
                                        },
                                        "value": {
                                            "node_type": "ClassCreator",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "type": {
                                                "node_type": "ReferenceType",
                                                "name": "URL",
                                                "dimensions": null,
                                                "arguments": null,
                                                "sub_type": null
                                            },
                                            "constructor_type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "nnWebUri",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [],
                                                    "member": "getScheme"
                                                },
                                                {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "nnWebUri",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [],
                                                    "member": "getHost"
                                                },
                                                {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "nnWebUri",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [],
                                                    "member": "getPort"
                                                },
                                                {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "+",
                                                    "operandl": {
                                                        "node_type": "Literal",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": null,
                                                        "selectors": [],
                                                        "value": "\"/jmx?qry=\""
                                                    },
                                                    "operandr": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "jmxBeanQuery"
                                                    }
                                                }
                                            ],
                                            "body": null
                                        },
                                        "type": "="
                                    }
                                }
                            ],
                            "catches": [
                                {
                                    "node_type": "CatchClause",
                                    "label": null,
                                    "parameter": {
                                        "node_type": "CatchClauseParameter",
                                        "modifiers": null,
                                        "annotations": null,
                                        "types": [
                                            "MalformedURLException"
                                        ],
                                        "name": "e"
                                    },
                                    "block": [
                                        {
                                            "node_type": "ThrowStatement",
                                            "label": null,
                                            "expression": {
                                                "node_type": "ClassCreator",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": null,
                                                "selectors": [],
                                                "type": {
                                                    "node_type": "ReferenceType",
                                                    "name": "IllegalArgumentException",
                                                    "dimensions": null,
                                                    "arguments": null,
                                                    "sub_type": null
                                                },
                                                "constructor_type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "BinaryOperation",
                                                        "operator": "+",
                                                        "operandl": {
                                                            "node_type": "BinaryOperation",
                                                            "operator": "+",
                                                            "operandl": {
                                                                "node_type": "BinaryOperation",
                                                                "operator": "+",
                                                                "operandl": {
                                                                    "node_type": "BinaryOperation",
                                                                    "operator": "+",
                                                                    "operandl": {
                                                                        "node_type": "Literal",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": null,
                                                                        "selectors": [],
                                                                        "value": "\"Invalid JMX query: \\\"\""
                                                                    },
                                                                    "operandr": {
                                                                        "node_type": "MemberReference",
                                                                        "prefix_operators": [],
                                                                        "postfix_operators": [],
                                                                        "qualifier": "",
                                                                        "selectors": [],
                                                                        "member": "jmxBeanQuery"
                                                                    }
                                                                },
                                                                "operandr": {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "\"\\\" against \""
                                                                }
                                                            },
                                                            "operandr": {
                                                                "node_type": "Literal",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": null,
                                                                "selectors": [],
                                                                "value": "\"NameNode URI: \""
                                                            }
                                                        },
                                                        "operandr": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "nnWebUri"
                                                        }
                                                    }
                                                ],
                                                "body": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "finally_block": null
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "HttpURLConnection",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "conn",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "Cast",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "HttpURLConnection",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "expression": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "queryURL",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [],
                                            "member": "openConnection"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "BinaryOperation",
                                "operator": "!=",
                                "operandl": {
                                    "node_type": "MethodInvocation",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "conn",
                                    "selectors": [],
                                    "type_arguments": null,
                                    "arguments": [],
                                    "member": "getResponseCode"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "200"
                                }
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "ThrowStatement",
                                        "label": null,
                                        "expression": {
                                            "node_type": "ClassCreator",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "type": {
                                                "node_type": "ReferenceType",
                                                "name": "IOException",
                                                "dimensions": null,
                                                "arguments": null,
                                                "sub_type": null
                                            },
                                            "constructor_type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "+",
                                                    "operandl": {
                                                        "node_type": "Literal",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": null,
                                                        "selectors": [],
                                                        "value": "\"Unable to retrieve JMX: \""
                                                    },
                                                    "operandr": {
                                                        "node_type": "MethodInvocation",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "conn",
                                                        "selectors": [],
                                                        "type_arguments": null,
                                                        "arguments": [],
                                                        "member": "getResponseMessage"
                                                    }
                                                }
                                            ],
                                            "body": null
                                        }
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "InputStream",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "in",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "conn",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [],
                                        "member": "getInputStream"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "JsonFactory",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "fac",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "ClassCreator",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "JsonFactory",
                                            "dimensions": null,
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "constructor_type_arguments": null,
                                        "arguments": [],
                                        "body": null
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "JsonParser",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "parser",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "fac",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "in"
                                            }
                                        ],
                                        "member": "createParser"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "BinaryOperation",
                                "operator": "||",
                                "operandl": {
                                    "node_type": "BinaryOperation",
                                    "operator": "||",
                                    "operandl": {
                                        "node_type": "BinaryOperation",
                                        "operator": "||",
                                        "operandl": {
                                            "node_type": "BinaryOperation",
                                            "operator": "||",
                                            "operandl": {
                                                "node_type": "BinaryOperation",
                                                "operator": "!=",
                                                "operandl": {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "parser",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [],
                                                    "member": "nextToken"
                                                },
                                                "operandr": {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "JsonToken",
                                                    "selectors": [],
                                                    "member": "START_OBJECT"
                                                }
                                            },
                                            "operandr": {
                                                "node_type": "BinaryOperation",
                                                "operator": "!=",
                                                "operandl": {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "parser",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [],
                                                    "member": "nextToken"
                                                },
                                                "operandr": {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "JsonToken",
                                                    "selectors": [],
                                                    "member": "FIELD_NAME"
                                                }
                                            }
                                        },
                                        "operandr": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [
                                                "!"
                                            ],
                                            "postfix_operators": [],
                                            "qualifier": "parser",
                                            "selectors": [
                                                {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": null,
                                                    "postfix_operators": null,
                                                    "qualifier": null,
                                                    "selectors": null,
                                                    "type_arguments": null,
                                                    "arguments": [
                                                        {
                                                            "node_type": "Literal",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": null,
                                                            "selectors": [],
                                                            "value": "\"beans\""
                                                        }
                                                    ],
                                                    "member": "equals"
                                                }
                                            ],
                                            "type_arguments": null,
                                            "arguments": [],
                                            "member": "getCurrentName"
                                        }
                                    },
                                    "operandr": {
                                        "node_type": "BinaryOperation",
                                        "operator": "!=",
                                        "operandl": {
                                            "node_type": "MethodInvocation",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "parser",
                                            "selectors": [],
                                            "type_arguments": null,
                                            "arguments": [],
                                            "member": "nextToken"
                                        },
                                        "operandr": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "JsonToken",
                                            "selectors": [],
                                            "member": "START_ARRAY"
                                        }
                                    }
                                },
                                "operandr": {
                                    "node_type": "BinaryOperation",
                                    "operator": "!=",
                                    "operandl": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "parser",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [],
                                        "member": "nextToken"
                                    },
                                    "operandr": {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "JsonToken",
                                        "selectors": [],
                                        "member": "START_OBJECT"
                                    }
                                }
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "ThrowStatement",
                                        "label": null,
                                        "expression": {
                                            "node_type": "ClassCreator",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "type": {
                                                "node_type": "ReferenceType",
                                                "name": "IOException",
                                                "dimensions": null,
                                                "arguments": null,
                                                "sub_type": null
                                            },
                                            "constructor_type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "+",
                                                    "operandl": {
                                                        "node_type": "Literal",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": null,
                                                        "selectors": [],
                                                        "value": "\"Unexpected format of JMX JSON response for: \""
                                                    },
                                                    "operandr": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "jmxBeanQuery"
                                                    }
                                                }
                                            ],
                                            "body": null
                                        }
                                    }
                                ]
                            },
                            "else_statement": null
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "int",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "objectDepth",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "1"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "ret",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "Literal",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": null,
                                        "selectors": [],
                                        "value": "null"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "WhileStatement",
                            "label": null,
                            "condition": {
                                "node_type": "BinaryOperation",
                                "operator": ">",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "objectDepth"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "0"
                                }
                            },
                            "body": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "LocalVariableDeclaration",
                                        "modifiers": [],
                                        "annotations": [],
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "JsonToken",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "declarators": [
                                            {
                                                "node_type": "VariableDeclarator",
                                                "name": "tok",
                                                "dimensions": [],
                                                "initializer": {
                                                    "node_type": "MethodInvocation",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "parser",
                                                    "selectors": [],
                                                    "type_arguments": null,
                                                    "arguments": [],
                                                    "member": "nextToken"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "node_type": "IfStatement",
                                        "label": null,
                                        "condition": {
                                            "node_type": "BinaryOperation",
                                            "operator": "==",
                                            "operandl": {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "",
                                                "selectors": [],
                                                "member": "tok"
                                            },
                                            "operandr": {
                                                "node_type": "MemberReference",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "JsonToken",
                                                "selectors": [],
                                                "member": "START_OBJECT"
                                            }
                                        },
                                        "then_statement": {
                                            "node_type": "BlockStatement",
                                            "label": null,
                                            "statements": [
                                                {
                                                    "node_type": "StatementExpression",
                                                    "label": null,
                                                    "expression": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [
                                                            "++"
                                                        ],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "objectDepth"
                                                    }
                                                }
                                            ]
                                        },
                                        "else_statement": {
                                            "node_type": "IfStatement",
                                            "label": null,
                                            "condition": {
                                                "node_type": "BinaryOperation",
                                                "operator": "==",
                                                "operandl": {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "",
                                                    "selectors": [],
                                                    "member": "tok"
                                                },
                                                "operandr": {
                                                    "node_type": "MemberReference",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": "JsonToken",
                                                    "selectors": [],
                                                    "member": "END_OBJECT"
                                                }
                                            },
                                            "then_statement": {
                                                "node_type": "BlockStatement",
                                                "label": null,
                                                "statements": [
                                                    {
                                                        "node_type": "StatementExpression",
                                                        "label": null,
                                                        "expression": {
                                                            "node_type": "MemberReference",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [
                                                                "--"
                                                            ],
                                                            "qualifier": "",
                                                            "selectors": [],
                                                            "member": "objectDepth"
                                                        }
                                                    }
                                                ]
                                            },
                                            "else_statement": {
                                                "node_type": "IfStatement",
                                                "label": null,
                                                "condition": {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "==",
                                                    "operandl": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "tok"
                                                    },
                                                    "operandr": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "JsonToken",
                                                        "selectors": [],
                                                        "member": "FIELD_NAME"
                                                    }
                                                },
                                                "then_statement": {
                                                    "node_type": "BlockStatement",
                                                    "label": null,
                                                    "statements": [
                                                        {
                                                            "node_type": "IfStatement",
                                                            "label": null,
                                                            "condition": {
                                                                "node_type": "MethodInvocation",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "parser",
                                                                "selectors": [
                                                                    {
                                                                        "node_type": "MethodInvocation",
                                                                        "prefix_operators": null,
                                                                        "postfix_operators": null,
                                                                        "qualifier": null,
                                                                        "selectors": null,
                                                                        "type_arguments": null,
                                                                        "arguments": [
                                                                            {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "property"
                                                                            }
                                                                        ],
                                                                        "member": "equals"
                                                                    }
                                                                ],
                                                                "type_arguments": null,
                                                                "arguments": [],
                                                                "member": "getCurrentName"
                                                            },
                                                            "then_statement": {
                                                                "node_type": "BlockStatement",
                                                                "label": null,
                                                                "statements": [
                                                                    {
                                                                        "node_type": "StatementExpression",
                                                                        "label": null,
                                                                        "expression": {
                                                                            "node_type": "MethodInvocation",
                                                                            "prefix_operators": [],
                                                                            "postfix_operators": [],
                                                                            "qualifier": "parser",
                                                                            "selectors": [],
                                                                            "type_arguments": null,
                                                                            "arguments": [],
                                                                            "member": "nextToken"
                                                                        }
                                                                    },
                                                                    {
                                                                        "node_type": "StatementExpression",
                                                                        "label": null,
                                                                        "expression": {
                                                                            "node_type": "Assignment",
                                                                            "expressionl": {
                                                                                "node_type": "MemberReference",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "",
                                                                                "selectors": [],
                                                                                "member": "ret"
                                                                            },
                                                                            "value": {
                                                                                "node_type": "MethodInvocation",
                                                                                "prefix_operators": [],
                                                                                "postfix_operators": [],
                                                                                "qualifier": "parser",
                                                                                "selectors": [],
                                                                                "type_arguments": null,
                                                                                "arguments": [],
                                                                                "member": "getText"
                                                                            },
                                                                            "type": "="
                                                                        }
                                                                    },
                                                                    {
                                                                        "node_type": "BreakStatement",
                                                                        "label": null,
                                                                        "goto": null
                                                                    }
                                                                ]
                                                            },
                                                            "else_statement": null
                                                        }
                                                    ]
                                                },
                                                "else_statement": null
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "parser",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "close"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "in",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "close"
                            }
                        },
                        {
                            "node_type": "StatementExpression",
                            "label": null,
                            "expression": {
                                "node_type": "MethodInvocation",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": "conn",
                                "selectors": [],
                                "type_arguments": null,
                                "arguments": [],
                                "member": "disconnect"
                            }
                        },
                        {
                            "node_type": "IfStatement",
                            "label": null,
                            "condition": {
                                "node_type": "BinaryOperation",
                                "operator": "==",
                                "operandl": {
                                    "node_type": "MemberReference",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": "",
                                    "selectors": [],
                                    "member": "ret"
                                },
                                "operandr": {
                                    "node_type": "Literal",
                                    "prefix_operators": [],
                                    "postfix_operators": [],
                                    "qualifier": null,
                                    "selectors": [],
                                    "value": "null"
                                }
                            },
                            "then_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "ThrowStatement",
                                        "label": null,
                                        "expression": {
                                            "node_type": "ClassCreator",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": null,
                                            "selectors": [],
                                            "type": {
                                                "node_type": "ReferenceType",
                                                "name": "IOException",
                                                "dimensions": null,
                                                "arguments": null,
                                                "sub_type": null
                                            },
                                            "constructor_type_arguments": null,
                                            "arguments": [
                                                {
                                                    "node_type": "BinaryOperation",
                                                    "operator": "+",
                                                    "operandl": {
                                                        "node_type": "BinaryOperation",
                                                        "operator": "+",
                                                        "operandl": {
                                                            "node_type": "BinaryOperation",
                                                            "operator": "+",
                                                            "operandl": {
                                                                "node_type": "Literal",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": null,
                                                                "selectors": [],
                                                                "value": "\"Property \""
                                                            },
                                                            "operandr": {
                                                                "node_type": "MemberReference",
                                                                "prefix_operators": [],
                                                                "postfix_operators": [],
                                                                "qualifier": "",
                                                                "selectors": [],
                                                                "member": "property"
                                                            }
                                                        },
                                                        "operandr": {
                                                            "node_type": "Literal",
                                                            "prefix_operators": [],
                                                            "postfix_operators": [],
                                                            "qualifier": null,
                                                            "selectors": [],
                                                            "value": "\" not found within \""
                                                        }
                                                    },
                                                    "operandr": {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "jmxBeanQuery"
                                                    }
                                                }
                                            ],
                                            "body": null
                                        }
                                    }
                                ]
                            },
                            "else_statement": {
                                "node_type": "BlockStatement",
                                "label": null,
                                "statements": [
                                    {
                                        "node_type": "ReturnStatement",
                                        "label": null,
                                        "expression": {
                                            "node_type": "MemberReference",
                                            "prefix_operators": [],
                                            "postfix_operators": [],
                                            "qualifier": "",
                                            "selectors": [],
                                            "member": "ret"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "type_parameters": null,
            "extends": null,
            "implements": null
        }
    ]
}