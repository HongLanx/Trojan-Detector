{
    "node_type": "CompilationUnit",
    "package": {
        "node_type": "PackageDeclaration",
        "modifiers": null,
        "annotations": null,
        "documentation": "/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */",
        "name": "org.apache.hadoop.tools.dynamometer.workloadgenerator.audit"
    },
    "imports": [
        {
            "node_type": "Import",
            "path": "java.io.IOException",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "java.util.function.Function",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.conf.Configuration",
            "static": false,
            "wildcard": false
        },
        {
            "node_type": "Import",
            "path": "org.apache.hadoop.io.Text",
            "static": false,
            "wildcard": false
        }
    ],
    "types": [
        {
            "node_type": "ClassDeclaration",
            "modifiers": [
                "public"
            ],
            "annotations": [],
            "documentation": "/**\n * This {@link AuditCommandParser} is used to read commands assuming that the\n * input was generated by a Hive query storing uncompressed output files, in\n * which fields should be separated by the start-of-heading (U+0001) character.\n * The fields available should be, in order:\n *\n * <pre>\n *   relativeTimestampMs,ugi,command,src,dest,sourceIP\n * </pre>\n *\n * Where relativeTimestampMs represents the time elapsed between the start of\n * the audit log and the occurrence of the audit event. Assuming your audit logs\n * are available in Hive, this can be generated with a query looking like:\n *\n * <pre>\n *   INSERT OVERWRITE DIRECTORY '${outputPath}'\n *   SELECT (timestamp - ${startTime} AS relTime, ugi, cmd, src, dst, ip\n *   FROM '${auditLogTableLocation}'\n *   WHERE\n *     timestamp {@literal >=} ${startTime}\n *     AND timestamp {@literal <} ${endTime}\n *   DISTRIBUTE BY src\n *   SORT BY relTime ASC;\n * </pre>\n *\n * Note that the sorting step is important; events in each distinct file must be\n * in time-ascending order.\n */",
            "name": "AuditLogHiveTableParser",
            "body": [
                {
                    "node_type": "FieldDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "static",
                        "private",
                        "final"
                    ],
                    "annotations": [],
                    "type": {
                        "node_type": "ReferenceType",
                        "name": "String",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "declarators": [
                        {
                            "node_type": "VariableDeclarator",
                            "name": "FIELD_SEPARATOR",
                            "dimensions": [],
                            "initializer": {
                                "node_type": "Literal",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "value": "\"\u0001\""
                            }
                        }
                    ]
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "public"
                    ],
                    "annotations": [
                        {
                            "node_type": "Annotation",
                            "name": "Override",
                            "element": null
                        }
                    ],
                    "type_parameters": null,
                    "return_type": null,
                    "name": "initialize",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Configuration",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "conf",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException"
                    ],
                    "body": []
                },
                {
                    "node_type": "MethodDeclaration",
                    "documentation": null,
                    "modifiers": [
                        "public"
                    ],
                    "annotations": [
                        {
                            "node_type": "Annotation",
                            "name": "Override",
                            "element": null
                        }
                    ],
                    "type_parameters": null,
                    "return_type": {
                        "node_type": "ReferenceType",
                        "name": "AuditReplayCommand",
                        "dimensions": [],
                        "arguments": null,
                        "sub_type": null
                    },
                    "name": "parse",
                    "parameters": [
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Text",
                                "dimensions": [],
                                "arguments": null,
                                "sub_type": null
                            },
                            "name": "inputLine",
                            "varargs": false
                        },
                        {
                            "node_type": "FormalParameter",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "Function",
                                "dimensions": [],
                                "arguments": [
                                    {
                                        "node_type": "TypeArgument",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "Long",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "pattern_type": null
                                    },
                                    {
                                        "node_type": "TypeArgument",
                                        "type": {
                                            "node_type": "ReferenceType",
                                            "name": "Long",
                                            "dimensions": [],
                                            "arguments": null,
                                            "sub_type": null
                                        },
                                        "pattern_type": null
                                    }
                                ],
                                "sub_type": null
                            },
                            "name": "relativeToAbsolute",
                            "varargs": false
                        }
                    ],
                    "throws": [
                        "IOException"
                    ],
                    "body": [
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "ReferenceType",
                                "name": "String",
                                "dimensions": [
                                    null
                                ],
                                "arguments": null,
                                "sub_type": null
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "fields",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "inputLine",
                                        "selectors": [
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": null,
                                                "postfix_operators": null,
                                                "qualifier": null,
                                                "selectors": null,
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [],
                                                        "member": "FIELD_SEPARATOR"
                                                    }
                                                ],
                                                "member": "split"
                                            }
                                        ],
                                        "type_arguments": null,
                                        "arguments": [],
                                        "member": "toString"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "LocalVariableDeclaration",
                            "modifiers": [],
                            "annotations": [],
                            "type": {
                                "node_type": "BasicType",
                                "name": "long",
                                "dimensions": []
                            },
                            "declarators": [
                                {
                                    "node_type": "VariableDeclarator",
                                    "name": "absoluteTimestamp",
                                    "dimensions": [],
                                    "initializer": {
                                        "node_type": "MethodInvocation",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "relativeToAbsolute",
                                        "selectors": [],
                                        "type_arguments": null,
                                        "arguments": [
                                            {
                                                "node_type": "MethodInvocation",
                                                "prefix_operators": [],
                                                "postfix_operators": [],
                                                "qualifier": "Long",
                                                "selectors": [],
                                                "type_arguments": null,
                                                "arguments": [
                                                    {
                                                        "node_type": "MemberReference",
                                                        "prefix_operators": [],
                                                        "postfix_operators": [],
                                                        "qualifier": "",
                                                        "selectors": [
                                                            {
                                                                "node_type": "ArraySelector",
                                                                "index": {
                                                                    "node_type": "Literal",
                                                                    "prefix_operators": [],
                                                                    "postfix_operators": [],
                                                                    "qualifier": null,
                                                                    "selectors": [],
                                                                    "value": "0"
                                                                }
                                                            }
                                                        ],
                                                        "member": "fields"
                                                    }
                                                ],
                                                "member": "parseLong"
                                            }
                                        ],
                                        "member": "apply"
                                    }
                                }
                            ]
                        },
                        {
                            "node_type": "ReturnStatement",
                            "label": null,
                            "expression": {
                                "node_type": "ClassCreator",
                                "prefix_operators": [],
                                "postfix_operators": [],
                                "qualifier": null,
                                "selectors": [],
                                "type": {
                                    "node_type": "ReferenceType",
                                    "name": "AuditReplayCommand",
                                    "dimensions": null,
                                    "arguments": null,
                                    "sub_type": null
                                },
                                "constructor_type_arguments": null,
                                "arguments": [
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [],
                                        "member": "absoluteTimestamp"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [
                                            {
                                                "node_type": "ArraySelector",
                                                "index": {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "1"
                                                }
                                            }
                                        ],
                                        "member": "fields"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [
                                            {
                                                "node_type": "ArraySelector",
                                                "index": {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "2"
                                                }
                                            }
                                        ],
                                        "member": "fields"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [
                                            {
                                                "node_type": "ArraySelector",
                                                "index": {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "3"
                                                }
                                            }
                                        ],
                                        "member": "fields"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [
                                            {
                                                "node_type": "ArraySelector",
                                                "index": {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "4"
                                                }
                                            }
                                        ],
                                        "member": "fields"
                                    },
                                    {
                                        "node_type": "MemberReference",
                                        "prefix_operators": [],
                                        "postfix_operators": [],
                                        "qualifier": "",
                                        "selectors": [
                                            {
                                                "node_type": "ArraySelector",
                                                "index": {
                                                    "node_type": "Literal",
                                                    "prefix_operators": [],
                                                    "postfix_operators": [],
                                                    "qualifier": null,
                                                    "selectors": [],
                                                    "value": "5"
                                                }
                                            }
                                        ],
                                        "member": "fields"
                                    }
                                ],
                                "body": null
                            }
                        }
                    ]
                }
            ],
            "type_parameters": null,
            "extends": null,
            "implements": [
                {
                    "node_type": "ReferenceType",
                    "name": "AuditCommandParser",
                    "dimensions": [],
                    "arguments": null,
                    "sub_type": null
                }
            ]
        }
    ]
}